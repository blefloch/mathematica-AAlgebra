Notebook[{
Cell["\<\
SSAlgebra implements noncommutative algebras with various commutation \
relations (SS stands for super symmetry, but the package is more general).  \
It turns out that using the NCAlgebra package is not so helpful.  To install \
SSAlgebra I put SSAlgebra.wl in a directory SSAlgebra\
\>", "Text",
 CellChangeTimes->{{3.6731859217284694`*^9, 3.6731859496154695`*^9}, {
  3.6731861413324695`*^9, 3.673186209936469*^9}, {3.6733719870443015`*^9, 
  3.6733720115887556`*^9}, {3.676123775991975*^9, 3.6761238506847897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<SSAlgebra`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.676123749798984*^9, 3.676123754099452*^9}}],

Cell[BoxData["\<\"The SSAlgebra package provides the commands SSExpand, \
SSCollect, SSMonomials, SSValidate, SSClass, SSOfClassQ, SSOrder, \
SSClassOrder, SSOrderWithinClass, SSDeclareProduct, SSDeclareCommutator, \
SSDeclareAnticommutator, PartialD, $SSMaxPower\"\>"], "Output",
 CellChangeTimes->{3.6762067272602777`*^9, 3.6762072001431913`*^9, 
  3.676210031736517*^9, 3.67621053946483*^9, 3.676210745650476*^9, 
  3.676216898183825*^9, 3.676218253986273*^9, 3.6762184035987577`*^9, 
  3.676218463924448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Subsection",
 CellChangeTimes->{{3.676205059728133*^9, 3.676205060873748*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"On", "[", "Assert", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"x", "**", 
     RowBox[{"(", 
      RowBox[{"y", "**", 
       RowBox[{"(", 
        RowBox[{"z", "**", "t"}], ")"}], "**", "u"}], ")"}], "**", "v"}], "===", 
    RowBox[{"x", "**", "y", "**", "z", "**", "t", "**", "u", "**", "v"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"x", "^", "m"}]}], ")"}], "**", 
      RowBox[{"x", "^", "n"}]}], "]"}], "===", 
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"n", "-", "m"}], ")"}]}]}], "]"}], ";", 
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Gamma", "[", "Pi", "]"}]}], ")"}], "**", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"Gamma", "[", "Pi", "]"}]}], ")"}]}], "]"}], "===", 
    RowBox[{"2", "+", 
     RowBox[{"3", " ", 
      RowBox[{"Gamma", "[", "\[Pi]", "]"}]}], "+", 
     SuperscriptBox[
      RowBox[{"Gamma", "[", "\[Pi]", "]"}], "2"]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", "Pi", "]"}], "+", "2", "+", 
        RowBox[{"PartialD", "[", "x", "]"}]}], ")"}], "**", 
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}]}], "]"}], "===", 
    RowBox[{
     RowBox[{"2", " ", "x"}], "+", 
     RowBox[{"2", " ", "y"}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"Gamma", "[", "\[Pi]", "]"}]}], "+", 
     RowBox[{"y", " ", 
      RowBox[{"Gamma", "[", "\[Pi]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"PartialD", "[", "x", "]"}], "**", "x"}], "+", 
     RowBox[{
      RowBox[{"PartialD", "[", "x", "]"}], "**", "y"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{"x", ",", "x"}], "]"}], "===", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xi", "**", "y"}], "+", 
       RowBox[{"xi", "**", "z"}]}], ",", "xi"}], "]"}], "===", 
    RowBox[{"xi", "**", 
     RowBox[{"(", 
      RowBox[{"y", "+", "z"}], ")"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{"y", "+", 
       RowBox[{"y", "**", "y"}], "+", 
       RowBox[{"x", "**", "y"}], "+", 
       RowBox[{"x", "**", "z", "**", "y"}], "+", 
       RowBox[{"x", "**", "x", "**", "z", "**", "y", "**", "y"}], "+", 
       RowBox[{"x", "**", "x", "**", "x", "**", "y", "**", "y"}]}], ",", "x", 
      ",", "h"}], "]"}], "===", 
    RowBox[{
     RowBox[{"h", "[", 
      RowBox[{"y", "+", 
       RowBox[{"y", "^", "2"}]}], "]"}], "+", 
     RowBox[{"x", "**", 
      RowBox[{"h", "[", 
       RowBox[{"y", "+", 
        RowBox[{"z", "**", "y"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "**", 
      RowBox[{"h", "[", 
       RowBox[{"z", "**", 
        RowBox[{"y", "^", "2"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "**", 
      RowBox[{"h", "[", 
       RowBox[{"y", "^", "2"}], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "y"}], "+", 
       RowBox[{"2", 
        RowBox[{"y", "**", "z"}]}], "+", 
       RowBox[{"5", 
        RowBox[{"x", "**", "y"}]}], "-", 
       RowBox[{"x", "**", "z", "**", "y"}], "+", 
       RowBox[{"9", 
        RowBox[{"x", "**", "x", "**", "z", "**", "y", "**", "y"}]}], "+", 
       RowBox[{"8", 
        RowBox[{"x", "**", "x", "**", "x", "**", "y", "**", "y"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "===", 
    RowBox[{
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "**", 
       RowBox[{"y", "^", "2"}]}]}], "+", 
     RowBox[{"y", "**", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "z"}]}], ")"}]}], "+", 
     RowBox[{"x", "**", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", "y"}], "-", 
        RowBox[{"z", "**", "y"}]}], ")"}]}], "+", 
     RowBox[{"9", " ", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "**", "z", "**", 
       RowBox[{"y", "^", "2"}]}]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "y"}], "+", 
       RowBox[{"2", 
        RowBox[{"y", "**", "z"}]}], "+", 
       RowBox[{"5", 
        RowBox[{"x", "**", "y"}]}], "-", 
       RowBox[{"x", "**", "z", "**", "y"}], "+", 
       RowBox[{"9", 
        RowBox[{"x", "**", "x", "**", "z", "**", "y", "**", "y"}]}], "+", 
       RowBox[{"8", 
        RowBox[{"x", "**", "x", "**", "x", "**", "y", "**", "y"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "x"}], "}"}]}], "]"}], "===", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"y", "**", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "z"}]}], ")"}]}], "+", 
     RowBox[{"x", "**", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"5", "y"}], "-", 
        RowBox[{"z", "**", "y"}]}], ")"}]}], "+", 
     RowBox[{"8", 
      RowBox[{
       RowBox[{"x", "^", "3"}], "**", 
       RowBox[{"y", "^", "2"}]}]}], "+", 
     RowBox[{"9", 
      RowBox[{
       RowBox[{"x", "^", "2"}], "**", "z", "**", 
       RowBox[{"y", "^", "2"}]}]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{"x", "**", "z", "**", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "**", "y", "**", "z"}], "+", "3"}], 
        ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "z", ",", "x"}], "}"}], ",", "h"}], "]"}], "===", 
    RowBox[{"x", "**", "z", "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"h", "[", "3", "]"}], "+", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "**", 
        RowBox[{"h", "[", 
         RowBox[{"y", "**", "z"}], "]"}]}]}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{"u", "**", "t", "**", "v", "**", "w"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "|", "u"}], ",", "_", ",", 
        RowBox[{"v", "|", "w"}]}], "}"}]}], "]"}], " ", "===", 
    RowBox[{"u", "**", "t", "**", "v", "**", "w"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSMonomials", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       RowBox[{"2", 
        RowBox[{"x", "**", "y", "**", "x", "**", "t"}]}], "+", 
       RowBox[{"y", "**", "z", "**", "y"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "_", ",", 
        RowBox[{"y", "|", "x"}]}], "}"}]}], "]"}], "===", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"1", "\[Rule]", "1"}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"1", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"y", "\[Rule]", 
         RowBox[{"y", "**", "z"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"1", "\[Rule]", 
         RowBox[{"2", " ", 
          RowBox[{"y", "**", "x", "**", "t"}]}]}], 
        "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSMonomials", "[", 
     RowBox[{
      RowBox[{"u", "**", "t", "**", "v", "**", "w"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"t", "|", "u"}], ",", "_", ",", 
        RowBox[{"v", "|", "w"}]}], "}"}]}], "]"}], " ", "===", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"u", "**", "t"}], "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"v", "**", "w"}], "\[Rule]", "1"}], "|>"}]}], "|>"}]}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSValidate", "[", 
     RowBox[{"x", "**", 
      RowBox[{"(", 
       RowBox[{"y", " ", "2"}], ")"}]}], "]"}], "&&", 
    RowBox[{"Not", "[", 
     RowBox[{"SSValidate", "[", 
      RowBox[{"x", " ", "y"}], "]"}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/ciq92Fz0mvHgnrRZyB6cq2eXSuQ7vHRdQHRM6+a
hLUBaS7heWC6VL+XuwNIs7HvB9NPzSbldQLp2iylAhCdNDl0ykQg/a0/Fkx/
X5dycQqQvmIldwlEs3b4+E8F0v/teYNANB/DQoW1QFrCZSWYXmDkOG8DkG5Q
DAfTC35e2QyiU+b3bgHR2dqsOzcC6fXss/eBaB/X84dAdEl72WUQzeZdxLkJ
SC9y+w+mV31OFgTR9v9eCYNoOaeFEiDaMfwImGY1ipAF0UHpExVAtJjwNxUQ
3ad/Wg1Ez6t94LAFSPe+LfMF0R6mZ0NAtFfOdTAt9a/j9nYgXbxb+iGIXvRZ
13kXkHZa4QCm1y/lqV2a/NpR8nEzmC6aLRS2Fkj/cH8VC6JP3I0QXwekP7on
gmkAiRnIQg==
  "]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "x", "]"}], "=", "\"\<scalar\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "y", "]"}], "=", "\"\<scalar\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "z", "]"}], "=", "\"\<scalar\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{"x", "**", 
      RowBox[{"(", 
       RowBox[{"y", " ", "z"}], ")"}]}], "]"}], "===", 
    RowBox[{"x", " ", "y", " ", "z"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{"PartialD", "[", "x", "]"}], "**", "x"}], "]"}], "===", 
    RowBox[{"1", "+", 
     RowBox[{"x", "**", 
      RowBox[{"PartialD", "[", "x", "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PartialD", "[", "z", "]"}], "**", 
       RowBox[{"PartialD", "[", "x", "]"}], "**", "y", "**", "x"}], ",", 
      RowBox[{"Only", "\[Rule]", 
       RowBox[{"x", "|", "y"}]}]}], "]"}], "===", 
    RowBox[{
     RowBox[{
      RowBox[{"PartialD", "[", "z", "]"}], "**", 
      RowBox[{"(", 
       RowBox[{"x", " ", "y"}], ")"}], "**", 
      RowBox[{"PartialD", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"PartialD", "[", "z", "]"}], "**", "y"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{"y", " ", 
      RowBox[{
       RowBox[{"PartialD", "[", "x", "]"}], "**", 
       RowBox[{"(", 
        RowBox[{"y", " ", 
         RowBox[{"PartialD", "[", "z", "]"}]}], ")"}]}]}], "]"}], "===", 
    RowBox[{
     RowBox[{"y", "^", "2"}], 
     RowBox[{"PartialD", "[", "x", "]"}], 
     RowBox[{"PartialD", "[", "z", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{"PartialD", "[", "z", "]"}], "**", 
      RowBox[{"PartialD", "[", "x", "]"}], "**", "y", "**", "x"}], "]"}], "===", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", " ", "y"}], ")"}], "**", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"PartialD", "[", "x", "]"}], 
        RowBox[{"PartialD", "[", "z", "]"}]}], ")"}]}], "+", 
     RowBox[{"y", " ", 
      RowBox[{"PartialD", "[", "z", "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{"y", "**", "y", "**", 
      RowBox[{"y", "^", "4"}]}], "]"}], "===", 
    RowBox[{"y", "^", "6"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{"y", "+", 
       RowBox[{"y", "**", "y"}], "+", 
       RowBox[{"x", "**", "y"}], "+", 
       RowBox[{"x", "**", "z", "**", "y"}], "+", 
       RowBox[{"x", "**", "x", "**", "z", "**", "y", "**", "y"}], "+", 
       RowBox[{"x", "**", "x", "**", "x", "**", "y", "**", "y"}]}], ",", "x", 
      ",", "h"}], "]"}], "===", 
    RowBox[{
     RowBox[{"h", "[", 
      RowBox[{"y", "+", 
       RowBox[{"y", "^", "2"}]}], "]"}], "+", 
     RowBox[{"x", " ", 
      RowBox[{"h", "[", 
       RowBox[{"y", "+", 
        RowBox[{"y", " ", "z"}]}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{"h", "[", 
       RowBox[{
        SuperscriptBox["y", "2"], " ", "z"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["x", "3"], 
      RowBox[{"h", "[", 
       SuperscriptBox["y", "2"], "]"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "y"}], "+", 
       RowBox[{"2", 
        RowBox[{"y", "**", "z"}]}], "+", 
       RowBox[{"5", 
        RowBox[{"x", "**", "y"}]}], "-", 
       RowBox[{"x", "**", "z", "**", "y"}], "+", 
       RowBox[{"9", 
        RowBox[{"x", "**", "x", "**", "z", "**", "y", "**", "y"}]}], "+", 
       RowBox[{"8", 
        RowBox[{"x", "**", "x", "**", "x", "**", "y", "**", "y"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "===", 
    RowBox[{
     RowBox[{"8", " ", 
      SuperscriptBox["x", "3"], 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"y", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "z"}]}], ")"}]}], "+", 
     RowBox[{"x", " ", "y", 
      RowBox[{"(", 
       RowBox[{"5", "-", "z"}], ")"}]}], "+", 
     RowBox[{"9", " ", 
      SuperscriptBox["x", "2"], 
      SuperscriptBox["y", "2"], "z"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"3", "y"}], "+", 
       RowBox[{"2", 
        RowBox[{"y", "**", "z"}]}], "+", 
       RowBox[{"5", 
        RowBox[{"x", "**", "y"}]}], "-", 
       RowBox[{"x", "**", "z", "**", "y"}], "+", 
       RowBox[{"9", 
        RowBox[{"x", "**", "x", "**", "z", "**", "y", "**", "y"}]}], "+", 
       RowBox[{"8", 
        RowBox[{"x", "**", "x", "**", "x", "**", "y", "**", "y"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "x"}], "}"}]}], "]"}], "===", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"y", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "z"}], "+", 
        RowBox[{"x", 
         RowBox[{"(", 
          RowBox[{"5", "-", "z"}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["y", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"8", " ", 
         SuperscriptBox["x", "3"]}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["x", "2"], "z"}]}], ")"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSCollect", "[", 
     RowBox[{
      RowBox[{"x", "**", "z", "**", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["x", "2"], "**", "y", "**", "z"}], "+", "3"}], 
        ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "z", ",", "x"}], "}"}], ",", "h"}], "]"}], "===", 
    RowBox[{
     RowBox[{"x", " ", "z", " ", 
      RowBox[{"h", "[", "3", "]"}]}], "+", 
     RowBox[{
      RowBox[{"x", "^", "3"}], " ", 
      RowBox[{"z", "^", "2"}], " ", 
      RowBox[{"h", "[", "y", "]"}]}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{"SSValidate", "[", 
    RowBox[{"x", " ", "y"}], "]"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.675653418190032*^9, 3.6756534189849873`*^9}, {
  3.6756941849048758`*^9, 3.675694204722677*^9}, {3.6756953767905693`*^9, 
  3.675695424325767*^9}, {3.6761220925424547`*^9, 3.6761220969414387`*^9}, {
  3.676139712208626*^9, 3.676139723887227*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Virasoro algebra", "Subsection",
 CellChangeTimes->{{3.676205070102947*^9, 3.676205091887486*^9}}],

Cell["Define the Virasoro algebra, and bras and kets for it.", "Text",
 CellChangeTimes->{{3.675540359926194*^9, 3.6755403794317293`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Ket", ",", "HoldAll"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"Bra", ",", "HoldAll"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "L", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<c\>\"", "\[Rule]", "c"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"L", "[", "]"}], ":=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"L", "[", 
     RowBox[{"a_", ",", "b__"}], "]"}], ":=", 
    RowBox[{"NonCommutativeMultiply", "@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"L", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "^", 
         RowBox[{"Length", "[", "#", "]"}]}], "&"}], "/@", 
       RowBox[{"Split", "[", 
        RowBox[{"{", 
         RowBox[{"a", ",", "b"}], "}"}], "]"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TODO", ":", 
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"-", "1"}], "]"}], "**", 
      RowBox[{"L", "[", 
       RowBox[{"-", "1"}], "]"}]}]}], "\[RuleDelayed]", 
    RowBox[{
     RowBox[{"L", "[", 
      RowBox[{"-", "1"}], "]"}], "^", 
     RowBox[{"2", "!"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", 
    RowBox[{"Ket", "[", "_", "]"}], "]"}], "=", "\"\<ket\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", 
    RowBox[{"L", "[", "_", "]"}], "]"}], "=", "\"\<virasoro\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", 
    RowBox[{"Bra", "[", "_", "]"}], "]"}], "=", "\"\<bra\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SSDeclareCommutator", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"L", "[", "i_", "]"}], ",", 
      RowBox[{"L", "[", "j_", "]"}]}], "}"}], "\[RuleDelayed]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "j"}], ")"}], 
      RowBox[{"L", "[", 
       RowBox[{"i", "+", "j"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"KroneckerDelta", "[", 
       RowBox[{"i", "+", "j"}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"i", "^", "3"}], "-", "i"}], ")"}], 
      RowBox[{
       RowBox[{"OptionValue", "[", 
        RowBox[{"L", ",", "\"\<c\>\""}], "]"}], "/", "12"}]}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SSDeclareProduct", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"i_", "/;", 
        RowBox[{"i", ">", "0"}]}], "]"}], "**", 
      RowBox[{"Ket", "[", "_", "]"}]}], "\[RuleDelayed]", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", "0", "]"}], "**", 
      RowBox[{"Ket", "[", "h_", "]"}]}], "\[RuleDelayed]", 
     RowBox[{"h", "**", 
      RowBox[{"Ket", "[", "h", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"L", "[", 
       RowBox[{"-", "1"}], "]"}], "**", 
      RowBox[{"Ket", "[", "0", "]"}]}], "\[RuleDelayed]", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Bra", "[", "_", "]"}], "**", 
      RowBox[{"L", "[", 
       RowBox[{"i_", "/;", 
        RowBox[{"i", "<", "0"}]}], "]"}]}], "\[RuleDelayed]", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Bra", "[", "h_", "]"}], "**", 
      RowBox[{"L", "[", "0", "]"}]}], "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"Bra", "[", "h", "]"}], "**", "h"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Bra", "[", "0", "]"}], "**", 
      RowBox[{"L", "[", "1", "]"}]}], "\[RuleDelayed]", "0"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Bra", "[", "h_", "]"}], "**", 
      RowBox[{"Ket", "[", "k_", "]"}]}], "\[RuleDelayed]", 
     RowBox[{"KroneckerDelta", "[", 
      RowBox[{"h", ",", "k"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Apply", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "c", "]"}], "=", "\"\<scalar\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "h", "]"}], "=", "\"\<scalar\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "b", "]"}], "=", "\"\<scalar\>\""}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.673399866192055*^9, 3.673399867049141*^9}, {
   3.6734001129227257`*^9, 3.673400141253558*^9}, {3.673400182417674*^9, 
   3.67340031828526*^9}, {3.67340037518995*^9, 3.673400375673998*^9}, {
   3.6734006687863064`*^9, 3.673400671252553*^9}, {3.67340074752918*^9, 
   3.673400749322359*^9}, {3.6734007991773443`*^9, 3.6734008806204877`*^9}, {
   3.67340092644707*^9, 3.6734009407124968`*^9}, {3.675540105898327*^9, 
   3.6755403327312117`*^9}, 3.6755403905090446`*^9, {3.675540432576486*^9, 
   3.675540433084166*^9}, {3.67561915071868*^9, 3.675619150970936*^9}, {
   3.675619790185399*^9, 3.6756198097652187`*^9}, {3.6756198626845293`*^9, 
   3.675620021132926*^9}, {3.675622533778997*^9, 3.675622534083959*^9}, {
   3.67562413702533*^9, 3.675624137631239*^9}, {3.6756982963883142`*^9, 
   3.6756983812811823`*^9}, {3.675698456843631*^9, 3.675698487009684*^9}, {
   3.67569851827721*^9, 3.6756985562727337`*^9}, {3.675698617461835*^9, 
   3.675698668625917*^9}, {3.676122097454053*^9, 3.676122100055232*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "KacMatrix", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KacMatrix", "[", 
    RowBox[{"n_Integer", "/;", 
     RowBox[{"n", "\[GreaterEqual]", "0"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"KacMatrix", "[", "n", "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"SSExpand", "[", 
     RowBox[{"Outer", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Bra", "[", "h", "]"}], "**", "#1", "**", "#2", "**", 
         RowBox[{"Ket", "[", "h", "]"}]}], "&"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{
         RowBox[{"L", "@@", 
          RowBox[{"Reverse", "[", "#", "]"}]}], "&"}], "/@", 
        RowBox[{"IntegerPartitions", "[", "n", "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"L", "@@", 
          RowBox[{"-", "#"}]}], "&"}], "/@", 
        RowBox[{"IntegerPartitions", "[", "n", "]"}]}]}], "]"}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.673401251360558*^9, 3.6734013296163826`*^9}, {
   3.67340138329275*^9, 3.67340144259968*^9}, {3.673401482931713*^9, 
   3.6734014833047504`*^9}, {3.675541091380777*^9, 3.675541091658712*^9}, {
   3.675541142884276*^9, 3.6755411740330267`*^9}, 3.675620400415344*^9, {
   3.675620794380525*^9, 3.6756208712588673`*^9}, {3.675623903312276*^9, 
   3.67562395322873*^9}, {3.6756239970801373`*^9, 3.6756240038604*^9}, 
   3.676122103728588*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Factor", "[", 
       RowBox[{"Det", "[", 
        RowBox[{
         RowBox[{"KacMatrix", "[", "i", "]"}], "/.", 
         RowBox[{"c", "\[RuleDelayed]", 
          RowBox[{"13", "+", 
           RowBox[{"6", 
            RowBox[{"b", "^", "2"}]}], "+", 
           RowBox[{"6", "/", 
            RowBox[{"b", "^", "2"}]}]}]}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "5"}], "}"}]}], "]"}], "===", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", " ", "h"}], ",", 
      FractionBox[
       RowBox[{"2", " ", "h", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", "h"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}]}], 
       SuperscriptBox["b", "2"]], ",", 
      FractionBox[
       RowBox[{"144", " ", 
        SuperscriptBox["h", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], "+", "h"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", "h"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["b", "2"], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}]}], 
       SuperscriptBox["b", "4"]], ",", 
      FractionBox[
       RowBox[{"2304", " ", 
        SuperscriptBox["h", "3"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], "+", "h"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["b", "2"]}], "+", 
           RowBox[{"4", " ", "h"}]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"15", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", "h"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["b", "2"], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"3", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["b", "2"]}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"15", "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"6", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["b", "4"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}]}], 
       SuperscriptBox["b", "10"]], ",", 
      RowBox[{
       FractionBox["1", 
        SuperscriptBox["b", "16"]], "33177600", " ", 
       SuperscriptBox["h", "5"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], "+", "h"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["b", "2"]}], "+", "h"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", "h"}]}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"15", " ", 
          SuperscriptBox["b", "2"]}], "+", 
         RowBox[{"4", " ", "h"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"2", "+", 
          SuperscriptBox["b", "2"], "+", 
          RowBox[{
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["b", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], "3"], " ", 
       RowBox[{"(", 
        RowBox[{"15", "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["b", "2"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["b", "2"], " ", "h"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["b", "2"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["b", "4"]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["b", "2"], " ", "h"}]}], ")"}]}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6755411016668873`*^9, 3.6755411380154343`*^9}, {
  3.675541177920165*^9, 3.675541180709231*^9}, {3.6755647101006317`*^9, 
  3.6755647112664347`*^9}, {3.675591870083994*^9, 3.675591875921013*^9}, {
  3.675697940901642*^9, 3.6756979468497057`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"31.984`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.675697981459157*^9, 3.675698730900001*^9, 
  3.676122799253393*^9, 3.676142212304062*^9, 3.676142825234483*^9, 
  3.67614838889922*^9, 3.676148948235697*^9, 3.676202045767432*^9, 
  3.6762067684930363`*^9, 3.676210072835678*^9, 3.676210579409161*^9, 
  3.676210784851844*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"NullSpace", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"KacMatrix", "[", "i", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"c", "\[RuleDelayed]", 
            RowBox[{"13", "+", 
             RowBox[{"6", 
              RowBox[{"b", "^", "2"}]}], "+", 
             RowBox[{"6", "/", 
              RowBox[{"b", "^", "2"}]}]}]}], ",", 
           RowBox[{"h", "\[RuleDelayed]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], "-", 
             RowBox[{
              RowBox[{"3", "/", "4"}], " ", 
              RowBox[{"b", "^", "2"}]}]}]}]}], "}"}]}], "//", "Expand"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "5"}], "}"}]}], "]"}], "===", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["b", "2"], ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["b", "2"], ",", 
         SuperscriptBox["b", "2"], ",", "1"}], "}"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], ",", 
          RowBox[{"2", " ", 
           SuperscriptBox["b", "2"]}], ",", 
          RowBox[{"-", 
           SuperscriptBox["b", "4"]}], ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          SuperscriptBox["b", "2"], ",", "1", ",", "0"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox["b", "2"]}], "-", 
           SuperscriptBox["b", "4"]}], ",", 
          RowBox[{"6", " ", 
           SuperscriptBox["b", "2"]}], ",", 
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["b", "4"]}], ",", "0", ",", 
          RowBox[{"-", 
           SuperscriptBox["b", "4"]}], ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["b", "2"], ",", "0", ",", 
          SuperscriptBox["b", "2"], ",", "0", ",", 
          SuperscriptBox["b", "2"], ",", "1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          SuperscriptBox["b", "2"], ",", "1", ",", "0", ",", "0", ",", "0"}], 
         "}"}]}], "}"}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.675564833153407*^9, 3.6755648582297487`*^9}, {
  3.675564956264286*^9, 3.67556497461779*^9}, {3.6755918868783197`*^9, 
  3.675591896997974*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"c", "=", 
     RowBox[{"13", "+", 
      RowBox[{"6", 
       RowBox[{"b", "^", "2"}]}], "+", 
      RowBox[{"6", "/", 
       RowBox[{"b", "^", "2"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"km3", "=", 
     RowBox[{"SSExpand", "[", 
      RowBox[{"Outer", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Bra", "[", "h", "]"}], "**", "#1", "**", "#2", "**", 
          RowBox[{"Ket", "[", "h", "]"}]}], "&"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"L", "@@", 
           RowBox[{"Reverse", "[", "#", "]"}]}], "&"}], "/@", 
         RowBox[{"IntegerPartitions", "[", "3", "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"L", "@@", 
           RowBox[{"-", "#"}]}], "&"}], "/@", 
         RowBox[{"IntegerPartitions", "[", "3", "]"}]}]}], "]"}], "]"}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"Assert", "[", 
     RowBox[{
      RowBox[{"km3", "==", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"KacMatrix", "[", "3", "]"}], "/.", 
         RowBox[{
          RowBox[{"HoldPattern", "[", "c", "]"}], "\[Rule]", "c"}]}], ")"}]}],
       "//", "Expand"}], "]"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", "km3"}], "Input",
 CellChangeTimes->{{3.67562014024045*^9, 3.6756202056789427`*^9}, {
   3.675622545052297*^9, 3.675622641875087*^9}, {3.67562402619438*^9, 
   3.675624041141818*^9}, {3.6756241638349457`*^9, 3.6756242557776203`*^9}, 
   3.676122107556945*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"26", "+", 
      FractionBox["12", 
       SuperscriptBox["b", "2"]], "+", 
      RowBox[{"12", " ", 
       SuperscriptBox["b", "2"]}], "+", 
      RowBox[{"6", " ", "h"}]}], ",", 
     RowBox[{"10", " ", "h"}], ",", 
     RowBox[{"24", " ", "h"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", " ", "h"}], ",", 
     RowBox[{
      RowBox[{"21", " ", "h"}], "+", 
      FractionBox[
       RowBox[{"6", " ", "h"}], 
       SuperscriptBox["b", "2"]], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["b", "2"], " ", "h"}], "+", 
      RowBox[{"8", " ", 
       SuperscriptBox["h", "2"]}]}], ",", 
     RowBox[{
      RowBox[{"12", " ", "h"}], "+", 
      RowBox[{"36", " ", 
       SuperscriptBox["h", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"24", " ", "h"}], ",", 
     RowBox[{
      RowBox[{"12", " ", "h"}], "+", 
      RowBox[{"36", " ", 
       SuperscriptBox["h", "2"]}]}], ",", 
     RowBox[{
      RowBox[{"24", " ", "h"}], "+", 
      RowBox[{"72", " ", 
       SuperscriptBox["h", "2"]}], "+", 
      RowBox[{"48", " ", 
       SuperscriptBox["h", "3"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.675620183457971*^9, 3.6756202066497507`*^9}, 
   3.675622432867158*^9, {3.675622561343986*^9, 3.6756226424047127`*^9}, 
   3.675623768226767*^9, {3.6756242480068007`*^9, 3.675624256462442*^9}, 
   3.6756979901709433`*^9, 3.6756987312332497`*^9, 3.676122824316999*^9, 
   3.676142217888131*^9, 3.676142825561488*^9, 3.676148389253875*^9, 
   3.676148948566784*^9, 3.676202046109581*^9, 3.676206768899398*^9, 
   3.676210073251432*^9, 3.676210579880847*^9, 3.676210785265329*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "levelBasis", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"levelBasis", "[", 
     RowBox[{"h_", ",", 
      RowBox[{"n_Integer", "/;", 
       RowBox[{"n", "\[GreaterEqual]", "0"}]}]}], "]"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"L", "@@", 
       RowBox[{"(", 
        RowBox[{"-", "#"}], ")"}]}], "**", 
      RowBox[{"Ket", "[", "h", "]"}]}], "&"}], "/@", 
    RowBox[{"IntegerPartitions", "[", "n", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "nullVectors", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nullVectors", "[", "level_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nullVectors", "[", "level", "]"}], "=", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c", "=", 
        RowBox[{"13", "+", 
         RowBox[{"6", 
          RowBox[{"b", "^", "2"}]}], "+", 
         RowBox[{"6", "/", 
          RowBox[{"b", "^", "2"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nullvecmat", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Lookup", "[", 
                 RowBox[{
                  RowBox[{"SSMonomials", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"L", "[", "i", "]"}], "**", "v"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", 
                    RowBox[{"_L", "|", "_Ket"}]}], "}"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"levelBasis", "[", 
                   RowBox[{"h", ",", 
                    RowBox[{"level", "-", "i"}]}], "]"}], ",", "0"}], "]"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"v", ",", 
               RowBox[{"levelBasis", "[", 
                RowBox[{"h", ",", "level"}], "]"}]}], "}"}]}], "]"}], "]"}]}],
          "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"Assert", "[", 
             RowBox[{"And", "@@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"SSExpand", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"L", "[", "i", "]"}], "**", "nv"}], "/.", 
                   "hsol"}], "]"}], "===", "0"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"SSCollect", "[", 
              RowBox[{"nv", ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", "_L", ",", "_Ket"}], "}"}]}], "]"}], "/.", 
             "hsol"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"hsol", ",", 
             RowBox[{"Solve", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Det", "[", 
                  RowBox[{"nullvecmat", "[", 
                   RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{
                    RowBox[{"Dimensions", "[", "nullvecmat", "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
                 ")"}], "\[Equal]", "0"}], ",", "h"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"nv", ",", 
             RowBox[{
              RowBox[{
               RowBox[{"#", ".", 
                RowBox[{"levelBasis", "[", 
                 RowBox[{"h", ",", "level"}], "]"}]}], "&"}], "/@", 
              RowBox[{"NullSpace", "[", 
               RowBox[{"nullvecmat", "/.", "hsol"}], "]"}]}]}], "}"}]}], 
          "]"}], "]"}]}], "]"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.675700893391625*^9, 3.675700967989068*^9}, {
  3.675701550690914*^9, 3.67570155087602*^9}, {3.6757016124733677`*^9, 
  3.6757016227722673`*^9}, {3.675701666432181*^9, 3.675701681606139*^9}, {
  3.675701732837902*^9, 3.67570174570982*^9}, {3.6757018079073753`*^9, 
  3.675701860275383*^9}, {3.675701958376981*^9, 3.6757020768075933`*^9}, {
  3.675702119997641*^9, 3.6757021212876377`*^9}, {3.676122109428249*^9, 
  3.67612211101656*^9}, {3.6761422816108627`*^9, 3.67614228893548*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"nullVectors", "[", "5", "]"}], "===", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["576", 
             SuperscriptBox["b", "8"]], "+", 
            FractionBox["528", 
             SuperscriptBox["b", "6"]], "+", 
            FractionBox["184", 
             SuperscriptBox["b", "4"]], "+", 
            FractionBox["24", 
             SuperscriptBox["b", "2"]]}], ")"}], " ", 
          RowBox[{"L", "[", 
           RowBox[{"-", "5"}], "]"}]}], "+", 
         SuperscriptBox[
          RowBox[{"L", "[", 
           RowBox[{"-", "1"}], "]"}], "5"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["288", 
               SuperscriptBox["b", "6"]], "+", 
              FractionBox["168", 
               SuperscriptBox["b", "4"]], "+", 
              FractionBox["36", 
               SuperscriptBox["b", "2"]]}], ")"}], " ", 
            RowBox[{"L", "[", 
             RowBox[{"-", "4"}], "]"}]}], ")"}], "**", 
          RowBox[{"L", "[", 
           RowBox[{"-", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["192", 
               SuperscriptBox["b", "6"]], "+", 
              FractionBox["64", 
               SuperscriptBox["b", "4"]]}], ")"}], " ", 
            RowBox[{"L", "[", 
             RowBox[{"-", "3"}], "]"}]}], ")"}], "**", 
          RowBox[{"L", "[", 
           RowBox[{"-", "2"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["84", 
               SuperscriptBox["b", "4"]], "+", 
              FractionBox["30", 
               SuperscriptBox["b", "2"]]}], ")"}], " ", 
            RowBox[{"L", "[", 
             RowBox[{"-", "3"}], "]"}]}], ")"}], "**", 
          SuperscriptBox[
           RowBox[{"L", "[", 
            RowBox[{"-", "1"}], "]"}], "2"]}], "+", 
         RowBox[{"20", " ", 
          RowBox[{
           FractionBox[
            RowBox[{"L", "[", 
             RowBox[{"-", "2"}], "]"}], 
            SuperscriptBox["b", "2"]], "**", 
           SuperscriptBox[
            RowBox[{"L", "[", 
             RowBox[{"-", "1"}], "]"}], "3"]}]}], "+", 
         RowBox[{"64", " ", 
          RowBox[{
           FractionBox[
            SuperscriptBox[
             RowBox[{"L", "[", 
              RowBox[{"-", "2"}], "]"}], "2"], 
            SuperscriptBox["b", "4"]], "**", 
           RowBox[{"L", "[", 
            RowBox[{"-", "1"}], "]"}]}]}]}], ")"}], "**", 
       TemplateBox[{RowBox[{"Evaluate", "[", 
           RowBox[{"-", 
             FractionBox[
              RowBox[{"2", " ", 
                RowBox[{"(", 
                  RowBox[{"3", "+", 
                    SuperscriptBox["b", "2"]}], ")"}]}], 
              SuperscriptBox["b", "2"]]}], "]"}]},
        "Ket"]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"24", " ", 
             SuperscriptBox["b", "2"]}], "+", 
            RowBox[{"184", " ", 
             SuperscriptBox["b", "4"]}], "+", 
            RowBox[{"528", " ", 
             SuperscriptBox["b", "6"]}], "+", 
            RowBox[{"576", " ", 
             SuperscriptBox["b", "8"]}]}], ")"}], " ", 
          RowBox[{"L", "[", 
           RowBox[{"-", "5"}], "]"}]}], "+", 
         SuperscriptBox[
          RowBox[{"L", "[", 
           RowBox[{"-", "1"}], "]"}], "5"], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"36", " ", 
               SuperscriptBox["b", "2"]}], "+", 
              RowBox[{"168", " ", 
               SuperscriptBox["b", "4"]}], "+", 
              RowBox[{"288", " ", 
               SuperscriptBox["b", "6"]}]}], ")"}], " ", 
            RowBox[{"L", "[", 
             RowBox[{"-", "4"}], "]"}]}], ")"}], "**", 
          RowBox[{"L", "[", 
           RowBox[{"-", "1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"30", " ", 
               SuperscriptBox["b", "2"]}], "+", 
              RowBox[{"84", " ", 
               SuperscriptBox["b", "4"]}]}], ")"}], " ", 
            RowBox[{"L", "[", 
             RowBox[{"-", "3"}], "]"}]}], ")"}], "**", 
          SuperscriptBox[
           RowBox[{"L", "[", 
            RowBox[{"-", "1"}], "]"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"64", " ", 
               SuperscriptBox["b", "4"]}], "+", 
              RowBox[{"192", " ", 
               SuperscriptBox["b", "6"]}]}], ")"}], " ", 
            RowBox[{"L", "[", 
             RowBox[{"-", "3"}], "]"}]}], ")"}], "**", 
          RowBox[{"L", "[", 
           RowBox[{"-", "2"}], "]"}]}], "+", 
         RowBox[{"20", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["b", "2"], " ", 
             RowBox[{"L", "[", 
              RowBox[{"-", "2"}], "]"}]}], ")"}], "**", 
           SuperscriptBox[
            RowBox[{"L", "[", 
             RowBox[{"-", "1"}], "]"}], "3"]}]}], "+", 
         RowBox[{"64", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["b", "4"], " ", 
             SuperscriptBox[
              RowBox[{"L", "[", 
               RowBox[{"-", "2"}], "]"}], "2"]}], ")"}], "**", 
           RowBox[{"L", "[", 
            RowBox[{"-", "1"}], "]"}]}]}]}], ")"}], "**", 
       TemplateBox[{RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
             RowBox[{"1", "+", 
               RowBox[{"3", " ", 
                 SuperscriptBox["b", "2"]}]}], ")"}]}]},
        "Ket"]}]}], "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.675701536342293*^9, 3.675701596396044*^9}, {
   3.675701628402388*^9, 3.675701629307066*^9}, {3.675701753156424*^9, 
   3.675701758111286*^9}, {3.67614223474623*^9, 3.6761422435372868`*^9}, 
   3.676142304578483*^9, {3.676143096935343*^9, 3.6761431389079227`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Superspace", "Subsection",
 CellChangeTimes->{{3.676205103773765*^9, 3.676205104959938*^9}}],

Cell[TextData[{
 "We now implement 2d (2,2) superspace, but some of the code should easily \
generalize to other dimensions.  The first item of ",
 Cell[BoxData[
  FormBox["$SuperspaceDim", TraditionalForm]]],
 " is the number of even coordinates and the following ones are numbers of \
odd coordinates: there are two such numbers in cases where odd coordinates \
can have chirality."
}], "Text",
 CellChangeTimes->{{3.673125281146262*^9, 3.673125372358382*^9}, {
  3.673128460507327*^9, 3.6731285399583273`*^9}, {3.676143162568244*^9, 
  3.676143170450535*^9}, {3.676207144197341*^9, 3.6762071502455053`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$SuperspaceDim", "=", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676207629295342*^9, 3.67620763083146*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"thetas", ",", "dthetas", ",", "Dthetas", ",", "Qthetas"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetas", "=", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], ",", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], ",", 
     SuperscriptBox["\[Theta]", "+"], ",", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dthetas", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[ScriptD]", "-"], ",", 
      SubscriptBox[
       OverscriptBox["\[ScriptD]", "~"], "-"], ",", 
      SubscriptBox["\[ScriptD]", "+"], ",", 
      SubscriptBox[
       OverscriptBox["\[ScriptD]", "~"], "+"]}], "}"}], "=", 
    RowBox[{"PartialD", "/@", "thetas"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dthetas", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalD]", "-"], ",", 
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalD]", "~"], "-"], ",", 
     SubscriptBox["\[ScriptCapitalD]", "+"], ",", 
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalD]", "~"], "+"]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Qthetas", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[ScriptCapitalQ]", "-"], ",", 
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalQ]", "~"], "-"], ",", 
     SubscriptBox["\[ScriptCapitalQ]", "+"], ",", 
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalQ]", "~"], "+"]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6731284462533274`*^9, 3.6731284499183273`*^9}, {
  3.6731285445293274`*^9, 3.673128545408327*^9}, {3.673184206263373*^9, 
  3.6731842072614727`*^9}, {3.676202063557716*^9, 3.676202064578473*^9}, {
  3.676203519828474*^9, 3.676203554135317*^9}, {3.6762071146957207`*^9, 
  3.676207177884839*^9}, {3.676207619365817*^9, 3.6762076604259853`*^9}, {
  3.676207859764518*^9, 3.676207863666823*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "auxthetanames", 
   StyleBox["]",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"auxthetanames", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", "4"}], "}"}], ",", "thetas_"}], "]"}], ":=", 
   "thetas"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"auxthetanames", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "l_Integer", ",", "r_Integer"}], "}"}], ",", 
      "thetas_"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "l", "\[LessEqual]", "2"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "r", "\[LessEqual]", "2"}]}]}], ":=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"thetas", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "l"}], "]"}], "]"}], ",", 
     RowBox[{"thetas", "[", 
      RowBox[{"[", 
       RowBox[{"3", ";;", 
        RowBox[{"2", "+", "r"}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"auxthetanames", "[", 
    RowBox[{"d_", ",", "thetas_"}], "]"}], ":=", 
   RowBox[{"Message", "[", 
    RowBox[{
     RowBox[{"thetanames", "::", "unknownsusy"}], ",", "d"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thetanames", "::", "unknownsusy"}], "=", 
   "\"\<Unknown supersymmetry `1`.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.676203347114497*^9, 3.676203399414566*^9}, {
  3.676203450175706*^9, 3.676203500181649*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"thetanames", ",", "dthetanames", ",", "Qnames", ",", "Dnames"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thetanames", "[", 
    RowBox[{"OptionsPattern", "[", "Superfield", "]"}], "]"}], ":=", 
   RowBox[{"auxthetanames", "[", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<dim\>\"", "]"}], ",", "thetas"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dthetanames", "[", 
    RowBox[{"OptionsPattern", "[", "Superfield", "]"}], "]"}], ":=", 
   RowBox[{"auxthetanames", "[", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<dim\>\"", "]"}], ",", "dthetas"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Qnames", "[", 
    RowBox[{"OptionsPattern", "[", "Superfield", "]"}], "]"}], ":=", 
   RowBox[{"auxthetanames", "[", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<dim\>\"", "]"}], ",", "Qthetas"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dnames", "[", 
    RowBox[{"OptionsPattern", "[", "Superfield", "]"}], "]"}], ":=", 
   RowBox[{"auxthetanames", "[", 
    RowBox[{
     RowBox[{"OptionValue", "[", "\"\<dim\>\"", "]"}], ",", "Dthetas"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676203569239244*^9, 3.676203608226308*^9}, {
  3.67620367057822*^9, 3.676203689454117*^9}, {3.6762054478828707`*^9, 
  3.676205460672021*^9}, {3.676207664886148*^9, 3.676207670288027*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SSClass", "[", "#", "]"}], "=", "\"\<grassmann\>\""}], ")"}], 
    "&"}], "/@", "thetas"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SSDeclareCommutator", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], "|", 
       
       RowBox[{"PartialD", "[", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], 
        "]"}]}], ",", 
      RowBox[{
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{"SSOfClassQ", "[", "\"\<scalar\>\"", "]"}], ")"}]}], "|", 
       RowBox[{"PartialD", "[", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{"SSOfClassQ", "[", "\"\<scalar\>\"", "]"}], ")"}]}], 
        "]"}]}]}], "}"}], "\[RuleDelayed]", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SSDeclareAnticommutator", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], ",", 
       
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}]}], 
      "}"}], "\[RuleDelayed]", "0"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a_", "?", 
        RowBox[{"(", 
         RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], ",", 
       
       RowBox[{"PartialD", "[", 
        RowBox[{"b_", "?", 
         RowBox[{"(", 
          RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], 
        "]"}]}], "}"}], "\[RuleDelayed]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"a", "===", "b"}], ",", "1", ",", "0"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PartialD", "[", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], 
        "]"}], ",", 
       RowBox[{"PartialD", "[", 
        RowBox[{"_", "?", 
         RowBox[{"(", 
          RowBox[{"SSOfClassQ", "[", "\"\<grassmann\>\"", "]"}], ")"}]}], 
        "]"}]}], "}"}], "\[RuleDelayed]", "0"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.67614323170483*^9, 3.6761432324248533`*^9}, {
   3.676143265128911*^9, 3.676143416061623*^9}, {3.6761434706441717`*^9, 
   3.6761435884679527`*^9}, {3.6761438109934883`*^9, 3.676143827538621*^9}, {
   3.6762020692862673`*^9, 3.676202131779943*^9}, {3.6762024263291483`*^9, 
   3.676202428659141*^9}, {3.676202466086351*^9, 3.676202466356292*^9}, {
   3.676202573488035*^9, 3.6762025769592752`*^9}, {3.676202630643861*^9, 
   3.67620286387808*^9}, 3.6762029133603487`*^9, {3.676203061987864*^9, 
   3.676203070655898*^9}, {3.676203133599522*^9, 3.6762031601306553`*^9}, {
   3.676203204685314*^9, 3.6762032054921637`*^9}, {3.676207920281546*^9, 
   3.6762079228156977`*^9}, 3.676207956522374*^9, 3.676210218572239*^9, 
   3.676210348641553*^9, {3.676210483020667*^9, 3.676210519919685*^9}, {
   3.676210687532378*^9, 3.6762107136261272`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSExpand", "[", 
     RowBox[{
      RowBox[{"PartialD", "[", 
       SuperscriptBox["\[Theta]", "-"], "]"}], "**", 
      SuperscriptBox["\[Theta]", "-"]}], "]"}], "===", 
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox["\[Theta]", "-"], "**", 
      RowBox[{"PartialD", "[", 
       SuperscriptBox["\[Theta]", "-"], "]"}]}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.67620316904468*^9, 3.67620318371661*^9}, {
  3.676203219969513*^9, 3.676203224116207*^9}, {3.676204766304357*^9, 
  3.676204787165305*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "auxodddim", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"auxodddim", "[", "opts___", "]"}], ":=", 
   RowBox[{
    RowBox[{"auxodddim", "[", "opts", "]"}], "=", 
    RowBox[{"Total", "[", 
     RowBox[{"Rest", "[", 
      RowBox[{"OptionValue", "[", 
       RowBox[{"Superfield", ",", "opts", ",", "\"\<dim\>\""}], "]"}], "]"}], 
     "]"}]}]}], ";", 
  RowBox[{"ClearAll", "[", "Superfield", "]"}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "Superfield", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<dim\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}]}], ",", 
      RowBox[{"\"\<parity\>\"", "\[Rule]", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"f", ":", 
       RowBox[{"Superfield", "[", 
        RowBox[{"c_List", ",", 
         RowBox[{"opts", ":", 
          RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}]}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"Superfield", "::", "badargs"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "opts"}], "}"}]}], "]"}], ";", 
        RowBox[{"Superfield", "[", 
         RowBox[{
          RowBox[{"0", "&"}], ",", "opts"}], "]"}]}], ")"}], "/;", 
      RowBox[{
       RowBox[{"Length", "[", "c", "]"}], "!=", 
       RowBox[{"2", "^", 
        RowBox[{"auxodddim", "[", "opts", "]"}]}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Superfield", "[", 
     RowBox[{"a_List", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", "=", 
        RowBox[{"auxodddim", "[", "opts", "]"}]}], ",", 
       RowBox[{"parity", "=", 
        RowBox[{"OptionValue", "[", "\"\<parity\>\"", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plus", "@@", 
       RowBox[{"MapThread", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SSClass", "[", "#1", "]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"OddQ", "[", 
                RowBox[{
                 RowBox[{"Length", "[", "#2", "]"}], "+", "parity"}], "]"}], 
               ",", "\"\<grassmann\>\"", ",", "\"\<scalar\>\""}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"#1", "**", 
             RowBox[{"NonCommutativeMultiply", "@@", "#2"}]}]}], ")"}], "&"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"Subsets", "[", 
            RowBox[{"thetanames", "[", "opts", "]"}], "]"}]}], "}"}]}], 
        "]"}]}], "/;", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "a", "]"}], "===", 
         RowBox[{"2", "^", "dim"}]}], ")"}], "||", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"Superfield", "::", "shortarg"}], ",", "a", ",", "dim", ",", 
         
         RowBox[{"2", "^", "dim"}]}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Superfield", "::", "shortarg"}], "=", 
   "\"\<First argument `1` of `2`-dimensional superfield should have `3` \
entries.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Superfield", "[", 
     RowBox[{"a_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Superfield", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{"i", "-", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"2", "^", 
          RowBox[{"auxodddim", "[", "opts", "]"}]}]}], "}"}]}], "]"}], ",", 
     "opts"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676203869883815*^9, 3.676203986841524*^9}, {
   3.676204159458688*^9, 3.67620420270604*^9}, {3.6762042570937767`*^9, 
   3.676204441496682*^9}, {3.6762045227659492`*^9, 3.6762045246852913`*^9}, {
   3.6762045682297287`*^9, 3.676204598635428*^9}, {3.676204650452536*^9, 
   3.6762047266685038`*^9}, 3.676204761016486*^9, {3.676204822447453*^9, 
   3.676204900433703*^9}, {3.676205421116235*^9, 3.676205428927211*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Superfield", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.6762047305380898`*^9, 3.6762047336719503`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "0", "]"}], "+", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "2", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "3", "]"}], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "4", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "5", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "6", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "7", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "8", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "9", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "10", "]"}], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "11", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "12", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "13", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "14", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "15", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}]}]], "Output",
 CellChangeTimes->{3.676204736402471*^9, 3.676204793267775*^9, 
  3.6762051230952663`*^9, 3.6762054859057093`*^9, 3.676206772062986*^9, 
  3.676207084880953*^9, 3.676207223293825*^9, 3.676207683391615*^9, 
  3.676207870148037*^9, 3.676207936517355*^9, 3.6762100764964743`*^9, 
  3.676210594790419*^9, 3.676210788398952*^9, 3.676216923054307*^9, 
  3.676218480800268*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{"SSMonomials", "[", 
     RowBox[{
      RowBox[{"Superfield", "[", "a", "]"}], ",", 
      RowBox[{"Alternatives", "@@", "thetas"}]}], "]"}], "===", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"1", "\[Rule]", 
       RowBox[{"a", "[", "0", "]"}]}], ",", 
      RowBox[{
       SuperscriptBox["\[Theta]", "-"], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"]}], "\[Rule]", 
       RowBox[{"a", "[", "5", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox["\[Theta]", "+"]}], "\[Rule]", 
       RowBox[{"a", "[", "6", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"a", "[", "7", "]"}]}], ",", 
      RowBox[{
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "-"], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "2", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"], "**", 
        SuperscriptBox["\[Theta]", "+"]}], "\[Rule]", 
       RowBox[{"a", "[", "8", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"a", "[", "9", "]"}]}], ",", 
      RowBox[{
       SuperscriptBox["\[Theta]", "+"], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "3", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "+"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"a", "[", "10", "]"}]}], ",", 
      RowBox[{
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "4", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"], "**", 
        SuperscriptBox["\[Theta]", "+"]}], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "11", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"], "**", 
        SuperscriptBox["\[Theta]", "+"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"a", "[", "15", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "12", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Theta]", "-"], "**", 
        SuperscriptBox["\[Theta]", "+"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "13", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "-"], "**", 
        SuperscriptBox["\[Theta]", "+"], "**", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
       RowBox[{"-", 
        RowBox[{"a", "[", "14", "]"}]}]}]}], "\[RightAssociation]"}]}], "]"}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6761490341504507`*^9, 3.676149047373683*^9}, {
  3.6762051294394493`*^9, 3.676205132163093*^9}, {3.6762051728405657`*^9, 
  3.67620530056628*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Superfield", "[", "a", "]"}], "//", "SSExpand"}]], "Input",
 CellChangeTimes->{{3.6761490524046593`*^9, 3.676149052899404*^9}, {
  3.676205317682876*^9, 3.676205320490679*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "0", "]"}], "+", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "2", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "3", "]"}], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "4", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "5", "]"}], " ", 
     SuperscriptBox["\[Theta]", "-"]}], ")"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "6", "]"}], " ", 
     SuperscriptBox["\[Theta]", "-"]}], ")"}], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "7", "]"}], " ", 
     SuperscriptBox["\[Theta]", "-"]}], ")"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "8", "]"}], " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"]}], ")"}], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "9", "]"}], " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"]}], ")"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "10", "]"}], " ", 
     SuperscriptBox["\[Theta]", "+"]}], ")"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "11", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "12", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "13", "]"}], "**", 
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "14", "]"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "[", "15", "]"}], " ", 
     SuperscriptBox["\[Theta]", "-"]}], ")"}], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"]}]}]], "Output",
 CellChangeTimes->{{3.676144373716629*^9, 3.676144402688901*^9}, 
   3.676144821369228*^9, 3.6761483921844673`*^9, 3.676148951362217*^9, {
   3.676149049259532*^9, 3.6761490580279837`*^9}, 3.6762032389953117`*^9, 
   3.676205320843857*^9, 3.676205489039279*^9, 3.676206772164219*^9, 
   3.676207091675185*^9, 3.6762072263720827`*^9, 3.67620768532847*^9, 
   3.676207872051818*^9, 3.676207938006027*^9, 3.6762100766151047`*^9, 
   3.6762105983392353`*^9, 3.676210788503605*^9, 3.676216924727476*^9, 
   3.676218483765123*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SSMonomials", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Superfield", "[", "a", "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"_", ",", 
     RowBox[{"Alternatives", "@@", "thetas"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676149063978541*^9, 3.676149114042552*^9}, {
  3.676205325246663*^9, 3.6762053265406933`*^9}}],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    SuperscriptBox[
     RowBox[{"a", "[", "0", "]"}], "2"]}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"a", "[", "0", "]"}], " ", 
     RowBox[{"a", "[", "1", "]"}]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"a", "[", "0", "]"}], " ", 
     RowBox[{"a", "[", "2", "]"}]}]}], ",", 
   RowBox[{
    SuperscriptBox["\[Theta]", "+"], "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"a", "[", "0", "]"}], " ", 
     RowBox[{"a", "[", "3", "]"}]}]}], ",", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], "\[Rule]", 
    RowBox[{"2", " ", 
     RowBox[{"a", "[", "0", "]"}], " ", 
     RowBox[{"a", "[", "4", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "5", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], "**", 
       RowBox[{"a", "[", "2", "]"}]}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox["\[Theta]", "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "6", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], "**", 
       RowBox[{"a", "[", "3", "]"}]}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "7", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], "**", 
       RowBox[{"a", "[", "4", "]"}]}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], "**", 
     SuperscriptBox["\[Theta]", "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "8", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "2", "]"}], "**", 
       RowBox[{"a", "[", "3", "]"}]}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "9", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "2", "]"}], "**", 
       RowBox[{"a", "[", "4", "]"}]}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "+"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "10", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "3", "]"}], "**", 
       RowBox[{"a", "[", "4", "]"}]}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], "**", 
     SuperscriptBox["\[Theta]", "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"a", "[", "5", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"a", "[", "6", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"a", "[", "8", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "11", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"a", "[", "5", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"a", "[", "7", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"a", "[", "9", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "12", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox["\[Theta]", "+"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"a", "[", "6", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"a", "[", "7", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "1", "]"}], " ", 
      RowBox[{"a", "[", "10", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "13", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], "**", 
     SuperscriptBox["\[Theta]", "+"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "4", "]"}], " ", 
      RowBox[{"a", "[", "8", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "3", "]"}], " ", 
      RowBox[{"a", "[", "9", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "2", "]"}], " ", 
      RowBox[{"a", "[", "10", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "14", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Theta]", "-"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], "**", 
     SuperscriptBox["\[Theta]", "+"], "**", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"]}], "\[Rule]", 
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "7", "]"}], " ", 
      RowBox[{"a", "[", "8", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "6", "]"}], " ", 
      RowBox[{"a", "[", "9", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "5", "]"}], " ", 
      RowBox[{"a", "[", "10", "]"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"a", "[", "0", "]"}], " ", 
      RowBox[{"a", "[", "15", "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], "**", 
       RowBox[{"a", "[", "14", "]"}]}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "2", "]"}], "**", 
       RowBox[{"a", "[", "13", "]"}]}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "3", "]"}], "**", 
       RowBox[{"a", "[", "12", "]"}]}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       RowBox[{"a", "[", "4", "]"}], "**", 
       RowBox[{"a", "[", "11", "]"}]}]}]}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.6761490735157433`*^9, 3.676149116748053*^9}, 
   3.6762032418130817`*^9, 3.6762053282728987`*^9, 3.6762054919659033`*^9, 
   3.676206773469482*^9, 3.6762070942670727`*^9, 3.676207228764167*^9, 
   3.676207687577718*^9, 3.676207874148423*^9, 3.676207939938951*^9, 
   3.676210078028678*^9, 3.676210601178426*^9, 3.676210789899745*^9, 
   3.6762169268765078`*^9, 3.676218486233758*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Assert", "[", 
   RowBox[{"SSExpand", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SSExpand", "[", 
       RowBox[{
        RowBox[{"Superfield", "[", "a", "]"}], "**", 
        RowBox[{"Superfield", "[", "b", "]"}]}], "]"}], "**", 
      RowBox[{"Superfield", "[", "c", "]"}]}], "==", 
     RowBox[{
      RowBox[{"Superfield", "[", "a", "]"}], "**", 
      RowBox[{"SSExpand", "[", 
       RowBox[{
        RowBox[{"Superfield", "[", "b", "]"}], "**", 
        RowBox[{"Superfield", "[", "c", "]"}]}], "]"}]}]}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.676149164665114*^9, 3.676149165236422*^9}, {
  3.67620533066117*^9, 3.676205380327894*^9}, {3.676205608766859*^9, 
  3.676205636699993*^9}, {3.6762056688999033`*^9, 3.676205676755781*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25.992`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.676149168458845*^9, 3.6762032450732603`*^9, 
  3.676205336435082*^9, 3.676205631824218*^9, 3.676205664007101*^9, 
  3.6762057030742188`*^9, 3.676206798840517*^9, 3.6762072548125772`*^9, 
  3.67620771339039*^9, 3.676210103607522*^9, 3.676210630372449*^9, 
  3.676210817411652*^9, 3.676216955052367*^9, 3.6762185132145844`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Supercharges and derivatives for (2,2) superspace", "Subsubsection",
 CellChangeTimes->{{3.673106989313215*^9, 3.673106999649248*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Assert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["\[ScriptD]", "+"], "**", 
       SuperscriptBox["\[Theta]", "+"]}], "+", 
      RowBox[{
       SuperscriptBox["\[Theta]", "+"], "**", 
       SubscriptBox["\[ScriptD]", "+"]}]}], "\[Equal]", "1"}], "//", 
    "SSExpand"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.676206801610711*^9, 3.676206815132371*^9}, {
   3.6762069554867477`*^9, 3.6762070391373158`*^9}, 3.6762071058233747`*^9, {
   3.676207234620266*^9, 3.676207236450653*^9}, {3.676207268065823*^9, 
   3.676207315959731*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", "z", "]"}], "=", 
   RowBox[{
    RowBox[{"SSClass", "[", "zbar", "]"}], "=", "\"\<scalar\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalD]", "+"], "=", 
   RowBox[{
    SubscriptBox["\[ScriptD]", "+"], "-", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"], 
     RowBox[{"PartialD", "[", "zbar", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalD]", "-"], "=", 
   RowBox[{
    SubscriptBox["\[ScriptD]", "-"], "+", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], 
     RowBox[{"PartialD", "[", "z", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[ScriptCapitalD]", "~"], "+"], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox[
      OverscriptBox["\[ScriptD]", "~"], "+"]}], "+", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox["\[Theta]", "+"], 
     RowBox[{"PartialD", "[", "zbar", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[ScriptCapitalD]", "~"], "-"], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox[
      OverscriptBox["\[ScriptD]", "~"], "-"]}], "-", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox["\[Theta]", "-"], 
     RowBox[{"PartialD", "[", "z", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalQ]", "+"], "=", 
   RowBox[{
    SubscriptBox["\[ScriptD]", "+"], "+", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"], 
     RowBox[{"PartialD", "[", "zbar", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[ScriptCapitalQ]", "-"], "=", 
   RowBox[{
    SubscriptBox["\[ScriptD]", "-"], "-", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "-"], 
     RowBox[{"PartialD", "[", "z", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[ScriptCapitalQ]", "~"], "+"], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox[
      OverscriptBox["\[ScriptD]", "~"], "+"]}], "-", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox["\[Theta]", "+"], 
     RowBox[{"PartialD", "[", "zbar", "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[ScriptCapitalQ]", "~"], "-"], "=", 
   RowBox[{
    RowBox[{"-", 
     SubscriptBox[
      OverscriptBox["\[ScriptD]", "~"], "-"]}], "+", 
    RowBox[{"2", "I", " ", 
     SuperscriptBox["\[Theta]", "-"], 
     RowBox[{"PartialD", "[", "z", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676207240689802*^9, 3.67620726003358*^9}, {
  3.6762073203917923`*^9, 3.676207468522212*^9}, {3.6762081288582973`*^9, 
  3.676208144077506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PartialD", "[", "z", "]"}], "**", 
    RowBox[{"PartialD", "[", 
     SuperscriptBox["\[Theta]", "-"], "]"}]}], "-", 
   RowBox[{
    RowBox[{"PartialD", "[", 
     SuperscriptBox["\[Theta]", "-"], "]"}], "**", 
    RowBox[{"PartialD", "[", "z", "]"}]}]}], "//", "SSExpand"}]], "Input",
 CellChangeTimes->{{3.6762080183211603`*^9, 3.6762080405085497`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.6762080274184437`*^9, 3.6762080411595163`*^9}, 
   3.6762081463851852`*^9, 3.67621010372678*^9, 3.676210630602249*^9, 
   3.676210817518705*^9, 3.676216955252441*^9, 3.6762185135090923`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SSExpand", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#1", "**", "#2"}], "+", 
        RowBox[{"#2", "**", "#1"}]}], "==", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{"q", ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalQ]", "-"], ",", 
           SubscriptBox[
            OverscriptBox["\[ScriptCapitalQ]", "~"], "-"]}], "}"}], ",", 
         RowBox[{"4", "I", " ", 
          RowBox[{"PartialD", "[", "z", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalQ]", "+"], ",", 
           SubscriptBox[
            OverscriptBox["\[ScriptCapitalQ]", "~"], "+"]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", "4"}], "I", " ", 
          RowBox[{"PartialD", "[", "zbar", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalD]", "-"], ",", 
           SubscriptBox[
            OverscriptBox["\[ScriptCapitalD]", "~"], "-"]}], "}"}], ",", 
         RowBox[{
          RowBox[{"-", "4"}], "I", " ", 
          RowBox[{"PartialD", "[", "z", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox["\[ScriptCapitalD]", "+"], ",", 
           SubscriptBox[
            OverscriptBox["\[ScriptCapitalD]", "~"], "+"]}], "}"}], ",", 
         RowBox[{"4", "I", " ", 
          RowBox[{"PartialD", "[", "zbar", "]"}]}], ",", 
         "\[IndentingNewLine]", "_", ",", "0"}], "]"}]}], "]"}], "&"}], "@@", 
    "q"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"q", ",", 
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Qnames", "[", "]"}], ",", 
         RowBox[{"Dnames", "[", "]"}]}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762186349100113`*^9, 3.676218861546688*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.67621886624126*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "Anticommutator", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Anticommutator", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"a", "**", "b"}], "+", 
    RowBox[{"b", "**", "a"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676218965274466*^9, 3.676219029414926*^9}}],

Cell["From (2.1) of Closset-Cremonesi:", "Text",
 CellChangeTimes->{{3.6731317419813232`*^9, 3.673131749878113*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Chi]", "-"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], 
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[ScriptCapitalD]", "~"], "+"], ",", 
       RowBox[{"Superfield", "[", 
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "]"}]}], "]"}]}], "//", 
    "SSExpand"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Chi]", "+"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], 
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[ScriptCapitalD]", "~"], "-"], ".", 
       RowBox[{"Superfield", "[", 
        RowBox[{"Rzbar", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "]"}]}], "]"}]}], "//", 
    "SSExpand"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Chi]", "~"], "-"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], 
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalD]", "+"], ".", 
       RowBox[{"Superfield", "[", 
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "]"}]}], "]"}]}], "//", 
    "SSExpand"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Chi]", "~"], "+"], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "4"}], 
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       SubscriptBox["\[ScriptCapitalD]", "-"], ".", 
       RowBox[{"Superfield", "[", 
        RowBox[{"Rzbar", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "]"}]}], "]"}]}], "//", 
    "SSExpand"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673131434108539*^9, 3.6731314667157993`*^9}, {
  3.673131633772504*^9, 3.673131762929418*^9}, {3.676219047165348*^9, 
  3.67621910957872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SSCollect", "[", 
  RowBox[{
   SubscriptBox["\[Chi]", "-"], ",", 
   RowBox[{"Alternatives", "@@", "thetas"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762191433832703`*^9, 3.676219163530218*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Theta]", "-"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "1", "]"}], "**", 
       RowBox[{"PartialD", "[", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}]}]}], ")"}]}], "+", 
  
  RowBox[{
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}], "**", 
       RowBox[{"PartialD", "[", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}]}]}], ")"}]}], "+", 
  
  RowBox[{
   SuperscriptBox["\[Theta]", "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}], "**", 
       RowBox[{"PartialD", "[", "zbar", "]"}]}]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "3", "]"}], "**", 
       RowBox[{"PartialD", "[", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}], "**", 
       SuperscriptBox["\[Theta]", "-"], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "-"]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}], "**", 
       SuperscriptBox["\[Theta]", "-"], "**", 
       SuperscriptBox["\[Theta]", "+"]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}], "**", 
       SuperscriptBox["\[Theta]", "-"], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "-"], "**", 
       SuperscriptBox["\[Theta]", "+"]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "-"], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}], "**", 
       SuperscriptBox["\[Theta]", "+"], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"]}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["Rz", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}], "**", 
       SuperscriptBox["\[Theta]", "-"], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "-"], "**", 
       SuperscriptBox["\[Theta]", "+"], "**", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"]}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}]}], "-", 
     RowBox[{"8", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox["Rz", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}]}], ")"}]}], "+", 
  
  RowBox[{
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"8", " ", 
      RowBox[{"PartialD", "[", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"], "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"PartialD", "[", "zbar", "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "1", "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"PartialD", "[", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"], "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "13", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], "**", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["\[Theta]", "~"], "+"], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}]}], ")"}], "**", 
    RowBox[{"PartialD", "[", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "+", 
  RowBox[{
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{"PartialD", "[", "zbar", "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"PartialD", "[", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"], "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], "**", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       OverscriptBox["\[Theta]", "~"], "+"], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}]}], ")"}], "**", 
    RowBox[{"PartialD", "[", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"16", " ", "\[ImaginaryI]", " ", 
      RowBox[{"PartialD", "[", "zbar", "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"PartialD", "[", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"], "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}]}]}], ")"}]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], "**", 
    RowBox[{
     RowBox[{"Rz", "[", 
      RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}], "**", 
    RowBox[{"PartialD", "[", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}], "**", 
       RowBox[{"PartialD", "[", "zbar", "]"}]}]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "11", "]"}], "**", 
       RowBox[{"PartialD", "[", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "-", 
     RowBox[{"4", " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"16", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}], "**", 
       RowBox[{"PartialD", "[", "zbar", "]"}]}]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "13", "]"}], "**", 
       RowBox[{"PartialD", "[", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"16", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}], "**", 
       RowBox[{"PartialD", "[", "zbar", "]"}]}]}], "-", 
     RowBox[{"8", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}], "**", 
       RowBox[{"PartialD", "[", 
        SuperscriptBox[
         OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Theta]", "-"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "-"], "**", 
   SuperscriptBox["\[Theta]", "+"], "**", 
   SuperscriptBox[
    OverscriptBox["\[Theta]", "~"], "+"], "**", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"16", " ", "\[ImaginaryI]", " ", 
      RowBox[{"PartialD", "[", "zbar", "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}]}], "+", 
     RowBox[{"8", " ", 
      RowBox[{"PartialD", "[", 
       SuperscriptBox[
        OverscriptBox["\[Theta]", "~"], "+"], "]"}], " ", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}]}]}], ")"}]}], "-", 
  RowBox[{"8", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], "**", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], "**", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], "**", 
    RowBox[{
     RowBox[{"Rz", "[", 
      RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}], "**", 
    RowBox[{"PartialD", "[", 
     SuperscriptBox[
      OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "+", 
  RowBox[{"8", " ", 
   RowBox[{"PartialD", "[", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], "]"}], " ", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}], "-", 
  RowBox[{"4", " ", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}]}]}]], "Output",
 CellChangeTimes->{3.67621916442724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Anticommutator", "[", 
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[ScriptCapitalD]", "~"], "+"], ",", 
     SubscriptBox["\[Chi]", "+"]}], "]"}], "\[Equal]", 
   RowBox[{"Superfield", "[", 
    RowBox[{"0", "&"}], "]"}]}], "//", "SSExpand"}]], "Input",
 CellChangeTimes->{{3.6731317657336984`*^9, 3.6731317830344286`*^9}, {
  3.6731321122493467`*^9, 3.673132114776599*^9}, {3.67621917601236*^9, 
  3.6762192192581873`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"4", " ", 
    RowBox[{
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PartialD", "[", 
           SuperscriptBox[
            OverscriptBox["\[Theta]", "~"], "-"], "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"PartialD", "[", "z", "]"}], " ", 
          SuperscriptBox["\[Theta]", "-"]}]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "1", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "3", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "11", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "13", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{"Rzbar", "[", 
           RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}], ")"}]}], 
      "]"}], "**", 
     RowBox[{"PartialD", "[", 
      SuperscriptBox[
       OverscriptBox["\[Theta]", "~"], "+"], "]"}]}]}], "-", 
   RowBox[{"8", " ", "\[ImaginaryI]", " ", 
    RowBox[{
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PartialD", "[", 
           SuperscriptBox[
            OverscriptBox["\[Theta]", "~"], "-"], "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"PartialD", "[", "z", "]"}], " ", 
          SuperscriptBox["\[Theta]", "-"]}]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "1", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "3", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "11", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "13", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{"Rzbar", "[", 
           RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}], ")"}]}], 
      "]"}], "**", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PartialD", "[", "zbar", "]"}], " ", 
       SuperscriptBox["\[Theta]", "+"]}], ")"}]}]}], "+", 
   RowBox[{"4", " ", 
    RowBox[{
     RowBox[{"PartialD", "[", 
      SuperscriptBox[
       OverscriptBox["\[Theta]", "~"], "+"], "]"}], "**", 
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PartialD", "[", 
           SuperscriptBox[
            OverscriptBox["\[Theta]", "~"], "-"], "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"PartialD", "[", "z", "]"}], " ", 
          SuperscriptBox["\[Theta]", "-"]}]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "1", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "3", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "11", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "13", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{"Rzbar", "[", 
           RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}], ")"}]}], 
      "]"}]}]}], "-", 
   RowBox[{"8", " ", "\[ImaginaryI]", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PartialD", "[", "zbar", "]"}], " ", 
       SuperscriptBox["\[Theta]", "+"]}], ")"}], "**", 
     RowBox[{"Anticommutator", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PartialD", "[", 
           SuperscriptBox[
            OverscriptBox["\[Theta]", "~"], "-"], "]"}]}], "-", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          RowBox[{"PartialD", "[", "z", "]"}], " ", 
          SuperscriptBox["\[Theta]", "-"]}]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "1", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "3", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "5", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "9", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "11", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "13", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{
           RowBox[{"Rzbar", "[", 
            RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}], "**", 
          SuperscriptBox["\[Theta]", "-"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "-"], "**", 
          SuperscriptBox["\[Theta]", "+"], "**", 
          SuperscriptBox[
           OverscriptBox["\[Theta]", "~"], "+"]}], "+", 
         RowBox[{
          RowBox[{"Rzbar", "[", 
           RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}], ")"}]}], 
      "]"}]}]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.676219219769725*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[ScriptCapitalD]", "+"], ".", 
  RowBox[{"Superfield", "[", 
   RowBox[{
    SubscriptBox[
     OverscriptBox["\[Chi]", "~"], "+"], "[", 
    RowBox[{"z", ",", "zbar"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.673112274008655*^9, 3.67311230285954*^9}, {
  3.6731123508163347`*^9, 3.673112370783332*^9}, {3.673112436915944*^9, 
  3.6731124392581787`*^9}, {3.673131033258458*^9, 3.6731310344105735`*^9}, {
  3.6731316156116877`*^9, 3.673131615922719*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["\[Chi]", "~"], "+"], "[", 
     RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}], "+", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[Chi]", "~"], "+"], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "3", "]"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox[
           OverscriptBox["\[Chi]", "~"], "+"], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "0", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "+"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          OverscriptBox["\[Chi]", "~"], "+"], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "2", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], ".", 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[Chi]", "~"], "+"], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[Chi]", "~"], "+"], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "7", "]"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox[
           OverscriptBox["\[Chi]", "~"], "+"], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "4", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], ".", 
    SuperscriptBox["\[Theta]", "+"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          OverscriptBox["\[Chi]", "~"], "+"], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "6", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], ".", 
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[Chi]", "~"], "+"], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{
        RowBox[{
         SubscriptBox[
          OverscriptBox["\[Chi]", "~"], "+"], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "11", "]"}]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox[
           OverscriptBox["\[Chi]", "~"], "+"], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "8", "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], ".", 
    SuperscriptBox["\[Theta]", "+"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          OverscriptBox["\[Chi]", "~"], "+"], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "10", "]"}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], ".", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Chi]", "~"], "+"], "[", 
      RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox[
         OverscriptBox["\[Chi]", "~"], "+"], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "15", "]"}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          SubscriptBox[
           OverscriptBox["\[Chi]", "~"], "+"], 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "zbar"}], "]"}], "[", "12", "]"}]}]}], ")"}]}], 
   "+", 
   RowBox[{
    SuperscriptBox["\[Theta]", "-"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "-"], ".", 
    SuperscriptBox["\[Theta]", "+"], ".", 
    SuperscriptBox[
     OverscriptBox["\[Theta]", "~"], "+"], ".", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         SubscriptBox[
          OverscriptBox["\[Chi]", "~"], "+"], 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "zbar"}], "]"}], "[", "14", "]"}]}], ")"}]}]}],
  Infix[{
    SubPlus[
     OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][2], 
    Dot[
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], SubPlus[
       OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][3] + 
     Complex[0, -2] Derivative[0, 1][
        SubPlus[
         OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
       0]], 
    Dot[
     SuperPlus[$CellContext`\[Theta]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], Complex[0, 2] Derivative[0, 1][
       SubPlus[
        OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
      2]], 
    Dot[
     SuperMinus[
      OverTilde[$CellContext`\[Theta]]], -SubPlus[
       OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][6]], 
    Dot[
     SuperMinus[
      OverTilde[$CellContext`\[Theta]]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], -SubPlus[
        OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][7] + 
     Complex[0, 2] Derivative[0, 1][
        SubPlus[
         OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
       4]], 
    Dot[
     SuperMinus[
      OverTilde[$CellContext`\[Theta]]], 
     SuperPlus[$CellContext`\[Theta]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], Complex[0, -2] Derivative[0, 1][
       SubPlus[
        OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
      6]], 
    Dot[
     SuperMinus[$CellContext`\[Theta]], -SubPlus[
       OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][
      10]], 
    Dot[
     SuperMinus[$CellContext`\[Theta]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], -SubPlus[
        OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][
       11] + Complex[0, 2] Derivative[0, 1][
        SubPlus[
         OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
       8]], 
    Dot[
     SuperMinus[$CellContext`\[Theta]], 
     SuperPlus[$CellContext`\[Theta]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], Complex[0, -2] Derivative[0, 1][
       SubPlus[
        OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
      10]], 
    Dot[
     SuperMinus[$CellContext`\[Theta]], 
     SuperMinus[
      OverTilde[$CellContext`\[Theta]]], 
     SubPlus[
      OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][14]], 
    Dot[
     SuperMinus[$CellContext`\[Theta]], 
     SuperMinus[
      OverTilde[$CellContext`\[Theta]]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], SubPlus[
       OverTilde[$CellContext`\[Chi]]][$CellContext`z, $CellContext`zbar][15] + 
     Complex[0, -2] Derivative[0, 1][
        SubPlus[
         OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
       12]], 
    Dot[
     SuperMinus[$CellContext`\[Theta]], 
     SuperMinus[
      OverTilde[$CellContext`\[Theta]]], 
     SuperPlus[$CellContext`\[Theta]], 
     SuperPlus[
      OverTilde[$CellContext`\[Theta]]], Complex[0, 2] Derivative[0, 1][
       SubPlus[
        OverTilde[$CellContext`\[Chi]]]][$CellContext`z, $CellContext`zbar][
      14]]}, "+"],
  Editable->False]], "Output",
 CellChangeTimes->{{3.673112307496003*^9, 3.6731123711613693`*^9}, 
   3.6731124397382264`*^9, 3.6731286556033273`*^9, {3.6731309264097743`*^9, 
   3.673130948906024*^9}, {3.6731309902691593`*^9, 3.673131035145647*^9}, 
   3.673131616585785*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6730978227072034`*^9, 3.6730978229142237`*^9}}],

Cell[TextData[{
 "The computations below (which use conventions in the anomaly paper \
1509.08511) lead me to conclude that their (D.7) has four supersymmetries for \
any ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]]],
 ", namely that even if we reinstate the radius ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]]],
 " of the sphere by dimensional analysis we don\[CloseCurlyQuote]t need to \
have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{"1", "/", "r"}]}], TraditionalForm]]],
 ".  The supersymmetric supergravity backgrounds for different ",
 Cell[BoxData[
  FormBox["\[Epsilon]", TraditionalForm]]],
 " are related by a vector R-symmetry, as already explained in \
Closset-Cremonesi 1404.2636v3 (2.14) (exchange U(1)_V and U(1)_A to compare \
the two papers)."
}], "Text",
 CellChangeTimes->{{3.673031883207082*^9, 3.6730321256023192`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "[", 
     RowBox[{"xp", ",", "xm"}], "]"}], ",", 
    RowBox[{"a", "[", 
     RowBox[{"xp", ",", "xm"}], "]"}], ",", 
    RowBox[{"w", "[", 
     RowBox[{"xp", ",", "xm"}], "]"}], ",", 
    RowBox[{"wb", "[", 
     RowBox[{"xp", ",", "wm"}], "]"}], ",", 
    RowBox[{"zp", "[", "xp", "]"}], ",", 
    RowBox[{"zm", "[", "xm", "]"}], ",", 
    RowBox[{"zbp", "[", "xp", "]"}], ",", 
    RowBox[{"zbm", "[", "xm", "]"}]}], "}"}], ";"}]], "Input",
 CellChangeTimes->{{3.673020333120142*^9, 3.6730204200258317`*^9}, {
  3.6730204523629537`*^9, 3.6730204524819536`*^9}, {3.6730204920479536`*^9, 
  3.6730204925599537`*^9}, {3.673030366688445*^9, 3.6730303715599327`*^9}, {
  3.673030539831758*^9, 3.673030547167492*^9}, {3.6730306770854816`*^9, 
  3.6730307174115143`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"kseq", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "==", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"xp", ",", "xm"}], "]"}], "+", 
            RowBox[{"I", " ", 
             RowBox[{"a", "[", 
              RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
          RowBox[{"zbp", "[", "xp", "]"}]}], ",", "xp"}], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"I", "/", "2"}], ")"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"xp", ",", "xm"}], "]"}], "+", 
          RowBox[{"I", " ", 
           RowBox[{"a", "[", 
            RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
        RowBox[{"zm", "[", "xm", "]"}], 
        RowBox[{"w", "[", 
         RowBox[{"xp", ",", "xm"}], "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"0", "==", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"xp", ",", "xm"}], "]"}], "+", 
            RowBox[{"I", " ", 
             RowBox[{"a", "[", 
              RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
          RowBox[{"zbm", "[", "xm", "]"}]}], ",", "xm"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"I", "/", "2"}], ")"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"xp", ",", "xm"}], "]"}], "+", 
          RowBox[{"I", " ", 
           RowBox[{"a", "[", 
            RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
        RowBox[{"zp", "[", "xp", "]"}], 
        RowBox[{"w", "[", 
         RowBox[{"xp", ",", "xm"}], "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"0", "==", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"xp", ",", "xm"}], "]"}], "-", 
            RowBox[{"I", " ", 
             RowBox[{"a", "[", 
              RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
          RowBox[{"zp", "[", "xp", "]"}]}], ",", "xp"}], "]"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"I", "/", "2"}], ")"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"xp", ",", "xm"}], "]"}], "-", 
          RowBox[{"I", " ", 
           RowBox[{"a", "[", 
            RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
        RowBox[{"zbm", "[", "xm", "]"}], 
        RowBox[{"wb", "[", 
         RowBox[{"xp", ",", "xm"}], "]"}]}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"0", "==", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"xp", ",", "xm"}], "]"}], "-", 
            RowBox[{"I", " ", 
             RowBox[{"a", "[", 
              RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
          RowBox[{"zm", "[", "xm", "]"}]}], ",", "xm"}], "]"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"I", "/", "2"}], ")"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"xp", ",", "xm"}], "]"}], "-", 
          RowBox[{"I", " ", 
           RowBox[{"a", "[", 
            RowBox[{"xp", ",", "xm"}], "]"}]}]}], "]"}], 
        RowBox[{"zbp", "[", "xp", "]"}], 
        RowBox[{"wb", "[", 
         RowBox[{"xp", ",", "xm"}], "]"}]}]}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6730204618089533`*^9, 3.6730206391599536`*^9}, {
  3.673026746392438*^9, 3.673026752961095*^9}, {3.6730303769894753`*^9, 
  3.6730303871494913`*^9}, {3.6730304706288385`*^9, 3.6730304787366495`*^9}, {
  3.673030663009074*^9, 3.6730306676795416`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"kseq1", "=", 
   RowBox[{
    RowBox[{"kseq", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zbp", "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"0", "&"}], ")"}]}], ",", 
       RowBox[{"zm", "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"0", "&"}], ")"}]}]}], "}"}]}], "/.", 
    RowBox[{"True", "\[RuleDelayed]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"##", "&"}], "[", "]"}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kseq2", "=", 
   RowBox[{
    RowBox[{"kseq", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"zbm", "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"0", "&"}], ")"}]}], ",", 
       RowBox[{"zp", "\[RuleDelayed]", 
        RowBox[{"(", 
         RowBox[{"0", "&"}], ")"}]}]}], "}"}]}], "/.", 
    RowBox[{"True", "\[RuleDelayed]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"##", "&"}], "[", "]"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6730267552013187`*^9, 3.6730267738841867`*^9}, {
  3.673026856471445*^9, 3.673026886065404*^9}, {3.673029189456712*^9, 
  3.6730292021277122`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"s", ",", "a", ",", "w", ",", "wb"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", 
    RowBox[{"xp_", ",", "xm_"}], "]"}], ":=", 
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      RowBox[{"xp", "*", 
       RowBox[{"xm", "/", 
        SuperscriptBox["r", "2"]}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"0", "&"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", "[", 
    RowBox[{"xp_", ",", "xm_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "2"}], "I"}], "\[Epsilon]"], 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"s", "[", 
          RowBox[{"xp", ",", "xm"}], "]"}], "+", 
         RowBox[{"I", " ", 
          RowBox[{"a", "[", 
           RowBox[{"xp", ",", "xm"}], "]"}]}]}], ",", "xp"}], "]"}], "/", 
      "xm"}]}], "//", "Factor"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wb", "[", 
    RowBox[{"xp_", ",", "xm_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"2", "I", " ", "\[Epsilon]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"xp", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"xp", ",", "xm"}], "]"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"a", "[", 
             RowBox[{"xp", ",", "xm"}], "]"}]}]}], ",", "xp"}], "]"}]}], "+", 
       "1"}], ")"}]}], "//", "Factor"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.673028952048712*^9, 3.673029058833712*^9}, {
  3.6730290905037117`*^9, 3.673029130940712*^9}, {3.6730303924190183`*^9, 
  3.6730303985166283`*^9}, {3.673030482703046*^9, 3.673030489566732*^9}, {
  3.673030620149789*^9, 3.6730306314949236`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"w", "[", 
    RowBox[{"xp", ",", "xm"}], "]"}], ",", 
   RowBox[{"wb", "[", 
    RowBox[{"xp", ",", "xm"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.673029065517712*^9, 3.6730290676877117`*^9}, {
  3.6730291347867117`*^9, 3.673029152353712*^9}, {3.673030624210195*^9, 
  3.673030624490223*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["r", "2"], "+", 
       RowBox[{"xm", " ", "xp"}]}], ")"}], " ", "\[Epsilon]"}]], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     SuperscriptBox["r", "2"], " ", "\[Epsilon]"}], 
    RowBox[{
     SuperscriptBox["r", "2"], "+", 
     RowBox[{"xm", " ", "xp"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6730290680037117`*^9, {3.673029133159712*^9, 3.6730291527797117`*^9}, 
   3.673029222596712*^9, 3.673030264402218*^9, 3.673030507597535*^9, {
   3.67303062236201*^9, 3.6730306332751017`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[CapitalSigma]", ",", "\[CapitalSigma]b"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalSigma]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "##", "]"}], "+", 
     RowBox[{"I", " ", 
      RowBox[{"a", "[", "##", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Theta]", "2"], 
      RowBox[{"w", "[", "##", "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalSigma]b", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s", "[", "##", "]"}], "-", 
     RowBox[{"I", " ", 
      RowBox[{"a", "[", "##", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Theta]", "2"], 
      RowBox[{"wb", "[", "##", "]"}]}]}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[CapitalSigma]", "[", 
    RowBox[{"xp", ",", "xm"}], "]"}], ",", 
   RowBox[{"\[CapitalSigma]b", "[", 
    RowBox[{"xp", ",", "xm"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.673030281166894*^9, 3.673030358184595*^9}, {
  3.6730304930360785`*^9, 3.6730305123900137`*^9}, {3.673030550504825*^9, 
  3.673030554231198*^9}, {3.6730306421959934`*^9, 3.673030642412015*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox["\[Theta]", "2"]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "2"], "+", 
        RowBox[{"xm", " ", "xp"}]}], ")"}], " ", "\[Epsilon]"}]], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"xm", " ", "xp"}], 
       SuperscriptBox["r", "2"]]}], "]"}]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox["r", "2"], " ", "\[Epsilon]", " ", 
      SuperscriptBox["\[Theta]", "2"]}], 
     RowBox[{
      SuperscriptBox["r", "2"], "+", 
      RowBox[{"xm", " ", "xp"}]}]], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "+", 
      FractionBox[
       RowBox[{"xm", " ", "xp"}], 
       SuperscriptBox["r", "2"]]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6730306429600697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"kseq", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"zbm", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"b", "+", 
         RowBox[{"c", "#"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"zp", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "c"}], " ", 
          SuperscriptBox["r", "2"], "\[Epsilon]"}], "+", 
         RowBox[{"b", " ", "\[Epsilon]", " ", "#"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"zbp", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"d", "+", 
         RowBox[{"e", "#"}]}], "&"}], ")"}]}], ",", 
     RowBox[{"zm", "\[RuleDelayed]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"e", " ", 
          SuperscriptBox["r", "2"], "\[Epsilon]"}], "-", 
         RowBox[{"d", " ", "\[Epsilon]", " ", "#"}]}], "&"}], ")"}]}]}], 
    "}"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.673030205426321*^9, 3.673030215307309*^9}, {
  3.6730309470424747`*^9, 3.6730309808268533`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.673030216272405*^9, 3.6730302662874064`*^9, 3.6730305212489*^9, 
   3.6730305572705016`*^9, 3.673030635434317*^9, {3.673030971725943*^9, 
   3.6730309812959003`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6731735271275663`*^9, 3.6731735272115746`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"deferredPart", ",", "heldPart"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"deferredPart", ",", 
    RowBox[{"{", 
     RowBox[{"HoldFirst", ",", "SequenceHold"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"heldPart", ",", 
    RowBox[{"{", 
     RowBox[{"HoldFirst", ",", "SequenceHold"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deferredPart", "[", 
    RowBox[{"expr_", ",", "pos__"}], "]"}], ":=", 
   RowBox[{"Extract", "[", 
    RowBox[{
     RowBox[{"Unevaluated", "[", "expr", "]"}], ",", 
     RowBox[{"{", "pos", "}"}], ",", "Defer"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"heldPart", "[", 
    RowBox[{"expr_", ",", "pos__"}], "]"}], ":=", 
   RowBox[{"Extract", "[", 
    RowBox[{
     RowBox[{"Unevaluated", "[", "expr", "]"}], ",", 
     RowBox[{"{", "pos", "}"}], ",", "HoldComplete"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.673104435518861*^9, 3.673104437884097*^9}, {
  3.673114562266458*^9, 3.673114660244255*^9}, {3.6731151766151447`*^9, 
  3.6731152376031446`*^9}, {3.6731276916073465`*^9, 3.673127691905317*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676122351327589*^9, 3.676122351862214*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"BeginPackage", "[", 
    RowBox[{"\"\<SSAlgebra`\>\"", ",", 
     RowBox[{"{", "\"\<Macros`\>\"", "}"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SetArgumentCount", "=", 
     RowBox[{"Null", "&"}]}], ";"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"Useful", " ", "when", " ", "debugging", " ", "with", " ", 
    RowBox[{"Trace", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"`Private`allfunctions", "=", 
    RowBox[{"Hold", "[", "\[IndentingNewLine]", 
     RowBox[{
     "NonCommutativeMultiply", ",", "\[IndentingNewLine]", "SSExpand", ",", 
      "\[IndentingNewLine]", "SSCollect", ",", "\[IndentingNewLine]", 
      "SSMonomials", ",", "\[IndentingNewLine]", "SSValidate", ",", 
      "\[IndentingNewLine]", "SSClass", ",", "\[IndentingNewLine]", 
      "SSOfClassQ", ",", "\[IndentingNewLine]", "SSOrder", ",", 
      "\[IndentingNewLine]", "SSClassOrder", ",", "\[IndentingNewLine]", 
      "SSOrderWithinClass", ",", "\[IndentingNewLine]", "SSDeclareProduct", 
      ",", "\[IndentingNewLine]", "SSDeclareCommutator", ",", 
      "\[IndentingNewLine]", "SSDeclareAnticommutator", ",", 
      "\[IndentingNewLine]", "PartialD", ",", "\[IndentingNewLine]", 
      "$SSMaxPower"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "@@", "allfunctions"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "@@", "allfunctions"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{"in", " ", "SSExpand"}]}], ",", " ", 
    RowBox[{"build", " ", "a", " ", "more", " ", "clever", " ", 
     RowBox[{"order", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{"in", " ", "SSCollect", " ", "and", " ", "SSMonomials"}]}], ",", 
    " ", 
    RowBox[{
    "build", " ", "a", " ", "more", " ", "clever", " ", "order", " ", "for", 
     " ", "SSExpand"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "as", " ", "the", " ", "current", " ", "one", " ", "breaks", " ", "with",
       " ", 
      RowBox[{"e", ".", "g", ".", " ", "patt"}]}], "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "_", ",", "x"}], "}"}], "."}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{"document", " ", "and", " ", "implement", " ", 
     RowBox[{"SSCollect", "[", 
      RowBox[{"expr", ",", 
       RowBox[{"{", 
        RowBox[{"x1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x2", ",", 
             RowBox[{"{", 
              RowBox[{"_", ",", "y2"}], "}"}]}], "}"}], ",", "y1"}], "}"}]}], 
        "}"}]}], "]"}], " ", "for", "\[IndentingNewLine]", "nested", " ", 
     "collection", " ", "with", " ", "more", " ", "control", " ", "on", " ", 
     "the", " ", 
     RowBox[{"left", "/", "right"}], " ", 
     RowBox[{"order", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{"write", " ", "proper", " ", "documentation", " ", "pages"}]}], 
    ",", " ", 
    RowBox[{"shorten", " ", "usage", " ", 
     RowBox[{"strings", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{"implement", " ", "SSValidate"}]}], "*)"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Usage", "[", "\"\<The expression $a/b+a/b$ is equal to $2a/b$\>\"", 
      "]"}], " ", "will", " ", "pretty"}], "-", "print"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"Usage", "[", "str_", "]"}], "]"}], ":=", "\[IndentingNewLine]", 
    
    RowBox[{"StringReplace", "[", 
     RowBox[{"str", ",", 
      RowBox[{
       RowBox[{"\"\<$\>\"", "~~", 
        RowBox[{"Shortest", "[", "a___", "]"}], "~~", "\"\<$\>\""}], 
       "\[RuleDelayed]", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"expr", "=", 
           RowBox[{
            RowBox[{"MakeExpression", "[", 
             RowBox[{"a", ",", "StandardForm"}], "]"}], "/.", 
            RowBox[{"HoldComplete", "\[Rule]", "HoldForm"}]}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Head", "[", "expr", "]"}], "===", "ErrorBox"}], ",", "a",
            ",", "\[IndentingNewLine]", 
           RowBox[{"\"\<\\*\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"ToBoxes", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"expr", "/.", 
                 RowBox[{"x_Symbol", "\[RuleDelayed]", 
                  RowBox[{"With", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"y", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"LowerCaseQ", "[", 
                    RowBox[{"ToString", "[", "x", "]"}], "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"x", ",", "\"\<TI\>\""}], "]"}], ",", "x"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"y", "/;", "True"}]}], "]"}]}]}], ",", 
                "\[IndentingNewLine]", "StandardForm"}], "]"}], ",", 
              "InputForm"}], "]"}]}]}], "]"}]}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSExpand", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSExpand[expr, options]$ or equivalently \
$SSExpand[options][expr]$ \\\ndistributes non-commutative products and \
applies commutation rules and product \\\nrules (see \
$SSDeclareAnticommutator$, $SSDeclareCommutator$, $SSDeclareProduct$) in \\\n\
an effort to order factors according to the preferred order (see $SSOrder$).\n\
\nThe product is assumed to be associative: when evaluating $a**b**c$ there \
is no \\\nguarantee on whether a rule for $a**b$ or for $b**c$ will apply \
first. \\\n\nThe function $Expand$ is applied where relevant.\n\n\
$Distribute->patt$ prevents $SSExpand$ from distributing terms free of \
$patt$: if \\\n$a$ and $b$ match $patt$ and $x$ and $y$ do not then \
$(x+y+a+b^2)**(x+y+b)$ becomes \\\n\
$(x+y)^2+(x+y)**b+a**(x+y)+a**b+b^2**(x+y)+b^3$.\n\n$Only->patt$ prevents \
$SSExpand$ from applying commutation and product rules for \\\nfactors free \
of $patt$.  A useful pattern is $_?(SSOfClassQ[class])$.\n\n$Order->{x,y...}$ \
causes $SSExpand$ to use as the preferred order the order \\\nwhere variables \
matching $x$ are placed to the left of those matching $y$, \\\nand so on, \
ending with variables that match none of the patterns.  Variables \\\n\
matching the same pattern are ordered according to the default order \
$SSOrder$. \\\nThe pattern $_$ is treated specially: it only matches if no \
other pattern \\\nmatches (using $_$ twice is an error).  If a variable \
matches several \\\npatterns there is no guarantee on which one matches.\n\n\
$Expand->patt$ causes $SSExpand$ to apply $Expand[#,patt]&$ instead of \\\n\
$Expand$.  To disable $Expand$ completely use the pattern \
$Except[_]$.\>\""}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSCollect", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSCollect[expr, x]$ expands $expr$ using $SSExpand$ then \
collects together \\\nterms with the same power of (any variable matching) \
$x$.  The $x$ are factored \\\ntowards the left of the expression.\n\n\
$SSCollect[expr, {x1, x2..., _..., y2, y1}]$ expands $expr$ using $SSExpand$, \
\\\nthen collects terms according to the powers of (variables matching) $x1$, \
and \\\nin each coefficient collects terms according to the powers of $x2$, \
and so \\\non until reaching the general pattern $_$ in the pattern list.  \
Then powers \\\nof $y1$ are collected to the right, and in each coefficient \
powers of $y2$, \\\nand so on.\n\n$SSCollect[expr, vars, h]$ applies $h$ to \
each coefficient.\n\n$Distribute->patt$ and $Only->patt$ are passed to \
$SSExpand$ as options.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSMonomials", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSMonomials[expr, x]$ expands $expr$ and collects terms \
according to the \\\npower of (any variable matching) $x$ to the left of the \
expression.  The \\\nresult is given as an association whose keys are \
products of variables $x$ \\\nand whose values are the corresponding \
coefficients.\n\n$SSMonomials[expr, {x1, x2..., _..., y2, y1}]$ gives nested \
associations \\\nwhose keys are products of variables matching $x1$, then \
$x2$ and so on, \\\nthen $y1$, $y2$, and so on.  The syntax is the same as \
$SSCollect$.\n\n$SSMonomials[expr, vars, h]$ applies $h$ to each coefficient.\
\n\n$Distribute->patt$ and $Only->patt$ are passed to $SSExpand$ as \
options.\>\""}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSValidate", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n(Not implemented:) \\\n$SSValidate[expr]$ checks that usual \
(commutative) multiplication is only used \\\nin $expr$ with factors that \
commute.  If not, the message $SSValidate::badtimes$ is \\\nproduced.  Other \
validation steps might be added in the future.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSClass", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSClass[var]$ gives the class of $var$.  The class of a \
variable affects the \\\npreferred ordering in products.  It is declared in \
the same way as usual \\\nfunctions, namely $SSClass[patt_]:=c$ declares that \
variables matching the pattern \\\n$patt$ have class $c$.  This declaration \
also adds $c$ (if it is new) to the list of \\\nclasses, whose order defines \
the default ordering of classes.\n\nThe class \\\"number\\\" is predefined \
and it includes $NumericQ$ quantities. \\\nA non-commutative product with a \
variable of this class is automatically \\\nconverted to a commutative \
product.\n\nThe class \\\"scalar\\\" is predefined for variables that commute \
with all others \\\nexcept those of class \\\"differential\\\" (see below).  \
Declaring that $x$ is a \\\nscalar is done with $SSClass[x]:=\\\"scalar\\\"$.\
\n\nThe class \\\"differential\\\" is predefined for differential operators.  \
It \\\nincludes $PartialD[x]$ (see $PartialD$).\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSOfClassQ", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSOfClassQ[patt][var]$ is $True$ if $SSClass[var]$ matches the \
pattern $patt$. \\\nThus, the pattern $_?(SSOfClassQ[patt])$ matches members \
of any class \\\nmatched by $patt$.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSOrder", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSOrder[x, y]$ indicates the preferred order of the variables \
$x$ and $y$ in \\\nnon-commutative products, to determine whether applicable \
commutation rules \\\nshould be used.  It is $1$ if $x**y$ is preferred, $-1$ \
if $y**x$ is, and $0$ if $x===y$. \\\nIt is important that $SSOrder[x, y] == \
-SSOrder[y, x]$.\n\nThe default order relies on comparing the variables' \
classes $SSClass[x]$ and \\\n$SSClass[y]$ using $SSClassOrder$.  If this \
gives $0$ (for instance if $x$ and $y$ have \\\nthe same class) then $x$ and \
$y$ are compared using $SSOrderWithinClass$, typically \\\nthe standard \
$Order$.\>\""}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSClassOrder", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSClassOrder[c, d]$ gives $1$ if variables of class $c$ should \
be ordered before \\\nthose of class $d$ in non-commutative products (using \
available commutation rules), \\\n$-1$ if they should be ordered after, and \
$0$ if the order is indifferent.  In this \\\nlast case (including the case \
$c===d$), $SSOrderWithinClass$ is used to determine \\\nthe order.  It is \
important that $SSClassOrder[d, c] == -SSClassOrder[c, d]$.\n\nBy default, \
$SSClassOrder$ is the order in which classes are declared using \\\n\
$SSClass[patt]:=c$, except for the class \\\"differential\\\" which is placed \
to the \\\nvery right.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSOrderWithinClass", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSOrderWithinClass[x, y, classx, classy]$ is used to determine \
the preferred \\\norder $SSOrder[x, y]$ of $x$ and $y$ when comparing their \
classes is not enough \\\n(when $SSClassOrder$ gives $0$).  By default this \
is the standard $Order[x, y]$.\n\nThe classes of $x$ and $y$ are included \
here among the arguments so that one can \\\nmore easily defined a custom \
order for variables of a specific class.  It is \\\nimportant that \
$SSOrderWithinClass[y, x, classy, classx] == \\\n-SSOrderWithinClass[x, y, \
classx, classy]$.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSDeclareProduct", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSDeclareProduct[x**y :> rhs...]$ declares one or more rules \
for the \\\nproduct of two variables (or patterns), namely it declares $x**y$ \
equal to $rhs$. \\\nA condition can be included in the $rhs$: \
$SSDeclareProduct[x**y:>expr/;cond]$. \\\nBy default, this rule is only used \
by $SSExpand$ if $x$ and $y$ are not in the \\\npreferred order.\n\n\
$Apply->True$ causes the rules being declared to be applied even if $x**y$ is \
\\\nalready in the preferred order (including the case where they coincide). \
\\\nThis may lead to infinite recursion if the right-hand side involves \
$y**x$.\>\""}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSDeclareCommutator", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSDeclareCommutator[{x,y} :> rhs...]$ declares one or more \
rules for the \\\ncommutator of two variables (or patterns), namely it \
declares $x**y$ equal to \\\n$y**x+rhs$ (and conversely $y**x$ equal to \
$x**y-rhs$).  This rule is used by \\\n$SSExpand$ to bring products in the \
preferred order.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSDeclareAnticommutator", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$SSDeclareAnticommutator[{x,y} :> rhs...]$ declares one or more \
rules for \\\nthe anticommutator of two variables (or patterns), namely it \
declares $x**y$ \\\nequal to $-y**x+rhs$ (and conversely $y**x$ equal to \
$-x**y+rhs$).  It also takes \\\ncare of the case where $x$ and $y$ are \
equal: $x**x$ is declared to be $rhs/2$.  This \\\nrule is used by $SSExpand$ \
to bring products in the preferred order.\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PartialD", "::", "usage"}], "=", 
    RowBox[{
    "Usage", "@", 
     "\"\<\\\n$PartialD[x_]$ represents the partial derivative operator with \
respect to the \\\n(scalar) variable $x$.  In products, it can be commuted \
through any \\\nexpression using $PartialD[x]**y - y**PartialD[x] == D[y, \
x]$.\>\""}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$SSMaxPower", "=", "100"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Before", " ", "declaring", " ", "any", " ", "global", " ", "rule", " ", 
     "which", " ", "involves", " ", "NonCommutativeMultiply", " ", "we", " ", 
     "made", " ", "sure", " ", "to", " ", "remove", " ", "its", " ", 
     "attributes", " ", "Flat", " ", "and", " ", "OneIdentity", " ", "by", 
     " ", "running", " ", 
     RowBox[{
      RowBox[{"ClearAll", "[", "NonCommutativeMultiply", "]"}], ".", 
      "\[IndentingNewLine]", "Flat"}], " ", "leads", " ", "to", " ", 
     "inefficient", " ", "pattern", " ", "matching", " ", "and", " ", "to", 
     " ", 
     RowBox[{"(", 
      RowBox[{"avoidable", " ", "with", " ", "some", " ", "pain"}], ")"}], 
     " ", "infinite", " ", 
     RowBox[{"recursion", ".", "\[IndentingNewLine]", "Additionally"}]}], ",",
     " ", 
    RowBox[{"the", " ", "pattern", " ", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"_", ",", "_NonCommutativeMultiply"}], "]"}], " ", "would", " ",
      "match", " ", "any", " ", 
     RowBox[{
      RowBox[{"NonCommutativeMultiply", "[", "_", "]"}], ".", 
      "\[IndentingNewLine]", "Also"}], " ", "define", " ", "here", " ", 
     "some", " ", "basic", " ", "properties", " ", "of", " ", 
     RowBox[{"NonCommutativeMultiply", "."}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"NonCommutativeMultiply", "[", "]"}], "]"}], ":=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"NonCommutativeMultiply", "[", "a_", "]"}], "]"}], ":=", "a"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", 
      RowBox[{"NonCommutativeMultiply", "[", "b___", "]"}], ",", "c___"}], 
     "]"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"NonCommutativeMultiply", "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", 
      RowBox[{"b_", "?", "NumericQ"}], ",", "c___"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Times", "[", 
    RowBox[{"b", ",", 
     RowBox[{"NonCommutativeMultiply", "[", 
      RowBox[{"a", ",", "c"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"NonCommutativeMultiply", "[", 
     RowBox[{"a___", ",", 
      RowBox[{"b_Times", "?", 
       RowBox[{"(", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"_", "?", "NumericQ"}], "]"}], ")"}]}], ",", "c___"}], "]"}],
     "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"Times", "@@", 
        RowBox[{"Extract", "[", 
         RowBox[{"b", ",", "#"}], "]"}]}], ",", 
       RowBox[{"NonCommutativeMultiply", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Delete", "[", 
          RowBox[{"b", ",", "#"}], "]"}], ",", "c"}], "]"}]}], "]"}], "&"}], 
    "[", "\[IndentingNewLine]", 
    RowBox[{"Position", "[", 
     RowBox[{"b", ",", 
      RowBox[{"_", "?", "NumericQ"}], ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NonCommutativeMultiply", "/:", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Factor", "[", "x_NonCommutativeMultiply", "]"}], "]"}], ":=", 
   RowBox[{"Factor", "/@", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NonCommutativeMultiply", "/:", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{"Expand", "[", "x_NonCommutativeMultiply", "]"}], "]"}], ":=", 
   RowBox[{"Expand", "/@", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NonCommutativeMultiply", "/:", 
    RowBox[{"HoldPattern", "[", 
     RowBox[{"Expand", "[", 
      RowBox[{"x_NonCommutativeMultiply", ",", "patt_"}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Expand", "[", 
       RowBox[{"#", ",", "patt"}], "]"}], "&"}], "/@", "x"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"SSClass", "[", "var", "]"}], " ", "user"}], "-", 
    RowBox[{"defined", " ", "class", " ", "of", " ", 
     RowBox[{"var", ".", "\[IndentingNewLine]", 
      RowBox[{"pClassPos", "[", "class", "]"}]}], " ", "helps", " ", 
     "control", " ", "the", " ", "preferred", " ", 
     RowBox[{"order", ".", "\[IndentingNewLine]", 
      RowBox[{"pClassQ", "[", "str_String", "]"}]}], " ", "is", " ", "True", 
     " ", "if", " ", "str", " ", "is", " ", "a", " ", "class", " ", 
     RowBox[{"name", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"pClassQ", ",", "pClassPos"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pClassQ", "[", "class_String", "]"}], ":=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Head", "[", 
      RowBox[{"pClassPos", "[", "class", "]"}], "]"}], "=!=", "pClassPos"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSClass", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", "_", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetArgumentCount", "[", 
   RowBox[{"SSClass", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plastcp", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SSClass", "/:", 
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "Set", "|", "SetDelayed", "|", "TagSet", "|", "TagSetDelayed"}], ")"}],
       "\[IndentingNewLine]", "[", 
      RowBox[{"___", ",", 
       RowBox[{"SSClass", "[", "___", "]"}], ",", "class_String"}], "]"}], "/;",
      "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"pClassQ", "[", "class", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"pClassPos", "[", "class", "]"}], "=", 
        RowBox[{"(", 
         RowBox[{"plastcp", "+=", "10"}], ")"}]}]}], "]"}]}], "]"}], ":=", 
   "Null"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", 
    RowBox[{"_", "?", "NumericQ"}], "]"}], ":=", "\"\<number\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSClass", "[", "]"}], ":=", "\"\<scalar\>\""}], ";", 
   RowBox[{
    RowBox[{"SSClass", "[", "]"}], "=."}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Kludge", " ", "to", " ", "declare", " ", "class", " ", "\"\<scalar\>\"", 
    " ", "with", " ", "right", " ", 
    RowBox[{"priority", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "[", 
    RowBox[{"PartialD", "[", "_", "]"}], "]"}], ":=", 
   "\"\<differential\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pClassPos", "[", "\"\<differential\>\"", "]"}], "=", "100000"}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SSOfClassQ", "[", "class_", "]"}], "[", "var_", "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSOfClassQ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", "_", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetArgumentCount", "[", 
   RowBox[{"SSOfClassQ", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"SSOfClassQ", "[", "class_String", "]"}], "/;", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"pClassQ", "[", "class", "]"}], "]"}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"SSClass", "::", "unknown"}], ",", "class"}], "]"}]}], 
      "]"}]}], "]"}], ":=", "Null"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSOfClassQ", "[", "class_", "]"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{"SSClass", "[", "#", "]"}], ",", "class"}], "]"}], "&"}], 
     ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SSOrder", "[", 
     RowBox[{"x", ",", " ", "y"}], "]"}], " ", "in", " ", "terms", " ", "of", 
    " ", 
    RowBox[{"SSClassOrder", "[", 
     RowBox[{"c", ",", " ", "d"}], "]"}], " ", "and", " ", 
    RowBox[{"SSOrderWithinClass", "[", 
     RowBox[{"x", ",", " ", "y", ",", " ", "c", ",", " ", "d"}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSOrder", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetArgumentCount", "[", 
   RowBox[{"SSOrder", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"SSOrder", "[", 
     RowBox[{"x_", ",", " ", "y_"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"cx", "=", 
        RowBox[{"SSClass", "[", "x", "]"}]}], ",", 
       RowBox[{"cy", "=", 
        RowBox[{"SSClass", "[", "y", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"SSClassOrder", "[", 
        RowBox[{"cx", ",", "cy"}], "]"}], ",", "1", ",", "1", ",", 
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "\[IndentingNewLine]", "_", ",", 
       RowBox[{"SSOrderWithinClass", "[", 
        RowBox[{"x", ",", "y", ",", "cx", ",", "cy"}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSClassOrder", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetArgumentCount", "[", 
   RowBox[{"SSClassOrder", ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"SSClassOrder", "[", 
     RowBox[{
      RowBox[{"c_String", "?", "pClassQ"}], ",", 
      RowBox[{"d_String", "?", "pClassQ"}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"pClassQ", "[", "c", "]"}], "&&", 
      RowBox[{"pClassQ", "[", "d", "]"}]}], ",", 
     RowBox[{"Order", "[", 
      RowBox[{
       RowBox[{"pClassPos", "[", "c", "]"}], ",", 
       RowBox[{"pClassPos", "[", "d", "]"}]}], "]"}], ",", "0"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSOrderWithinClass", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_", ",", "_"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetArgumentCount", "[", 
   RowBox[{"SSOrderWithinClass", ",", "4"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSOrderWithinClass", "[", 
      RowBox[{"x_", ",", "y_", ",", "_", ",", "_"}], "]"}], "]"}], ":=", 
    RowBox[{"Order", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Second", " ", "argument", " ", "of", " ", "pProd", " ", "is", " ", "of", 
     " ", "the", " ", "form", " ", 
     RowBox[{
      RowBox[{"x", "**", "y"}], ".", "\[IndentingNewLine]", "First"}], " ", 
     "argument", " ", "of", " ", "pProd", " ", "gives", " ", 
     RowBox[{"pOrder", "[", 
      RowBox[{"x", ",", " ", "y"}], "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "fewer", " ", "rules", " ", "apply", " ", "when", " ", "that", " ", 
      "is"}], " ", "-", "1."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"pProd", ",", "pProdExpr"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pProd", ",", "HoldRest"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pProd", "[", 
      RowBox[{"_", ",", "expr_"}], "]"}], "]"}], ":=", 
    RowBox[{"Hold", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pProdExpr", " ", "has", " ", "non"}], "-", 
    RowBox[{
    "trivial", " ", "code", " ", "to", " ", "deal", " ", "with", " ", 
     RowBox[{"powers", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pProdExpr", ",", "HoldAll"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pProdExpr", "[", 
      RowBox[{"x_", "^", 
       RowBox[{"(", 
        RowBox[{"m_Integer", "?", "Positive"}], ")"}]}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p", "=", 
        RowBox[{"pProd", "[", 
         RowBox[{"0", ",", 
          RowBox[{"x", "**", "x"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"p", "^", 
         RowBox[{"Quotient", "[", 
          RowBox[{"m", ",", "2"}], "]"}]}], "**", 
        RowBox[{"x", "^", 
         RowBox[{"Mod", "[", 
          RowBox[{"m", ",", "2"}], "]"}]}]}], "/;", 
       RowBox[{
        RowBox[{"p", "=!=", 
         RowBox[{"Hold", "[", 
          RowBox[{"x", "**", "x"}], "]"}]}], "&&", 
        RowBox[{"p", "=!=", 
         RowBox[{"x", "^", "2"}]}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"pProdExpr", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a___", "**", "b_"}], ")"}], "**", "c_"}], "]"}], "]"}], ":=",
      "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", "=", 
         RowBox[{"pProdExpr", "[", 
          RowBox[{"b", "**", "c"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"a", "**", "p"}], "/;", 
        RowBox[{"p", "=!=", 
         RowBox[{"Hold", "[", 
          RowBox[{"b", "**", "c"}], "]"}]}]}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"pProdExpr", "[", 
       RowBox[{"a_", "**", 
        RowBox[{"(", 
         RowBox[{"b_", "**", "c___"}], ")"}]}], "]"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", "=", 
         RowBox[{"pProdExpr", "[", 
          RowBox[{"a", "**", "b"}], "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"p", "**", "c"}], "/;", 
        RowBox[{"p", "=!=", 
         RowBox[{"Hold", "[", 
          RowBox[{"a", "**", "b"}], "]"}]}]}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pProdExpr", "[", 
      RowBox[{"x_", "**", 
       RowBox[{"(", 
        RowBox[{"y", ":", 
         RowBox[{"_Times", "|", "_NonCommutativeMultiply"}]}], ")"}]}], "]"}],
      "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"res", "=", 
        RowBox[{
         RowBox[{"mark", "[", 
          RowBox[{"x", ",", 
           RowBox[{"pFactorList", "[", "y", "]"}], ",", "False"}], "]"}], "//.", 
         RowBox[{
          RowBox[{"mark", "[", 
           RowBox[{"a_", ",", 
            RowBox[{"{", 
             RowBox[{"b_", ",", "c___"}], "}"}], ",", "_"}], "]"}], 
          "\[RuleDelayed]", "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p", "=", 
              RowBox[{"pProdExpr", "[", 
               RowBox[{"a", "**", "b"}], "]"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"mark", "[", 
              RowBox[{"p", ",", 
               RowBox[{"{", "c", "}"}], ",", "True"}], "]"}], "/;", 
             RowBox[{"p", "=!=", 
              RowBox[{"Hold", "[", 
               RowBox[{"a", "**", "b"}], "]"}]}]}]}], "]"}]}]}]}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"res", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "**", 
        RowBox[{
         RowBox[{"Head", "[", "y", "]"}], "@@", 
         RowBox[{"res", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "/;", 
       RowBox[{"res", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"factors", "=", 
        RowBox[{"pFactorList", "[", "y", "]"}]}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"b", "=", 
          RowBox[{"First", "[", "factors", "]"}]}], "}"}], ",", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"p", "=", 
            RowBox[{"pProdExpr", "[", 
             RowBox[{"a", "**", "b"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"p", "**", 
            RowBox[{"Times", "@@", 
             RowBox[{"Rest", "[", "factors", "]"}]}]}], "\[IndentingNewLine]",
            "/;", 
           RowBox[{"p", "=!=", 
            RowBox[{"Hold", "[", 
             RowBox[{"a", "**", "b"}], "]"}]}]}]}], "]"}]}], "]"}]}], "]"}], 
    "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pb", "=", 
        RowBox[{"FirstCase", "[", 
         RowBox[{"y", ",", 
          RowBox[{"b_", "\[RuleDelayed]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"p", "=", 
               RowBox[{"pProdExpr", "[", 
                RowBox[{"x", "**", "b"}], "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"p", ",", "b"}], "}"}], "/;", 
              RowBox[{"p", "=!=", 
               RowBox[{"Hold", "[", 
                RowBox[{"x", "**", "b"}], "]"}]}]}]}], "]"}]}]}], "]"}]}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"pb", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "**", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{"y", ",", 
          RowBox[{"pb", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "1"}], "]"}]}], "/;", 
       RowBox[{"pb", "=!=", 
        RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}]}]}], "]"}], ";"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"pProdExpr", "[", 
       RowBox[{"x_Times", "**", "y_"}], "]"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{"<", "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ap", "=", 
          RowBox[{"FirstCase", "[", 
           RowBox[{"x", ",", 
            RowBox[{"a_", "\[RuleDelayed]", 
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"p", "=", 
                 RowBox[{"pProdExpr", "[", 
                  RowBox[{"a", "**", "y"}], "]"}]}], "}"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"a", ",", "p"}], "}"}], "/;", 
                RowBox[{"p", "=!=", 
                 RowBox[{"Hold", "[", 
                  RowBox[{"a", "**", "y"}], "]"}]}]}]}], "]"}]}]}], "]"}]}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"x", ",", 
            RowBox[{"ap", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}], "**", 
          RowBox[{"ap", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "/;", 
         RowBox[{"ap", "=!=", 
          RowBox[{"Missing", "[", "\"\<NotFound\>\"", "]"}]}]}]}], "]"}]}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pProdExpr", "[", 
     RowBox[{"x_NonCommutativeMultiply", "**", "y_"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{"mark", "[", 
         RowBox[{
          RowBox[{"pFactorList", "[", "x", "]"}], ",", "y", ",", "False"}], 
         "]"}], "//.", 
        RowBox[{
         RowBox[{"mark", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"a___", ",", "b_"}], "}"}], ",", "c_", ",", "_"}], "]"}], 
         "\[RuleDelayed]", "\[IndentingNewLine]", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"p", "=", 
             RowBox[{"pProdExpr", "[", 
              RowBox[{"b", "**", "c"}], "]"}]}], "}"}], ",", 
           RowBox[{
            RowBox[{"mark", "[", 
             RowBox[{
              RowBox[{"{", "a", "}"}], ",", "p", ",", "True"}], "]"}], "/;", 
            RowBox[{"p", "=!=", 
             RowBox[{"Hold", "[", 
              RowBox[{"b", "**", "c"}], "]"}]}]}]}], "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"NonCommutativeMultiply", "@@", 
        RowBox[{"res", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "**", 
       RowBox[{"res", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "/;", 
      RowBox[{"res", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pProdExpr", "[", 
     RowBox[{"x_Times", "**", "y_"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"mark", "[", 
          RowBox[{
           RowBox[{"pFactorList", "[", "x", "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", "//.", 
         RowBox[{
          RowBox[{"mark", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"a___", ",", "b_"}], "}"}], ",", 
            RowBox[{"{", "c___", "}"}]}], "]"}], "\[RuleDelayed]", 
          "\[IndentingNewLine]", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p", "=", 
              RowBox[{"pProdExpr", "[", 
               RowBox[{"b", "**", "y"}], "]"}]}], "}"}], ",", 
            RowBox[{"Switch", "[", 
             RowBox[{"p", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"b", " ", "y"}], "|", 
               RowBox[{"HoldPattern", "[", 
                RowBox[{"y", "**", "b"}], "]"}]}], ",", 
              RowBox[{"mark", "[", 
               RowBox[{
                RowBox[{"{", "a", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "c"}], "}"}]}], "]"}], ",", 
              RowBox[{"(*", 
               RowBox[{"Continue", " ", "commuting", " ", 
                RowBox[{"y", "."}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Hold", "[", 
               RowBox[{"b", "**", "y"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Times", "[", 
                  RowBox[{"a", ",", "b", ",", "c"}], "]"}], "**", "y"}], ",", 
                "False"}], "}"}], ",", " ", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "If", " ", "y", " ", "only", " ", "commutes", " ", 
                 "partway"}], ",", " ", 
                RowBox[{
                 RowBox[{"don", "'"}], "t", " ", "at", " ", 
                 RowBox[{"all", "."}]}]}], "*)"}], "\[IndentingNewLine]", "_",
               ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Times", "[", "a", "]"}], "**", "p", "**", 
                 RowBox[{"Times", "[", "c", "]"}]}], ",", "True"}], "}"}]}], 
             "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "/.", 
        RowBox[{
         RowBox[{"mark", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", 
           RowBox[{"{", "c___", "}"}]}], "]"}], "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Times", "[", 
            RowBox[{"y", ",", "c"}], "]"}], ",", "True"}], "}"}]}]}]}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"First", "[", "res", "]"}], "/;", 
      RowBox[{"Last", "[", "res", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pProdExpr", "[", 
     RowBox[{
      RowBox[{"x_", "^", 
       RowBox[{"(", 
        RowBox[{"m_:", "1"}], ")"}]}], "**", 
      RowBox[{"x_", "^", 
       RowBox[{"(", 
        RowBox[{"n_:", "1"}], ")"}]}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"l", "=", 
       RowBox[{"m", "+", "n"}]}], "}"}], ",", 
     RowBox[{"x", "^", "l"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pProdExpr", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"x_", "^", 
        RowBox[{"(", 
         RowBox[{"m_Integer:", "1"}], ")"}]}], "**", 
       RowBox[{"y_", "^", 
        RowBox[{"(", 
         RowBox[{"n_Integer:", "1"}], ")"}]}]}], "/;", 
      RowBox[{
       RowBox[{"m", "\[GreaterEqual]", "1"}], "&&", 
       RowBox[{"n", "\[GreaterEqual]", "1"}]}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", "=", 
       RowBox[{"pProd", "[", 
        RowBox[{
         RowBox[{"pOrder", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"x", "**", "y"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{"p", ",", 
          RowBox[{
           RowBox[{"HoldPattern", "[", 
            RowBox[{"y", "**", "x"}], "]"}], "|", 
           RowBox[{"x", " ", "y"}]}]}], "]"}], ",", 
        RowBox[{
         RowBox[{"x", "^", "m"}], " ", 
         RowBox[{"y", "^", "n"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"m", "===", "1"}], ",", 
           RowBox[{
            RowBox[{"##", "&"}], "[", "]"}], ",", 
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{"m", "-", "1"}], ")"}]}]}], "]"}], "**", "p", "**", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"n", "===", "1"}], ",", 
           RowBox[{
            RowBox[{"##", "&"}], "[", "]"}], ",", 
           RowBox[{"y", "^", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "/;", 
      RowBox[{"p", "=!=", 
       RowBox[{"Hold", "[", 
        RowBox[{"x", "**", "y"}], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pProdExpr", "[", "expr_", "]"}], "]"}], ":=", 
    RowBox[{"Hold", "[", "expr", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "drop", " ", "this", " ", "def", " ", "and", " ", "simply", " ", "leave", 
     " ", "pProdExpr", " ", "unevaluated"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Declaring", " ", 
    RowBox[{"products", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "pRuleToSet", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pRuleToSet", "[", "Rule", "]"}], ":=", "Set"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pRuleToSet", "[", "RuleDelayed", "]"}], ":=", "SetDelayed"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "pDeclareProduct", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pDeclareProduct", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pDeclareProduct", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rule", ":", 
         RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
       RowBox[{"lhs_", ",", "rhs_"}], "]"}], ",", "always_"}], "]"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"order", "=", 
       RowBox[{"If", "[", 
        RowBox[{"always", ",", "_", ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"pRuleToSet", "[", "rule", "]"}], "[", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"pProd", "[", 
         RowBox[{"order", ",", "lhs"}], "]"}], "]"}], ",", "rhs"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SSDeclareProduct", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Apply\>\"", "\[Rule]", "False"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SSDeclareProduct", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSDeclareProduct", "[", 
      RowBox[{
       RowBox[{"rules", ":", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
           RowBox[{
            RowBox[{"_", "**", "_"}], ",", "_"}], "]"}], ")"}], "..."}]}], 
       ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"always", "=", 
        RowBox[{"OptionValue", "[", "Apply", "]"}]}], "}"}], ",", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pDeclareProduct", "[", 
          RowBox[{"#", ",", "always"}], "]"}], "&"}], ",", 
        RowBox[{"Hold", "[", "rules", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Declaring", " ", 
     RowBox[{"commutators", ":", " ", 
      RowBox[{
      "some", " ", "work", " ", "needed", " ", "to", " ", "force", " ", 
       RowBox[{"x", "**", "y"}]}]}]}], "\[RuleDelayed]", 
    RowBox[{
    "x", "*", "y", " ", "when", " ", "commutator", " ", "evaluates", " ", 
     "to", " ", "0."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "pDeclareCommutator", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pDeclareCommutator", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pDeclareCommutator", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"rule", ":", 
        RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", "rhs_"}], "]"}], "]"}], "]"}], 
   ":=", "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"pRuleToSet", "[", "rule", "]"}], "[", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"pProd", "[", 
         RowBox[{"o_", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", ":", "x"}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{"q", ":", "y"}], ")"}]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", "=", "rhs"}], "}"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"r", "===", "0"}], ",", 
            RowBox[{"p", " ", "q"}], ",", 
            RowBox[{
             RowBox[{"q", "**", "p"}], "+", "r"}]}], "]"}], "/;", 
          RowBox[{
           RowBox[{"r", "===", "0"}], "||", 
           RowBox[{"o", "===", 
            RowBox[{"-", "1"}]}]}]}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pRuleToSet", "[", "rule", "]"}], "[", 
      RowBox[{
       RowBox[{"HoldPattern", "[", 
        RowBox[{"pProd", "[", 
         RowBox[{"o_", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"q", ":", "y"}], ")"}], "**", 
           RowBox[{"(", 
            RowBox[{"p", ":", "x"}], ")"}]}]}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"r", "=", "rhs"}], "}"}], ",", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"r", "===", "0"}], ",", 
            RowBox[{"p", " ", "q"}], ",", 
            RowBox[{
             RowBox[{"p", "**", "q"}], "-", "r"}]}], "]"}], "/;", 
          RowBox[{
           RowBox[{"r", "===", "0"}], "||", 
           RowBox[{"o", "===", 
            RowBox[{"-", "1"}]}]}]}]}], "]"}]}], "]"}], ";"}], ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SSDeclareCommutator", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSDeclareCommutator", "[", 
      RowBox[{"rules", ":", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"_", ",", "_"}], "}"}], ",", "_"}], "]"}], ")"}], 
        "..."}]}], "]"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Scan", "[", 
     RowBox[{"pDeclareCommutator", ",", 
      RowBox[{"Hold", "[", "rules", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Declaring", " ", "anticommutator"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "pDeclareAnticommutator", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pDeclareAnticommutator", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pDeclareAnticommutator", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rule", ":", 
         RowBox[{"Rule", "|", "RuleDelayed"}]}], ")"}], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], ",", "rhs_"}], "]"}], ",", 
      "always_"}], "]"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"pDeclareProduct", "[", 
      RowBox[{
       RowBox[{"rule", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", ":", "x"}], ")"}], "**", 
          RowBox[{"(", 
           RowBox[{"q", ":", "y"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"q", "**", "p"}]}], "+", "rhs"}]}], "]"}], ",", "False"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pDeclareProduct", "[", 
      RowBox[{
       RowBox[{"rule", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"q", ":", "y"}], ")"}], "**", 
          RowBox[{"(", 
           RowBox[{"p", ":", "x"}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"p", "**", "q"}]}], "+", "rhs"}]}], "]"}], ",", "False"}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"pDeclareProduct", "[", 
      RowBox[{
       RowBox[{"rule", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"p", ":", "x"}], ")"}], "**", 
          RowBox[{"(", 
           RowBox[{"p", ":", "y"}], ")"}]}], ",", 
         RowBox[{"rhs", "/", "2"}]}], "]"}], ",", "always"}], "]"}], ";"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SSDeclareAnticommutator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<Apply\>\"", "\[Rule]", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SSDeclareAnticommutator", ",", "HoldAll"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSDeclareAnticommutator", "[", 
      RowBox[{
       RowBox[{"rules", ":", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Rule", "|", "RuleDelayed"}], ")"}], "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"_", ",", "_"}], "}"}], ",", "_"}], "]"}], ")"}], 
         "..."}]}], ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"always", "=", 
        RowBox[{"OptionValue", "[", "Apply", "]"}]}], "}"}], ",", 
      RowBox[{"Scan", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"pDeclareAnticommutator", "[", 
          RowBox[{"#", ",", "always"}], "]"}], "&"}], ",", 
        RowBox[{"Hold", "[", "rules", "]"}]}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pTmpPos", "[", "var", "]"}], " ", "gives", " ", "inverse", " ", 
    "map", " ", "of", " ", "the", " ", "Order", " ", "option", " ", "of", " ", 
    RowBox[{"SSExpand", ".", "\[IndentingNewLine]", "pOrder"}], " ", "gives", 
    " ", "the", " ", "current", " ", "preferred", " ", 
    RowBox[{"order", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"pTmpPos", ",", "pOrder"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pTmpPos", "[", "_", "]"}], "]"}], ":=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{
      RowBox[{"Power", "[", 
       RowBox[{"x_", ",", "n_"}], "]"}], ",", "y_"}], "]"}], "]"}], ":=", 
   RowBox[{"pOrder", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"Power", "[", 
       RowBox[{"y_", ",", "n_"}], "]"}]}], "]"}], "]"}], ":=", 
   RowBox[{"pOrder", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{
      RowBox[{"x", ":", 
       RowBox[{"(", 
        RowBox[{"_Plus", "|", "_Times", "|", "_NonCommutativeMultiply"}], 
        ")"}]}], ",", "y_"}], "]"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"pOrder", "[", 
    RowBox[{
     RowBox[{"Hold", "@@", "x"}], ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{"x_", ",", 
      RowBox[{"y", ":", 
       RowBox[{"(", 
        RowBox[{"_Plus", "|", "_Times", "|", "_NonCommutativeMultiply"}], 
        ")"}]}]}], "]"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"pOrder", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Hold", "@@", "y"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{"x_Hold", ",", "y_Hold"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Order", "[", 
    RowBox[{"0", ",", 
     RowBox[{"Plus", "@@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Outer", "[", 
        RowBox[{"pOrder", ",", "x", ",", "y"}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{"x_Hold", ",", "y_"}], "]"}], "]"}], ":=", 
   RowBox[{"pOrder", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Hold", "[", "y", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pOrder", "[", 
     RowBox[{"x_", ",", "y_Hold"}], "]"}], "]"}], ":=", 
   RowBox[{"pOrder", "[", 
    RowBox[{
     RowBox[{"Hold", "[", "x", "]"}], ",", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pOrder", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{
      RowBox[{"Order", "[", 
       RowBox[{
        RowBox[{"pTmpPos", "[", "x", "]"}], ",", 
        RowBox[{"pTmpPos", "[", "y", "]"}]}], "]"}], ",", "1", ",", "1", ",", 
      
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "1"}], ",", "_", ",", 
      RowBox[{"SSOrder", "[", 
       RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"SSExpand", "[", 
       RowBox[{"expr", ",", " ", "options___"}], "]"}], " ", "or", " ", 
      RowBox[{
       RowBox[{"SSExpand", "[", "options___", "]"}], "[", "expr", "]"}], 
      "\[IndentingNewLine]", "distributes", " ", "and", " ", "applies", " ", 
      RowBox[{"commutation", "/", "product"}], " ", 
      RowBox[{"rules", ".", "\[IndentingNewLine]", "Distribute"}]}], 
     "\[Rule]", 
     RowBox[{
      RowBox[{
      "patt", " ", "only", " ", "\"\<distribute out\>\"", " ", "terms", " ", 
       "matching", " ", 
       RowBox[{"patt", ".", "\[IndentingNewLine]", "Expand"}]}], "\[Rule]", 
      RowBox[{
       RowBox[{"patt", " ", "uses", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Expand", "[", 
           RowBox[{"#", ",", "patt"}], "]"}], "&"}], ")"}], " ", "instead", 
        " ", "of", " ", 
        RowBox[{"Expand", ".", "\[IndentingNewLine]", "Only"}]}], "\[Rule]", 
       RowBox[{
        RowBox[{
        "patt", " ", "only", " ", "apply", " ", "rules", " ", "to", " ", 
         "factors", " ", "matching", " ", 
         RowBox[{"patt", ".", "\[IndentingNewLine]", "Order"}]}], "\[Rule]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"patt1", ",", "..."}], "}"}], " ", "preferred", " ", 
         "order"}]}]}]}]}], ",", " ", 
    RowBox[{"_", " ", "is", " ", "special"}], ",", " ", 
    RowBox[{"two", " ", "_", " ", "is", " ", 
     RowBox[{"error", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSExpand", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"_.", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SSExpand", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Distribute\>\"", "\[Rule]", "_"}], ",", 
     RowBox[{"\"\<Expand\>\"", "\[Rule]", 
      RowBox[{"Sequence", "[", "]"}]}], ",", 
     RowBox[{"\"\<Only\>\"", "\[Rule]", "_"}], ",", 
     RowBox[{"\"\<Order\>\"", "\[Rule]", 
      RowBox[{"{", "_", "}"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HoldPattern", "[", 
   RowBox[{"SSExpand", "[", 
    RowBox[{"expr___", ",", 
     RowBox[{"opt", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{"Length", "[", 
        RowBox[{"{", "expr", "}"}], "]"}]}], ",", 
      RowBox[{"order", "=", 
       RowBox[{"OptionValue", "[", "\"\<Order\>\"", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "===", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SSExpand", "[", 
         RowBox[{"#1", ",", "opt", ",", "##2"}], "]"}], "&"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "pTmpPos", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"pTmpPos", "[", "_", "]"}], "=", 
           RowBox[{
            RowBox[{"Length", "[", "order", "]"}], "+", "1"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"pTmpPos", "[", "#1", "]"}], "=", 
               RowBox[{"First", "[", "#2", "]"}]}], ")"}], "&"}], ",", 
            "order"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"distribute", "=", 
           RowBox[{"OptionValue", "[", "\"\<Distribute\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"expand", "=", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"e", "=", 
               RowBox[{"OptionValue", "[", "\"\<Expand\>\"", "]"}]}], "}"}], 
             ",", 
             RowBox[{
              RowBox[{"Expand", "[", 
               RowBox[{"#", ",", "e"}], "]"}], "&"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"only", "=", 
           RowBox[{"OptionValue", "[", "\"\<Only\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"pExpand", "[", "expr", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}], "/;", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", ">", "1"}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"SSExpand", "::", "argx"}], ",", "SSExpand", ",", "n"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Head", "[", "order", "]"}], "=!=", "List"}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"SSExpand", "::", "badopt"}], ",", "order"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Count", "[", 
         RowBox[{"order", ",", 
          RowBox[{"Verbatim", "[", "_", "]"}]}], "]"}], "\[GreaterEqual]", 
        "2"}], ",", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"SSExpand", "::", "badopt"}], ",", "order"}], "]"}], ",", 
       "\[IndentingNewLine]", "True", ",", "True"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distribute", "=", "_"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expand", "=", "Expand"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"only", "=", "_"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pPrepDist", "[", 
      RowBox[{
       RowBox[{"e1", "+", "e2", "+"}], "..."}], "]"}], " ", "yields", " ", 
     "for", " ", "instance", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"e3", "+", "e4", "+"}], "..."}], ",", "e1", ",", "e2", ",", 
       "..."}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "where", " ", "the", " ", "first", " ", "item", " ", "is", " ", "a", " ", 
     "sum", " ", "of", " ", "the", " ", "terms", " ", "free", " ", "of", " ", 
     "the", " ", "pattern", " ", "distribute"}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "namely", " ", "terms", " ", "that", " ", "should", " ", "be", " ", 
     "kept", " ", "together"}], ",", " ", 
    RowBox[{
    "and", " ", "other", " ", "terms", " ", "are", " ", "those", " ", "that", 
     "\[IndentingNewLine]", "should", " ", "be", " ", 
     RowBox[{"distributed", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"pPrepDist", ",", "pDistribute"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pPrepDist", "[", "expr_Plus", "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"assoc", "=", 
       RowBox[{"GroupBy", "[", 
        RowBox[{
         RowBox[{"List", "@@", "expr"}], ",", 
         RowBox[{"FreeQ", "[", "distribute", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"keep", "=", 
          RowBox[{"Lookup", "[", 
           RowBox[{"assoc", ",", "True", ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ",", 
         RowBox[{"dist", "=", 
          RowBox[{"Lookup", "[", 
           RowBox[{"assoc", ",", "False", ",", 
            RowBox[{"{", "}"}]}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Plus", "@@", "keep"}], "}"}], ",", "dist"}], "]"}], ",", 
         "0"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pPrepDist", "[", "expr_", "]"}], "]"}], ":=", 
    RowBox[{"{", "expr", "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pDistribute", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}], "**", 
       RowBox[{"(", 
        RowBox[{"c", "+", "d"}], ")"}]}], "]"}], " ", "gives", " ", 
     RowBox[{"a", "**", "c"}]}], "+", 
    RowBox[{"b", "**", "c"}], "+", 
    RowBox[{"a", "**", "d"}], "+", 
    RowBox[{
     RowBox[{"b", "**", "d"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"affected", " ", "by", " ", "Distribute", " ", "option"}], 
       ")"}], "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pDistribute", "[", "arg_NonCommutativeMultiply", "]"}], "]"}], ":=",
     "\[IndentingNewLine]", 
    RowBox[{"Plus", "@@", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Outer", "[", 
       RowBox[{"NonCommutativeMultiply", ",", "\[IndentingNewLine]", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"pPrepDist", "/@", 
          RowBox[{"pFactorList", "[", "arg", "]"}]}]}]}], "]"}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pFactorList", " ", "gives", " ", "a", " ", "list", " ", "of", " ", 
     "factors"}], ",", " ", 
    RowBox[{
    "sorted", " ", "by", " ", "pOrder", " ", "if", " ", "the", " ", "head", 
     " ", "is", " ", "Times"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "pFactorList", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pFactorList", "[", "arg_Times", "]"}], "]"}], ":=", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"List", "@@", "arg"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"pOrder", "[", 
        RowBox[{"#1", ",", "#2"}], "]"}], "\[GreaterEqual]", "0"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pFactorList", "[", "arg_NonCommutativeMultiply", "]"}], "]"}], ":=", 
    RowBox[{"List", "@@", "arg"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "pExpand", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "pExpand", ",", "pExpandShallow", ",", "pExpandTimes", ",", "pExpandNcm"}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"pExpand", ",", "Listable"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExpand", "[", "arg_Plus", "]"}], "]"}], ":=", 
   RowBox[{"pExpand", "/@", "arg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExpand", "[", 
     RowBox[{"arg", ":", 
      RowBox[{"_Times", "|", "_NonCommutativeMultiply", "|", "_Power"}]}], 
     "]"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"pExpandShallow", "[", 
    RowBox[{"pExpand", "/@", "arg"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pExpand", "[", "arg_", "]"}], "]"}], ":=", 
    RowBox[{"expand", "[", "arg", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "pExpandShallow", " ", "receives", " ", "its", " ", "argument", " ", 
     "after", " ", "subparts", " ", "have", " ", "been", " ", "through", " ", 
     
     RowBox[{"pExpand", ".", "\[IndentingNewLine]", "The"}], " ", "head", " ",
      "may", " ", "differ", " ", "from", " ", "the", " ", "original", " ", 
     "argument", " ", "of", " ", "pExpand"}], ",", " ", 
    RowBox[{"due", " ", "to", " ", 
     RowBox[{"evaluation", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExpandShallow", "[", "arg_Times", "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ppd", "=", 
       RowBox[{"pPrepDist", "/@", 
        RowBox[{"pFactorList", "[", "arg", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"ppd", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", "__"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"pExpand", "[", 
        RowBox[{"Plus", "@@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{"NonCommutativeMultiply", ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"Times", "@@", 
              RowBox[{"Flatten", "[", 
               RowBox[{"Cases", "[", 
                RowBox[{"ppd", ",", 
                 RowBox[{"{", "_", "}"}]}], "]"}], "]"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{"ppd", ",", 
               RowBox[{"{", "_", "}"}]}], "]"}]}]}], "]"}], "]"}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"#2", ",", "pExpand", ",", "expand"}], "]"}], "[", 
           RowBox[{"Times", "@@", "#1"}], "]"}], "&"}], ")"}], "@@", 
        RowBox[{"pExpandTimes", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "ppd", "]"}], ",", "False"}], "]"}]}]}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExpandShallow", "[", "arg_NonCommutativeMultiply", "]"}], "]"}],
    ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"expr", "=", 
       RowBox[{"pDistribute", "[", "arg", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"Head", "[", "expr", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Plus", "|", "Power", "|", "Times"}], ",", 
       RowBox[{"pExpand", "[", "expr", "]"}], ",", "\[IndentingNewLine]", 
       "NonCommutativeMultiply", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{"#2", ",", "pExpand", ",", "expand"}], "]"}], "[", 
           RowBox[{"NonCommutativeMultiply", "@@", "#1"}], "]"}], "&"}], 
         ")"}], "@@", 
        RowBox[{"pExpandNcm", "[", 
         RowBox[{
          RowBox[{"List", "@@", "expr"}], ",", "False"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExpandShallow", "[", 
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"y_", "/;", 
        RowBox[{"Not", "[", 
         RowBox[{"NumericQ", "[", "y", "]"}], "]"}]}], ",", 
       RowBox[{"n_Integer", "?", "Positive"}]}], "]"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zlist", "=", 
       RowBox[{"pPrepDist", "[", "y", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "zlist", "]"}], "=!=", "1"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"pExpand", "[", 
        RowBox[{"Plus", "@@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Outer", "[", 
           RowBox[{"NonCommutativeMultiply", ",", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"Table", "[", 
              RowBox[{"zlist", ",", 
               RowBox[{"{", "n", "}"}]}], "]"}]}]}], "]"}], "]"}]}], "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"z", "=", 
           RowBox[{"First", "[", "zlist", "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Head", "[", "z", "]"}], "=!=", "Times"}], "&&", 
            RowBox[{
             RowBox[{"Head", "[", "z", "]"}], "=!=", 
             "NonCommutativeMultiply"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"zn", "=", 
               RowBox[{"pProdExpr", "[", 
                RowBox[{"z", "^", "n"}], "]"}]}], "}"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"zn", "===", 
                RowBox[{"Hold", "[", 
                 RowBox[{"z", "^", "n"}], "]"}]}], ",", 
               RowBox[{"z", "^", "n"}], ",", 
               RowBox[{"pExpand", "[", "zn", "]"}]}], "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"zf", "=", 
               RowBox[{"pFactorList", "[", "z", "]"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{"#2", ",", 
                 RowBox[{
                  RowBox[{"First", "[", "zf", "]"}], "**", 
                  RowBox[{"Sequence", "@@", 
                   RowBox[{"Flatten", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Rest", "[", "zf", "]"}], ",", "#1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", "-", "1"}], "}"}]}], "]"}], "]"}]}], "**", 
                  RowBox[{"Rest", "[", "zf", "]"}]}], ",", 
                 RowBox[{"z", "^", "n"}]}], "]"}], "&"}], "@@", 
              "\[IndentingNewLine]", 
              RowBox[{"pExpandNcm", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Last", "[", "zf", "]"}], ",", 
                  RowBox[{"First", "[", "zf", "]"}]}], "}"}], ",", "False"}], 
               "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExpandShallow", "[", "arg_Power", "]"}], "]"}], ":=", 
   RowBox[{"expand", "[", "arg", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pExpandShallow", "[", "arg_", "]"}], "]"}], ":=", 
    RowBox[{"pExpand", "[", "arg", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pExpandTimes", "[", 
     RowBox[{"arg_List", ",", " ", "y_"}], "]"}], " ", "gives", " ", 
    RowBox[{"pExpandTimes", "[", 
     RowBox[{"result_List", ",", " ", "True"}], "]"}], " ", "or", " ", 
    "remains", " ", 
    RowBox[{"unevaluated", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pExpandTimes", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a___", ",", 
         RowBox[{"b", ":", 
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{"FreeQ", "[", "only", "]"}], ")"}]}], "]"}]}], ",", 
         RowBox[{"c", ":", 
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{"FreeQ", "[", "only", "]"}], ")"}]}], "]"}]}], ",", 
         "d___"}], "}"}], ",", "_"}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"prod", "=", 
        RowBox[{"pProdExpr", "[", 
         RowBox[{"b", "**", "c"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"pExpandTimes", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "prod", ",", "d"}], "}"}], ",", "True"}], "]"}], 
       "\[IndentingNewLine]", "/;", 
       RowBox[{
        RowBox[{"prod", "=!=", 
         RowBox[{"Hold", "[", 
          RowBox[{"b", "**", "c"}], "]"}]}], "&&", 
        RowBox[{"prod", "=!=", 
         RowBox[{"b", " ", "c"}]}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pExpandNcm", "[", 
     RowBox[{"arg_List", ",", " ", "y_"}], "]"}], " ", "gives", " ", 
    RowBox[{"pExpandNcm", "[", 
     RowBox[{"result_List", ",", " ", "True"}], "]"}], " ", "or", " ", 
    "remains", " ", 
    RowBox[{"unevaluated", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pExpandNcm", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a___", ",", 
         RowBox[{"b", ":", 
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{"FreeQ", "[", "only", "]"}], ")"}]}], "]"}]}], ",", 
         RowBox[{"c", ":", 
          RowBox[{"Except", "[", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{"FreeQ", "[", "only", "]"}], ")"}]}], "]"}]}], ",", 
         "d___"}], "}"}], ",", "_"}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"prod", "=", 
        RowBox[{"pProdExpr", "[", 
         RowBox[{"b", "**", "c"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"pExpandNcm", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"a", ",", "prod", ",", "d"}], "}"}], ",", "True"}], "]"}], 
       "\[IndentingNewLine]", "/;", 
       RowBox[{"prod", "=!=", 
        RowBox[{"Hold", "[", 
         RowBox[{"b", "**", "c"}], "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "SSCollect", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "pTermList", ",", "pToPattList", ",", "pCollect", ",", "pCollectRight", ",",
    "pCollectLeft"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pTermList", "[", "x_Plus", "]"}], "]"}], ":=", 
   RowBox[{"List", "@@", "x"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pTermList", "[", "x_", "]"}], "]"}], ":=", 
   RowBox[{"{", "x", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pToPattList", "[", "p_", "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"#", ",", 
         RowBox[{"Verbatim", "[", "_", "]"}]}], "]"}], ",", "#", ",", 
       RowBox[{"Join", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", "_", "}"}]}], "]"}]}], "]"}], "&"}], "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"{", "p", "}"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSCollect", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_.", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SSCollect", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Distribute\>\"", "\[Rule]", "_"}], ",", 
     RowBox[{"\"\<Only\>\"", "\[Rule]", "_"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSCollect", "[", 
      RowBox[{"expr_", ",", "p_", ",", 
       RowBox[{"h", ":", 
        RowBox[{"Except", "[", 
         RowBox[{"_List", "|", "_Rule", "|", "_RuleDelayed"}], "]"}], ":", 
        RowBox[{"(", 
         RowBox[{"#", "&"}], ")"}]}], ",", 
       RowBox[{"Longest", "[", 
        RowBox[{"opts", ":", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"patts", "=", 
        RowBox[{"pToPattList", "[", "p", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expanded", "=", 
          RowBox[{"SSExpand", "[", 
           RowBox[{"expr", ",", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{"Options", "[", "SSExpand", "]"}]}], "]"}], ",", 
            RowBox[{"\"\<Order\>\"", "\[Rule]", "patts"}]}], "]"}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"col", "=", 
            RowBox[{"pCollect", "[", 
             RowBox[{"h", ",", 
              RowBox[{"pTermList", "[", "expanded", "]"}], ",", 
              RowBox[{"Sequence", "@@", "patts"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pOrder", "=", 
              RowBox[{"0", "&"}]}], "}"}], ",", 
            RowBox[{"SSExpand", "[", 
             RowBox[{"col", ",", 
              RowBox[{"Distribute", "\[Rule]", 
               RowBox[{"Except", "[", "_", "]"}]}], ",", 
              RowBox[{"Expand", "\[Rule]", 
               RowBox[{"Except", "[", "_", "]"}]}]}], "]"}]}], "]"}]}], 
         "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "pCollect", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollect", "[", 
     RowBox[{"h_", ",", "expr_List"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"h", "[", 
    RowBox[{"Plus", "@@", "expr"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollect", "[", 
     RowBox[{"h_", ",", "expr_List", ",", 
      RowBox[{"Verbatim", "[", "_", "]"}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"h", "[", 
    RowBox[{"Plus", "@@", "expr"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollect", "[", 
     RowBox[{"h_", ",", "expr_List", ",", 
      RowBox[{"Verbatim", "[", "_", "]"}], ",", "b___", ",", "c_"}], "]"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Plus", "@@", 
    RowBox[{"NonCommutativeMultiply", "@@@", 
     RowBox[{"Reverse", "/@", 
      RowBox[{"Normal", "@", 
       RowBox[{"GroupBy", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pCollectRight", "[", 
            RowBox[{"#", ",", "c"}], "]"}], "&"}], "/@", "expr"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Last", "\[Rule]", "First"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pCollect", "[", 
           RowBox[{"h", ",", 
            RowBox[{"pTermList", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], ",", "_", ",", "b"}], 
           "]"}], "&"}]}], "]"}]}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pCollect", "[", 
      RowBox[{"h_", ",", "expr_List", ",", "a_", ",", "b___"}], "]"}], "]"}], 
    ":=", "\[IndentingNewLine]", 
    RowBox[{"Plus", "@@", 
     RowBox[{"NonCommutativeMultiply", "@@@", 
      RowBox[{"Normal", "@", 
       RowBox[{"GroupBy", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pCollectLeft", "[", 
            RowBox[{"#", ",", "a"}], "]"}], "&"}], "/@", "expr"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"First", "\[Rule]", "Last"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pCollect", "[", 
           RowBox[{"h", ",", 
            RowBox[{"pTermList", "[", 
             RowBox[{"Total", "[", "#", "]"}], "]"}], ",", "b"}], "]"}], 
          "&"}]}], "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pCollectLeft", "[", 
      RowBox[{"expr", ",", "patt"}], "]"}], " ", "yields", " ", 
     RowBox[{"{", 
      RowBox[{"left", ",", "right"}], "}"}], " ", "with", " ", 
     RowBox[{"left", "**", "right"}]}], "\[Equal]", 
    RowBox[{
    "expr", " ", "and", " ", "left", " ", "made", " ", "of", " ", "factors", 
     " ", "matching", " ", 
     RowBox[{"patt", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollectLeft", "[", 
     RowBox[{"expr_NonCommutativeMultiply", ",", "patt_"}], "]"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Catch", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"left", "=", 
          RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"col", "=", 
              RowBox[{"pCollectLeft", "[", 
               RowBox[{
                RowBox[{"expr", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "patt"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"left", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"col", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "left"}], "}"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"col", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "=!=", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Throw", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"NonCommutativeMultiply", "@@", 
                    RowBox[{"Flatten", "[", "left", "]"}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"NonCommutativeMultiply", "[", 
                    RowBox[{
                    RowBox[{"col", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"expr", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}]}], "]"}]}], 
                  "}"}], ",", "pCollect"}], "]"}]}], "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "expr", "]"}]}], "}"}]}], "]"}]}], "]"}], 
      ";", 
      RowBox[{"{", 
       RowBox[{"expr", ",", "1"}], "}"}]}], ",", "pCollect"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollectLeft", "[", 
     RowBox[{"expr_Times", ",", "patt_"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"left", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"right", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"done", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"col", "=", 
            RowBox[{"pCollectLeft", "[", 
             RowBox[{"x", ",", "patt"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"col", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "===", "1"}], ",", 
            RowBox[{"left", "=", 
             RowBox[{"{", 
              RowBox[{"left", ",", "x"}], "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"done", "||", 
             RowBox[{
              RowBox[{"col", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "===", "1"}]}], ",", 
            RowBox[{"right", "=", 
             RowBox[{"{", 
              RowBox[{"right", ",", "x"}], "}"}]}], ",", 
            "\[IndentingNewLine]", "True", ",", 
            RowBox[{
             RowBox[{"done", "=", "True"}], ";", 
             RowBox[{"left", "=", 
              RowBox[{"{", 
               RowBox[{"left", ",", 
                RowBox[{"col", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
             RowBox[{"right", "=", 
              RowBox[{"{", 
               RowBox[{"right", ",", 
                RowBox[{"col", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"List", "@@", "expr"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Times", "@@@", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"{", 
         RowBox[{"left", ",", "right"}], "}"}]}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollectLeft", "[", 
     RowBox[{
      RowBox[{"expr", ":", 
       RowBox[{"Power", "[", 
        RowBox[{"x_", ",", "n_"}], "]"}]}], ",", "patt_"}], "]"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"col", "=", 
       RowBox[{"pCollectLeft", "[", 
        RowBox[{"x", ",", "patt"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"col", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "===", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"expr", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"col", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=!=", "1"}], "&&", 
        RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
        RowBox[{"n", "\[GreaterEqual]", "1"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"col", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"col", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "**", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", "True", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "expr"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pCollectLeft", "[", 
      RowBox[{"expr_", ",", "patt_"}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"expr", ",", "patt"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "expr"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"pCollectRight", "[", 
      RowBox[{"expr", ",", "patt"}], "]"}], " ", "yields", " ", 
     RowBox[{"{", 
      RowBox[{"left", ",", "right"}], "}"}], " ", "with", " ", 
     RowBox[{"left", "**", "right"}]}], "\[Equal]", 
    RowBox[{
    "expr", " ", "and", " ", "right", " ", "made", " ", "of", " ", "factors", 
     " ", "matching", " ", 
     RowBox[{"patt", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollectRight", "[", 
     RowBox[{"expr_NonCommutativeMultiply", ",", "patt_"}], "]"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Catch", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"right", "=", 
          RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"col", "=", 
              RowBox[{"pCollectRight", "[", 
               RowBox[{
                RowBox[{"expr", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "patt"}], "]"}]}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"right", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"col", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", "right"}], "}"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"col", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "=!=", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Throw", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"NonCommutativeMultiply", "[", 
                    RowBox[{
                    RowBox[{"expr", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", 
                    RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
                    RowBox[{"col", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"NonCommutativeMultiply", "@@", 
                    RowBox[{"Flatten", "[", "right", "]"}]}]}], "}"}], ",", 
                 "pCollect"}], "]"}]}], "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "expr", "]"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      RowBox[{"{", 
       RowBox[{"1", ",", "expr"}], "}"}]}], ",", "pCollect"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollectRight", "[", 
     RowBox[{"expr_Times", ",", "patt_"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"left", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"right", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"done", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"col", "=", 
            RowBox[{"pCollectRight", "[", 
             RowBox[{"x", ",", "patt"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"col", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "===", "1"}], ",", 
            RowBox[{"right", "=", 
             RowBox[{"{", 
              RowBox[{"right", ",", "x"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"done", "||", 
             RowBox[{
              RowBox[{"col", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "===", "1"}]}], ",", 
            RowBox[{"left", "=", 
             RowBox[{"{", 
              RowBox[{"left", ",", "x"}], "}"}]}], ",", "\[IndentingNewLine]",
             "True", ",", 
            RowBox[{
             RowBox[{"done", "=", "True"}], ";", 
             RowBox[{"left", "=", 
              RowBox[{"{", 
               RowBox[{"left", ",", 
                RowBox[{"col", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";", 
             RowBox[{"right", "=", 
              RowBox[{"{", 
               RowBox[{"right", ",", 
                RowBox[{"col", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}]}], "]"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"List", "@@", "expr"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Times", "@@@", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"{", 
         RowBox[{"left", ",", "right"}], "}"}]}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pCollectRight", "[", 
     RowBox[{
      RowBox[{"expr", ":", 
       RowBox[{"Power", "[", 
        RowBox[{"x_", ",", "n_"}], "]"}]}], ",", "patt_"}], "]"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"col", "=", 
       RowBox[{"pCollectRight", "[", 
        RowBox[{"x", ",", "patt"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"col", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "===", "1"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "expr"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"col", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "=!=", "1"}], "&&", 
        RowBox[{"IntegerQ", "[", "n", "]"}], "&&", 
        RowBox[{"n", "\[GreaterEqual]", "1"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"n", "-", "1"}], ")"}]}], "**", 
          RowBox[{"col", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"col", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]",
        "True", ",", 
       RowBox[{"{", 
        RowBox[{"expr", ",", "1"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pCollectRight", "[", 
      RowBox[{"expr_", ",", "patt_"}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MatchQ", "[", 
       RowBox[{"expr", ",", "patt"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "expr"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"expr", ",", "1"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "SSMonomials", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "pMonomials", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SyntaxInformation", "[", "SSMonomials", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"_", ",", "_", ",", "_.", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SSMonomials", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Distribute\>\"", "\[Rule]", "_"}], ",", 
     RowBox[{"\"\<Only\>\"", "\[Rule]", "_"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"SSMonomials", "[", 
      RowBox[{"expr_", ",", "p_", ",", 
       RowBox[{"h", ":", 
        RowBox[{"Except", "[", 
         RowBox[{"_List", "|", "_Rule", "|", "_RuleDelayed"}], "]"}], ":", 
        RowBox[{"(", 
         RowBox[{"#", "&"}], ")"}]}], ",", 
       RowBox[{"Longest", "[", 
        RowBox[{"opts", ":", 
         RowBox[{"OptionsPattern", "[", "]"}]}], "]"}]}], "]"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"patts", "=", 
        RowBox[{"pToPattList", "[", "p", "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"expanded", "=", 
          RowBox[{"SSExpand", "[", 
           RowBox[{"expr", ",", 
            RowBox[{"FilterRules", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{"Options", "[", "SSExpand", "]"}]}], "]"}], ",", 
            RowBox[{"\"\<Order\>\"", "\[Rule]", "patts"}]}], "]"}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"pMonomials", "[", 
         RowBox[{"h", ",", 
          RowBox[{"pTermList", "[", "expanded", "]"}], ",", 
          RowBox[{"Sequence", "@@", "patts"}]}], "]"}]}], "]"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "pCoefficients", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pMonomials", "[", 
     RowBox[{"h_", ",", "expr_List"}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"h", "[", 
    RowBox[{"Plus", "@@", "expr"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pMonomials", "[", 
     RowBox[{"h_", ",", "expr_List", ",", 
      RowBox[{"Verbatim", "[", "_", "]"}]}], "]"}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"h", "[", 
    RowBox[{"Plus", "@@", "expr"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pMonomials", "[", 
     RowBox[{"h_", ",", "expr_List", ",", 
      RowBox[{"Verbatim", "[", "_", "]"}], ",", "b___", ",", "c_"}], "]"}], 
    "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"GroupBy", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"pCollectRight", "[", 
        RowBox[{"#", ",", "c"}], "]"}], "&"}], "/@", "expr"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Last", "\[Rule]", "First"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pMonomials", "[", 
       RowBox[{"h", ",", 
        RowBox[{"pTermList", "[", 
         RowBox[{"Total", "[", "#", "]"}], "]"}], ",", "_", ",", "b"}], "]"}],
       "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pMonomials", "[", 
      RowBox[{"h_", ",", "expr_List", ",", "a_", ",", "b___"}], "]"}], "]"}], 
    ":=", "\[IndentingNewLine]", 
    RowBox[{"GroupBy", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"pCollectLeft", "[", 
         RowBox[{"#", ",", "a"}], "]"}], "&"}], "/@", "expr"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"First", "\[Rule]", "Last"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pMonomials", "[", 
        RowBox[{"h", ",", 
         RowBox[{"pTermList", "[", 
          RowBox[{"Total", "[", "#", "]"}], "]"}], ",", "b"}], "]"}], "&"}]}],
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "pExprQ", " ", "detects", " ", "some", " ", "common", " ", "expressions", 
    " ", "to", " ", "prevent", " ", "them", " ", "from", " ", "being", " ", 
    "used", " ", "as", " ", "variables"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"pExprQ", ",", "pScalarQ"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pExprQ", "[", 
     RowBox[{
     "_Plus", "|", "_Times", "|", "_NonCommutativeMultiply", "|", "_Power"}], 
     "]"}], "]"}], ":=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pExprQ", "[", "_", "]"}], "]"}], ":=", "False"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "pScalarQ", " ", "detects", " ", "expressions", " ", "involving", " ", 
    "only", " ", "scalars"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pScalarQ", "[", 
     RowBox[{"_", "?", "NumericQ"}], "]"}], "]"}], ":=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"pScalarQ", "[", 
     RowBox[{"x", ":", 
      RowBox[{
      "_Plus", "|", "_Times", "|", "_NonCommutativeMultiply", "|", 
       "_Power"}]}], "]"}], "]"}], ":=", 
   RowBox[{"AllTrue", "[", 
    RowBox[{"x", ",", "pScalarQ"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HoldPattern", "[", 
     RowBox[{"pScalarQ", "[", "x_", "]"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"SSClass", "[", "x", "]"}], "===", "\"\<scalar\>\""}], ")"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "PartialD", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"PartialD", "[", "]"}], "]"}], ":=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"PartialD", "[", 
     RowBox[{"a_", ",", "b__"}], "]"}], "]"}], ":=", 
   RowBox[{"Times", "@@", 
    RowBox[{"PartialD", "/@", 
     RowBox[{"Hold", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{
     RowBox[{"PartialD", "[", "var_", "]"}], "/;", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pExprQ", "[", "var", "]"}], "||", 
        RowBox[{"NumericQ", "[", "var", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Message", "[", 
        RowBox[{
         RowBox[{"PartialD", "::", "notvar"}], ",", "var"}], "]"}]}], "]"}]}],
     "]"}], ":=", "Null"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SSDeclareProduct", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x_", "?", "pScalarQ"}], ")"}], "**", 
      RowBox[{"(", 
       RowBox[{"y_", "?", "pScalarQ"}], ")"}]}], "\[RuleDelayed]", 
     RowBox[{"x", " ", "y"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"PartialD", "[", 
       RowBox[{"x_", "?", "pScalarQ"}], "]"}], "**", 
      RowBox[{"PartialD", "[", 
       RowBox[{"y_", "?", "pScalarQ"}], "]"}]}], "\[RuleDelayed]", 
     RowBox[{
      RowBox[{"PartialD", "[", "x", "]"}], 
      RowBox[{"PartialD", "[", "y", "]"}]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x_", "?", "pScalarQ"}], ")"}], "**", 
      RowBox[{"(", 
       RowBox[{"y_", "?", 
        RowBox[{"(", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{"SSOfClassQ", "[", "\"\<differential\>\"", "]"}], ")"}]}],
           "]"}], ")"}]}], ")"}]}], "\[RuleDelayed]", 
     RowBox[{"x", " ", "y"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"y_", "?", 
        RowBox[{"(", 
         RowBox[{"FreeQ", "[", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{"SSOfClassQ", "[", "\"\<differential\>\"", "]"}], ")"}]}],
           "]"}], ")"}]}], ")"}], "**", 
      RowBox[{"(", 
       RowBox[{"x_", "?", "pScalarQ"}], ")"}]}], "\[RuleDelayed]", 
     RowBox[{"x", " ", "y"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Apply", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSDeclareCommutator", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PartialD", "[", 
        RowBox[{"x_", "?", 
         RowBox[{"(", 
          RowBox[{"SSOfClassQ", "[", "\"\<scalar\>\"", "]"}], ")"}]}], "]"}], 
       ",", 
       RowBox[{"(", 
        RowBox[{"y_", "?", "pScalarQ"}], ")"}]}], "}"}], "\[RuleDelayed]", 
     RowBox[{"D", "[", 
      RowBox[{"y", ",", " ", "x"}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "Messages", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PartialD", "::", "notvar"}], "=", 
   "\"\<PartialD expects one or more variables as its arguments, not the \
expression or number `1`.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSClass", "::", "unknown"}], "=", 
   "\"\<The class `1` was not declared.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SSValidate", "::", "badtimes"}], "=", "\[IndentingNewLine]", 
   "\"\<Uh oh, `1` should probably use \\\"**\\\" instead of usual \
multiplication.\nMaybe some of the factors `2` should be declared to be \
scalars?\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SSExpand", "::", "badopt"}], "=", 
    "\"\<Value `1` of the Order option is invalid.\>\""}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "@@", "allfunctions"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "NonCommutativeMultiply", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Unprotect", "[", "SSClass", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "make", " ", "SSExpand", " ", "and", " ", "SSCollect", " ", "thread", " ",
      "over", " ", "same", " ", "things", " ", "as", " ", "Expand", " ", 
     "and", " ", "Collect"}]}], "*)"}], 
  RowBox[{
   RowBox[{"EndPackage", "[", "]"}], ";"}]}]}], "Input",
 CellChangeTimes->{{3.6731862310054693`*^9, 3.673186637710559*^9}, {
   3.673186669303718*^9, 3.6731866699687843`*^9}, {3.6731867525580425`*^9, 
   3.673187235603342*^9}, {3.6731872729910803`*^9, 3.67318727498428*^9}, {
   3.673187321729954*^9, 3.6731873435041313`*^9}, {3.6731873790206823`*^9, 
   3.67318740990277*^9}, {3.673187589785757*^9, 3.673187611765955*^9}, {
   3.673187722472024*^9, 3.6731879349232674`*^9}, {3.673187976104385*^9, 
   3.6731880975815315`*^9}, {3.673188174985271*^9, 3.6731883098437557`*^9}, {
   3.6731883469294634`*^9, 3.67318848380615*^9}, {3.6731885190316725`*^9, 
   3.6731885464764166`*^9}, {3.6731886299307613`*^9, 
   3.6731887241471815`*^9}, {3.673188790597826*^9, 3.6731888039591618`*^9}, {
   3.6731889361753826`*^9, 3.6731890037031345`*^9}, {3.673189040504814*^9, 
   3.6731894747422333`*^9}, {3.673189506889448*^9, 3.6731895662003784`*^9}, {
   3.6731896761723747`*^9, 3.6731902488996415`*^9}, {3.673190295915343*^9, 
   3.673190344240175*^9}, {3.673190400161766*^9, 3.6731905134650955`*^9}, {
   3.6731905650492535`*^9, 3.6731905692976785`*^9}, {3.6731906920639534`*^9, 
   3.6731907016309104`*^9}, {3.673190823958142*^9, 3.673190824130159*^9}, {
   3.6731908546982155`*^9, 3.6731908550422497`*^9}, {3.6731912705807996`*^9, 
   3.673191275846326*^9}, {3.673197661453823*^9, 3.6731979252381988`*^9}, {
   3.673197956993374*^9, 3.6731979937860527`*^9}, {3.673198069408614*^9, 
   3.6731982858302546`*^9}, {3.673198325930264*^9, 3.673198679953663*^9}, {
   3.673198711119779*^9, 3.6731987131979866`*^9}, {3.673198750512718*^9, 
   3.6731987891605825`*^9}, {3.673198827999466*^9, 3.67319907906357*^9}, {
   3.673199145963259*^9, 3.673199217347397*^9}, {3.6731992498446465`*^9, 
   3.673199448110471*^9}, {3.673199498459505*^9, 3.673199539148574*^9}, {
   3.673199594097068*^9, 3.673199656378296*^9}, {3.6731996930109587`*^9, 
   3.673199856354291*^9}, {3.673199886702326*^9, 3.6732002729399457`*^9}, {
   3.6732003052161727`*^9, 3.673200315902241*^9}, {3.6732006212837763`*^9, 
   3.6732006776294107`*^9}, {3.673201361106819*^9, 3.6732013613637676`*^9}, {
   3.673201673653799*^9, 3.6732017819547997`*^9}, {3.6732018354947996`*^9, 
   3.673202038106799*^9}, {3.6732021172027993`*^9, 3.6732021905887995`*^9}, {
   3.6732023372047997`*^9, 3.6732023392537994`*^9}, {3.673202544993799*^9, 
   3.6732025862793174`*^9}, {3.6732026297146606`*^9, 3.673202630139703*^9}, {
   3.673202692177906*^9, 3.673202803737061*^9}, {3.673202869278614*^9, 
   3.6732029070323896`*^9}, {3.6732031995326366`*^9, 
   3.6732032925549383`*^9}, {3.6732033721999016`*^9, 
   3.6732034695366344`*^9}, {3.673203536340314*^9, 3.6732035407867584`*^9}, {
   3.67320360871255*^9, 3.6732036102827077`*^9}, {3.6732036460172806`*^9, 
   3.673203660601739*^9}, {3.673203848418519*^9, 3.67320391983766*^9}, {
   3.6732039979544706`*^9, 3.673204027668442*^9}, {3.673204123417016*^9, 
   3.6732041812067943`*^9}, {3.673204503204991*^9, 3.673204565813251*^9}, {
   3.6732046371213813`*^9, 3.6732048147601433`*^9}, {3.6732048850261693`*^9, 
   3.6732050591535797`*^9}, {3.6732050945221167`*^9, 3.67320514966263*^9}, {
   3.6732063685665083`*^9, 3.6732063729489465`*^9}, {3.673206418458497*^9, 
   3.6732064397186227`*^9}, {3.67320647469512*^9, 3.6732066157702265`*^9}, {
   3.673206675481197*^9, 3.673206693344983*^9}, 3.6732067380014477`*^9, 
   3.673206786809328*^9, 3.6732069429379396`*^9, 3.673207027067352*^9, {
   3.6732071743260765`*^9, 3.6732071752441683`*^9}, {3.6732072710327463`*^9, 
   3.6732072894445868`*^9}, {3.6732074573653774`*^9, 
   3.6732074938700275`*^9}, {3.673207530866727*^9, 3.6732075323648767`*^9}, {
   3.673207578663506*^9, 3.6732077363242702`*^9}, {3.673207766964334*^9, 
   3.6732077731269503`*^9}, {3.6732078247361107`*^9, 3.673207825120149*^9}, {
   3.6732078995215883`*^9, 3.673207976077243*^9}, {3.673208453746005*^9, 
   3.6732084659322243`*^9}, {3.673208531287759*^9, 3.673208554330063*^9}, {
   3.673208623639993*^9, 3.673208658090438*^9}, {3.673208724447073*^9, 
   3.6732087434049683`*^9}, 3.673208777893417*^9, {3.6732088460772343`*^9, 
   3.673208854170044*^9}, {3.673209470678688*^9, 3.673209496021222*^9}, {
   3.673209546863306*^9, 3.6732095777143908`*^9}, {3.6732096847900977`*^9, 
   3.673209742770895*^9}, {3.673257917708081*^9, 3.6732579200553155`*^9}, {
   3.673258664162719*^9, 3.6732586793392363`*^9}, {3.673258742519554*^9, 
   3.673258746549957*^9}, {3.673259010428342*^9, 3.6732591922105184`*^9}, {
   3.673259244449742*^9, 3.6732592982821245`*^9}, {3.6732593316014557`*^9, 
   3.673259497846079*^9}, {3.673259572491543*^9, 3.6732596303743305`*^9}, {
   3.673259810831374*^9, 3.6732598450267935`*^9}, {3.673259880449335*^9, 
   3.673259887560046*^9}, {3.6732599369649863`*^9, 3.6732599638166714`*^9}, {
   3.6732604462859135`*^9, 3.6732604464809327`*^9}, {3.673260791555437*^9, 
   3.6732610365429335`*^9}, {3.67326106711299*^9, 3.6732611001112895`*^9}, {
   3.6732613344137173`*^9, 3.673261600230296*^9}, {3.673261681743447*^9, 
   3.6732617283861103`*^9}, {3.6732617585971317`*^9, 3.673261841211392*^9}, {
   3.6732618717054415`*^9, 3.673262655781841*^9}, {3.67326269047831*^9, 
   3.6732627884241037`*^9}, {3.673262902418502*^9, 3.673263155773835*^9}, {
   3.673263186764934*^9, 3.6732633182640824`*^9}, {3.673263986766926*^9, 
   3.6732640072109704`*^9}, {3.67326446235748*^9, 3.673264480943339*^9}, {
   3.673264672454488*^9, 3.6732646822004623`*^9}, {3.673265399087144*^9, 
   3.673265400022238*^9}, {3.673265436879923*^9, 3.673265664125645*^9}, {
   3.6732657398592176`*^9, 3.6732657470429363`*^9}, {3.673265836937925*^9, 
   3.6732658373159623`*^9}, {3.673265931978428*^9, 3.67326594910314*^9}, {
   3.6732661032795563`*^9, 3.673266172637491*^9}, {3.6732662032865562`*^9, 
   3.673266289367163*^9}, {3.6732663531815443`*^9, 3.673266499087133*^9}, {
   3.6732665759788218`*^9, 3.6732666012405562`*^9}, {3.6732666328955517`*^9, 
   3.673266640254134*^9}, {3.673266764956268*^9, 3.6732668541787024`*^9}, {
   3.673267007222351*^9, 3.673267050935607*^9}, {3.6732671385810747`*^9, 
   3.673267322965106*^9}, {3.673267412991106*^9, 3.6732676181531057`*^9}, {
   3.673267803694106*^9, 3.673267805128106*^9}, {3.673267855168106*^9, 
   3.673267861802106*^9}, {3.673267905593106*^9, 3.6732679126761055`*^9}, {
   3.673267945437106*^9, 3.673267979128106*^9}, {3.6732680366671057`*^9, 
   3.6732680815561056`*^9}, {3.673268116685938*^9, 3.6732681603173003`*^9}, {
   3.673270834588701*^9, 3.6732708442356653`*^9}, {3.673270907846026*^9, 
   3.6732709794781885`*^9}, {3.6732710106043005`*^9, 
   3.6732711013113704`*^9}, {3.67327114401164*^9, 3.673271144690708*^9}, {
   3.673271186092848*^9, 3.6732712035735955`*^9}, {3.6732712626014977`*^9, 
   3.673271299338171*^9}, {3.6732713380360403`*^9, 3.673271408527089*^9}, {
   3.67327144784202*^9, 3.673271573673602*^9}, {3.673271836831915*^9, 
   3.6732719355307837`*^9}, {3.673271967098941*^9, 3.67327204489672*^9}, {
   3.673272316397867*^9, 3.673272441910417*^9}, 3.6732815801171465`*^9, {
   3.673296421079094*^9, 3.6732967605150347`*^9}, {3.6732968106260448`*^9, 
   3.6732968254635286`*^9}, {3.6732968919501762`*^9, 
   3.6732969332603073`*^9}, {3.673365184927147*^9, 3.6733651870022383`*^9}, {
   3.673365251188592*^9, 3.6733652582107816`*^9}, {3.673365365431876*^9, 
   3.673365442452056*^9}, {3.6733654740923944`*^9, 3.673366307615714*^9}, {
   3.6733663850887136`*^9, 3.6733666517917137`*^9}, {3.6733666899657135`*^9, 
   3.673366789459714*^9}, {3.6733673815668*^9, 3.6733673899656396`*^9}, {
   3.6733674603866816`*^9, 3.6733674624858913`*^9}, {3.673367518023444*^9, 
   3.673367902197858*^9}, {3.673367960858723*^9, 3.6733680395835953`*^9}, {
   3.67336808423806*^9, 3.673368461384771*^9}, {3.6733690084714737`*^9, 
   3.6733690607997065`*^9}, {3.6733694054231653`*^9, 3.673369649035524*^9}, {
   3.6733697279184113`*^9, 3.6733698327198906`*^9}, {3.673372022824879*^9, 
   3.6733720868252788`*^9}, {3.673372199842579*^9, 3.673372210903685*^9}, {
   3.6733722532159157`*^9, 3.673372392641857*^9}, {3.673372435094102*^9, 
   3.6733724365012426`*^9}, {3.6733724784134336`*^9, 3.673372690987689*^9}, {
   3.673372724015991*^9, 3.673372909950583*^9}, {3.6733729530998974`*^9, 
   3.673373063174904*^9}, {3.6733731152091064`*^9, 3.673373115501136*^9}, {
   3.673373174555041*^9, 3.6733731876053457`*^9}, {3.673373660106591*^9, 
   3.6733737086784477`*^9}, {3.673373796185198*^9, 3.673373856345213*^9}, {
   3.673373891126691*^9, 3.673373967846362*^9}, {3.6733740044800253`*^9, 
   3.6733741453321085`*^9}, {3.6733741808966646`*^9, 
   3.6733743230788813`*^9}, {3.673374782130782*^9, 3.6733748368692555`*^9}, {
   3.6733749123268003`*^9, 3.6733750038559523`*^9}, 3.6733758373892975`*^9, 
   3.6733758715887175`*^9, {3.6733759117897367`*^9, 3.673375912750833*^9}, {
   3.673375943467904*^9, 3.673375951601718*^9}, {3.673375990217579*^9, 
   3.6733760076743245`*^9}, {3.6733760503795943`*^9, 3.673376353242878*^9}, {
   3.6733763979123445`*^9, 3.6733766857581263`*^9}, {3.6733767247350235`*^9, 
   3.673377022671814*^9}, {3.6733770527398205`*^9, 3.6733771325538015`*^9}, {
   3.673377178076353*^9, 3.673377305735118*^9}, 3.6733773469632397`*^9, 
   3.673377390115555*^9, {3.673377440559599*^9, 3.6733774490404463`*^9}, {
   3.673377510123554*^9, 3.673377546076149*^9}, {3.673377613627904*^9, 
   3.6733777320347433`*^9}, {3.6733777919247313`*^9, 3.673377798190358*^9}, {
   3.6733778405765963`*^9, 3.6733778827228107`*^9}, {3.673377935592097*^9, 
   3.6733780723707733`*^9}, {3.6733781150680428`*^9, 
   3.6733782207986145`*^9}, {3.6733782701215467`*^9, 3.673378283690903*^9}, {
   3.6733783209586296`*^9, 3.6733783627198057`*^9}, {3.6733784181853514`*^9, 
   3.67337844817235*^9}, {3.673378497418274*^9, 3.6733786962141514`*^9}, {
   3.6733787396204915`*^9, 3.6733792565281773`*^9}, {3.673379302747799*^9, 
   3.673379381659689*^9}, {3.6733794208256054`*^9, 3.67337945447797*^9}, {
   3.673379492437766*^9, 3.673379890198538*^9}, {3.6733799407465925`*^9, 
   3.673379947791297*^9}, {3.6733799937748947`*^9, 3.6733800559881153`*^9}, {
   3.6733800984743633`*^9, 3.673380197795295*^9}, {3.673380229744489*^9, 
   3.673380244875002*^9}, {3.673380290580572*^9, 3.6733802940509195`*^9}, {
   3.6733808544129496`*^9, 3.6733809623817453`*^9}, {3.673381038327339*^9, 
   3.6733813251680202`*^9}, {3.673381462263729*^9, 3.6733815164551477`*^9}, {
   3.6733815518286843`*^9, 3.67338165689719*^9}, {3.6733816969131913`*^9, 
   3.673381931945692*^9}, {3.673381972587756*^9, 3.6733820241869154`*^9}, {
   3.6733820879132876`*^9, 3.6733821754280376`*^9}, {3.6733822058190765`*^9, 
   3.673382324689963*^9}, {3.6733824039578886`*^9, 3.6733824412566185`*^9}, {
   3.673382615091*^9, 3.6733826415946503`*^9}, {3.6733828173372226`*^9, 
   3.6733828871572037`*^9}, {3.6733830426827545`*^9, 3.673383059382425*^9}, {
   3.6733831000844946`*^9, 3.6733831094924355`*^9}, {3.673383143229809*^9, 
   3.6733831480612917`*^9}, {3.673383293996884*^9, 3.6733834247149544`*^9}, {
   3.673383489931475*^9, 3.6733834923407164`*^9}, {3.673383539536435*^9, 
   3.673383566513133*^9}, {3.6733836170681877`*^9, 3.6733836404285235`*^9}, {
   3.673383895826061*^9, 3.673384079700446*^9}, {3.673384336591133*^9, 
   3.673384399889462*^9}, {3.673384498003272*^9, 3.6733844981952915`*^9}, {
   3.6733845519906707`*^9, 3.6733846262961006`*^9}, {3.673384701120582*^9, 
   3.6733850135518217`*^9}, {3.6733850945719233`*^9, 
   3.6733851254080067`*^9}, {3.6733852170871735`*^9, 
   3.6733853184013042`*^9}, {3.673385352951759*^9, 3.6733854527247353`*^9}, {
   3.6733855781332746`*^9, 3.673385598162277*^9}, {3.673385764019861*^9, 
   3.6733859389383516`*^9}, {3.673385980043462*^9, 3.6733862278352385`*^9}, {
   3.673386266183073*^9, 3.6733862906775217`*^9}, {3.673386446214074*^9, 
   3.673386537922244*^9}, {3.6733866155350046`*^9, 3.673386615832034*^9}, {
   3.67338704183463*^9, 3.673387074158862*^9}, {3.673387111161562*^9, 
   3.673387135129959*^9}, {3.6733898789693155`*^9, 3.6733899214605637`*^9}, {
   3.673390017045121*^9, 3.6733901737747927`*^9}, {3.6733902124806633`*^9, 
   3.673390303178732*^9}, {3.6733903498674*^9, 3.6733904122256355`*^9}, {
   3.6733905888522964`*^9, 3.6733906214465556`*^9}, {3.6733907002454348`*^9, 
   3.6733907212255325`*^9}, {3.6733908215575647`*^9, 3.673390902712679*^9}, {
   3.6733909362380314`*^9, 3.673391025714978*^9}, {3.673391121028509*^9, 
   3.6733911702014256`*^9}, {3.673391209484353*^9, 3.673391307940198*^9}, {
   3.673391404990902*^9, 3.6733915486492662`*^9}, {3.6733916006044617`*^9, 
   3.6733916231947203`*^9}, {3.6733916638707876`*^9, 
   3.6733917555099506`*^9}, {3.6733918002944283`*^9, 
   3.6733919174771457`*^9}, {3.6733919541688147`*^9, 3.673391996264024*^9}, {
   3.6733922076471596`*^9, 3.6733922086132565`*^9}, {3.673392242615656*^9, 
   3.6733923386752615`*^9}, {3.6733924423166246`*^9, 
   3.6733924637197647`*^9}, {3.673392516390031*^9, 3.673392542612653*^9}, {
   3.6733925941838093`*^9, 3.6733926961810083`*^9}, {3.6733928125786467`*^9, 
   3.6733928487622647`*^9}, {3.673392900192407*^9, 3.673392942230611*^9}, {
   3.67339307693908*^9, 3.6733930833527217`*^9}, {3.6733931160919952`*^9, 
   3.673393121220508*^9}, {3.673393176399025*^9, 3.6733932022776127`*^9}, {
   3.673393242063591*^9, 3.673393254499834*^9}, {3.673393311908575*^9, 
   3.6733933816235456`*^9}, {3.6733935432057023`*^9, 3.673393560838465*^9}, {
   3.673393592657647*^9, 3.673393604499831*^9}, {3.6733937273701167`*^9, 
   3.67339372840422*^9}, {3.6733938618305616`*^9, 3.673393968679245*^9}, {
   3.673394008295206*^9, 3.673394110120388*^9}, {3.67339414174255*^9, 
   3.6733941967520504`*^9}, {3.6733942409284678`*^9, 3.673394307421116*^9}, {
   3.673394411229496*^9, 3.673394417184091*^9}, {3.6733945012364955`*^9, 
   3.673394534423814*^9}, {3.6733945813385053`*^9, 3.6733945816135325`*^9}, {
   3.673394621641535*^9, 3.6733946642917995`*^9}, {3.6733947622085905`*^9, 
   3.673394762689638*^9}, {3.673394933112679*^9, 3.6733949577171392`*^9}, {
   3.673395108489215*^9, 3.6733951100793743`*^9}, {3.673395156657031*^9, 
   3.6733951568890543`*^9}, {3.6733952614495096`*^9, 
   3.6733952827356377`*^9}, {3.6733953485282164`*^9, 3.673395382447608*^9}, 
   3.6733955096713295`*^9, {3.673395637334094*^9, 3.6733956542207823`*^9}, {
   3.673395743613721*^9, 3.6733957464420037`*^9}, {3.673395960634421*^9, 
   3.673395982494607*^9}, {3.6733960509264493`*^9, 3.673396080394396*^9}, 
   3.6733961652778835`*^9, {3.6733969087012177`*^9, 3.6733969163379817`*^9}, {
   3.673396995707918*^9, 3.673397051682515*^9}, {3.6733971094002857`*^9, 
   3.673397125302876*^9}, {3.6733974236877117`*^9, 3.6733974270560484`*^9}, {
   3.6733978320222683`*^9, 3.6733978850519223`*^9}, {3.6733979164109583`*^9, 
   3.673398110069826*^9}, {3.6733981701927676`*^9, 3.673398191026431*^9}, {
   3.673398221044419*^9, 3.673398339865201*^9}, {3.6733983974594407`*^9, 
   3.6733984077684097`*^9}, {3.6733984450416822`*^9, 3.673398481207065*^9}, {
   3.67339882181731*^9, 3.67339883937631*^9}, 3.67339890126431*^9, {
   3.6733990230113096`*^9, 3.67339910223231*^9}, {3.6733993149073095`*^9, 
   3.6733995135427933`*^9}, {3.67339955400884*^9, 3.673399587474186*^9}, {
   3.673399653193757*^9, 3.67339967822226*^9}, {3.673399716815119*^9, 
   3.6733997703484716`*^9}, {3.673400449212351*^9, 3.673400466479078*^9}, {
   3.6734004982762575`*^9, 3.6734005201594453`*^9}, {3.6734006872471523`*^9, 
   3.6734006873911667`*^9}, {3.673618856222335*^9, 3.673618872557335*^9}, {
   3.673619029408335*^9, 3.673619208140335*^9}, {3.673619239503335*^9, 
   3.673619245638335*^9}, {3.6736193172433352`*^9, 3.673619320251335*^9}, {
   3.6736193989603353`*^9, 3.673619583024937*^9}, {3.673619692221856*^9, 
   3.673619702375871*^9}, {3.673619783441977*^9, 3.6736198399576283`*^9}, {
   3.6736198706927013`*^9, 3.6736200857382035`*^9}, {3.673620131898819*^9, 
   3.67362031862249*^9}, {3.673620445559182*^9, 3.673620662830907*^9}, {
   3.6736207002886524`*^9, 3.673620746810304*^9}, {3.673621075014121*^9, 
   3.6736210965562754`*^9}, {3.6736211319138107`*^9, 
   3.6736212360772257`*^9}, {3.673621305636181*^9, 3.673621350405658*^9}, {
   3.6736216893395476`*^9, 3.6736216964392576`*^9}, {3.6736217373843517`*^9, 
   3.6736217923090925`*^9}, {3.673621823300092*^9, 3.6736220405070925`*^9}, {
   3.6736220730509195`*^9, 3.6736221064332576`*^9}, {3.673622172043818*^9, 
   3.6736221865322666`*^9}, {3.6736222191055236`*^9, 
   3.6736222483164444`*^9}, {3.673622326187231*^9, 3.6736224018807993`*^9}, 
   3.6736224352451353`*^9, {3.673625255197112*^9, 3.673625262591851*^9}, {
   3.6736253265502462`*^9, 3.673625387845375*^9}, {3.673625448685459*^9, 
   3.6736254898335733`*^9}, {3.6736255399915886`*^9, 
   3.6736256845340414`*^9}, {3.6736330386254053`*^9, 
   3.6736330608686295`*^9}, {3.67363328689723*^9, 3.6736333165251923`*^9}, {
   3.6736333875732965`*^9, 3.673633602181755*^9}, {3.6736336365561924`*^9, 
   3.6736336471022468`*^9}, {3.673633696209157*^9, 3.6736336989514313`*^9}, {
   3.6736337469022255`*^9, 3.673633759735509*^9}, {3.6736337931628513`*^9, 
   3.673633830479583*^9}, {3.6736338871222467`*^9, 3.6736338908946238`*^9}, {
   3.673633930303564*^9, 3.67363395126766*^9}, {3.6736339954270754`*^9, 
   3.6736341301685486`*^9}, {3.6736341883713684`*^9, 3.67363428360089*^9}, {
   3.673634325564086*^9, 3.6736344154350724`*^9}, {3.673634488377366*^9, 
   3.6736346694584723`*^9}, {3.673634848948419*^9, 3.6736350741719394`*^9}, {
   3.673635154505972*^9, 3.6736353284013596`*^9}, {3.673635375122031*^9, 
   3.673635706872203*^9}, {3.673635760668582*^9, 3.673635802484763*^9}, {
   3.6736358418176966`*^9, 3.673635960479561*^9}, {3.6736360181933317`*^9, 
   3.673636019424455*^9}, {3.6736360780473166`*^9, 3.6736361118796997`*^9}, {
   3.673636155816093*^9, 3.6736362444589567`*^9}, {3.6736362778993*^9, 
   3.6736364686403723`*^9}, {3.6736365066391716`*^9, 3.673636622810788*^9}, {
   3.6736366876842747`*^9, 3.6736368484113455`*^9}, {3.673636908032307*^9, 
   3.6736369121527195`*^9}, {3.6736370395964622`*^9, 3.673637170854325*^9}, {
   3.673637214303979*^9, 3.673637652739458*^9}, {3.673637757952458*^9, 
   3.673637800193458*^9}, {3.673637836391458*^9, 3.673637957122458*^9}, {
   3.673637999454458*^9, 3.673638002352458*^9}, {3.6736380802454576`*^9, 
   3.673638109732458*^9}, {3.6736381449474583`*^9, 3.673638186438458*^9}, {
   3.673638254288458*^9, 3.6736383341299257`*^9}, {3.6736383679953127`*^9, 
   3.6736383868902016`*^9}, {3.675244438150206*^9, 3.675244831513524*^9}, {
   3.675244888372128*^9, 3.6752449153347883`*^9}, {3.675244969298554*^9, 
   3.675245078846499*^9}, {3.675245122952808*^9, 3.675245140108609*^9}, {
   3.675245339241459*^9, 3.6752453486756077`*^9}, {3.6752454421716557`*^9, 
   3.6752454933890543`*^9}, {3.675245526797374*^9, 3.675245621346243*^9}, {
   3.675245741429254*^9, 3.675245858867359*^9}, {3.675245926160668*^9, 
   3.675245943273789*^9}, {3.675245989277526*^9, 3.6752460075740137`*^9}, {
   3.675246039341504*^9, 3.675246158022691*^9}, {3.675246188116272*^9, 
   3.675246412330311*^9}, {3.675246453780591*^9, 3.6752465157389307`*^9}, {
   3.675246672257606*^9, 3.675247042305573*^9}, {3.6752470908649883`*^9, 
   3.675247368278699*^9}, {3.675247401793127*^9, 3.675247576907119*^9}, {
   3.6752476070099983`*^9, 3.675247626055538*^9}, {3.675247658287451*^9, 
   3.675247722614029*^9}, {3.6752477725573807`*^9, 3.675248097028181*^9}, {
   3.675248127124848*^9, 3.675248331316524*^9}, {3.675248374139974*^9, 
   3.675248425131283*^9}, {3.675249065978001*^9, 3.6752490806432343`*^9}, {
   3.675249147989594*^9, 3.675249397852861*^9}, {3.6752497473538723`*^9, 
   3.675249907720263*^9}, {3.6752501220799093`*^9, 3.675250123095909*^9}, {
   3.675250174362097*^9, 3.6752501961819563`*^9}, {3.6752502398564*^9, 
   3.675250325298141*^9}, {3.675250363011376*^9, 3.675250382374737*^9}, {
   3.6752504818372793`*^9, 3.675250482939723*^9}, {3.6752505982957907`*^9, 
   3.6752506611265297`*^9}, {3.675250695701442*^9, 3.6752506958169413`*^9}, {
   3.6752507433341208`*^9, 3.675250836269508*^9}, {3.675250885480452*^9, 
   3.675250890585576*^9}, {3.675251000741005*^9, 3.675251010631413*^9}, {
   3.675251115463085*^9, 3.6752511465031157`*^9}, {3.675251212182342*^9, 
   3.675251221254718*^9}, {3.675251407830943*^9, 3.67525145211827*^9}, {
   3.675251575207554*^9, 3.6752520917950563`*^9}, {3.675252128020731*^9, 
   3.675252253588676*^9}, {3.6752524648618937`*^9, 3.675252530117696*^9}, {
   3.675253903563837*^9, 3.675254072406468*^9}, {3.675254134950732*^9, 
   3.675254213815728*^9}, {3.6752596095197287`*^9, 3.675259771182515*^9}, {
   3.6752598060552588`*^9, 3.675259860009685*^9}, {3.675259909658828*^9, 
   3.675260090368607*^9}, {3.6752601718422947`*^9, 3.675260214265411*^9}, {
   3.675260246351315*^9, 3.675260274891644*^9}, {3.6752603313336887`*^9, 
   3.675260348149105*^9}, {3.6752604056942797`*^9, 3.6752604834161777`*^9}, {
   3.675260534338081*^9, 3.675260535511825*^9}, {3.675260606231257*^9, 
   3.675260676514936*^9}, {3.675260750170764*^9, 3.675261222237544*^9}, {
   3.675410629777731*^9, 3.675410650490844*^9}, {3.675410796434485*^9, 
   3.675410841473255*^9}, {3.675410904333376*^9, 3.675411060421277*^9}, {
   3.67541128563306*^9, 3.675411447289175*^9}, {3.675411565087132*^9, 
   3.675411568720373*^9}, {3.675411603089939*^9, 3.6754116621736298`*^9}, {
   3.675411695073954*^9, 3.6754117864847517`*^9}, {3.675411824004808*^9, 
   3.675411929712555*^9}, 3.6754119719817543`*^9, {3.6754120034571877`*^9, 
   3.675412019107799*^9}, {3.6754120782666473`*^9, 3.675412120348219*^9}, {
   3.675412247441862*^9, 3.675412324935964*^9}, {3.675412389533802*^9, 
   3.675412434161077*^9}, {3.675412484803461*^9, 3.675412659434806*^9}, {
   3.6754127095369883`*^9, 3.675412977614913*^9}, {3.675413035898505*^9, 
   3.675413162928534*^9}, {3.675413197168035*^9, 3.6754131976475973`*^9}, {
   3.675413234979043*^9, 3.67541334161299*^9}, {3.675413376010051*^9, 
   3.6754134470273113`*^9}, {3.6754135106635027`*^9, 
   3.6754135619194927`*^9}, {3.675413592351953*^9, 3.6754140813377237`*^9}, {
   3.6754143868751717`*^9, 3.675414418091917*^9}, {3.675414454195531*^9, 
   3.6754145178500423`*^9}, {3.675414641765432*^9, 3.675414718824795*^9}, {
   3.675414905799685*^9, 3.675414956683531*^9}, {3.675414989357765*^9, 
   3.6754150215712347`*^9}, {3.675415062304943*^9, 3.675415081454218*^9}, {
   3.675415117156877*^9, 3.6754151408298473`*^9}, {3.675415192760106*^9, 
   3.675415237843542*^9}, {3.675415715624466*^9, 3.675415750765835*^9}, {
   3.675415852849319*^9, 3.675415931127297*^9}, {3.675416029202737*^9, 
   3.675416065021778*^9}, {3.6754161999270477`*^9, 3.675416213415513*^9}, {
   3.675416293178706*^9, 3.67541630066656*^9}, {3.6754163381177692`*^9, 
   3.6754164033111362`*^9}, {3.675416453169023*^9, 3.6754165300477057`*^9}, {
   3.675416572085404*^9, 3.675416573404228*^9}, {3.675416663045891*^9, 
   3.675416754106848*^9}, {3.675416821338099*^9, 3.6754168630504313`*^9}, {
   3.6754169911469383`*^9, 3.67541700575767*^9}, {3.675417036850391*^9, 
   3.675417105941066*^9}, {3.675417263699345*^9, 3.675417281856667*^9}, {
   3.675417313357527*^9, 3.675417402289606*^9}, {3.6754174503271103`*^9, 
   3.6754174547818127`*^9}, {3.6754177018931847`*^9, 3.675417704877521*^9}, {
   3.675417754470509*^9, 3.675417796146349*^9}, {3.67541809108281*^9, 
   3.675418680932444*^9}, {3.675418726883045*^9, 3.67541875195685*^9}, 
   3.675418807344616*^9, {3.675418844461134*^9, 3.675418899087229*^9}, {
   3.675418936551095*^9, 3.6754190077290297`*^9}, {3.675419106828945*^9, 
   3.675419147535389*^9}, {3.67541998851307*^9, 3.675420001071508*^9}, {
   3.675420065967125*^9, 3.675420216280141*^9}, {3.675420252945397*^9, 
   3.675420327858906*^9}, {3.675420361842317*^9, 3.675420613940529*^9}, {
   3.675420663351821*^9, 3.675420696558235*^9}, {3.675420797354741*^9, 
   3.675420873808071*^9}, {3.675420906365642*^9, 3.675420958106764*^9}, {
   3.675430249536821*^9, 3.675430300392569*^9}, {3.675430339727108*^9, 
   3.6754303512930107`*^9}, {3.675430422604969*^9, 3.6754304479701653`*^9}, {
   3.675430479914065*^9, 3.675430834352249*^9}, {3.675430897334199*^9, 
   3.67543096672408*^9}, {3.675431004762011*^9, 3.675431273426046*^9}, {
   3.675431357629735*^9, 3.675431362581668*^9}, {3.675431424594508*^9, 
   3.675431524205852*^9}, {3.675431560596911*^9, 3.675431563730165*^9}, {
   3.675431671285027*^9, 3.6754316872203703`*^9}, {3.675431728229908*^9, 
   3.675431751449307*^9}, {3.6754319180186977`*^9, 3.675432021832962*^9}, {
   3.675432060494011*^9, 3.6754321016890793`*^9}, {3.6754321324096518`*^9, 
   3.675432195669508*^9}, {3.675432265877698*^9, 3.675432301487043*^9}, {
   3.675432336636093*^9, 3.675432365644567*^9}, {3.6754325489370728`*^9, 
   3.675432600830348*^9}, {3.675432742552829*^9, 3.675433246388596*^9}, {
   3.675433328326544*^9, 3.675433365865223*^9}, {3.6754335403581448`*^9, 
   3.675433660117066*^9}, {3.6754337544842167`*^9, 3.675433780188843*^9}, {
   3.6754338115915403`*^9, 3.6754338202571793`*^9}, {3.675434335117787*^9, 
   3.6754343860086*^9}, {3.6754352762922363`*^9, 3.675435333243648*^9}, {
   3.675435403607613*^9, 3.675435416258992*^9}, {3.675435474535151*^9, 
   3.67543548430906*^9}, {3.675435559193122*^9, 3.675435567445528*^9}, {
   3.6754356177813663`*^9, 3.675435674425894*^9}, {3.675435768720456*^9, 
   3.6754358571009073`*^9}, {3.675437960229414*^9, 3.675437980899941*^9}, {
   3.6754380451989183`*^9, 3.6754380458357553`*^9}, {3.675438079048575*^9, 
   3.675438121055814*^9}, {3.675438153222793*^9, 3.675438154222887*^9}, {
   3.675438264103615*^9, 3.675438310590351*^9}, {3.675438368807629*^9, 
   3.675438369526804*^9}, {3.6754385247517548`*^9, 3.6754385253797894`*^9}, {
   3.675438570519253*^9, 3.675438581275263*^9}, {3.6754386309156*^9, 
   3.675438693854063*^9}, {3.6754387429124393`*^9, 3.675438748866493*^9}, {
   3.675438783183524*^9, 3.6754387841337423`*^9}, {3.67543885919343*^9, 
   3.675438883736388*^9}, {3.675438972441098*^9, 3.675438993776952*^9}, {
   3.6754390607234173`*^9, 3.6754393319538927`*^9}, {3.675439376213333*^9, 
   3.675439486188471*^9}, {3.675439521795417*^9, 3.675439528990223*^9}, {
   3.6754395770565577`*^9, 3.6754395896368723`*^9}, {3.6754396537856693`*^9, 
   3.675439741918496*^9}, 3.675439776831352*^9, {3.675443088857349*^9, 
   3.6754430897049313`*^9}, {3.675443138144191*^9, 3.6754431414686413`*^9}, {
   3.675443270695867*^9, 3.6754432923414993`*^9}, {3.675443344210951*^9, 
   3.675443349089335*^9}, {3.6754434860236397`*^9, 3.675443542721727*^9}, {
   3.6754436774162817`*^9, 3.6754437717864103`*^9}, {3.67544381258844*^9, 
   3.675443921262205*^9}, {3.67544395212836*^9, 3.6754440427837276`*^9}, {
   3.6754441262088747`*^9, 3.675444331157112*^9}, {3.675444450699893*^9, 
   3.675444472949687*^9}, {3.675444568935816*^9, 3.6754445737768183`*^9}, {
   3.675444626542194*^9, 3.6754446415671787`*^9}, {3.67544475816188*^9, 
   3.6754448027810917`*^9}, {3.67544483339727*^9, 3.675444897397297*^9}, {
   3.6754450637462587`*^9, 3.67544507600836*^9}, {3.6754452504313507`*^9, 
   3.675445376824133*^9}, {3.675445418961372*^9, 3.675445537509583*^9}, {
   3.675445607502555*^9, 3.675445721273306*^9}, {3.675445756747424*^9, 
   3.67544578273472*^9}, {3.675445921883501*^9, 3.6754461261889267`*^9}, {
   3.6754461931532793`*^9, 3.675446196689967*^9}, {3.6754468291379223`*^9, 
   3.675446920795883*^9}, {3.675446952349907*^9, 3.6754469533321238`*^9}, {
   3.675446996071308*^9, 3.675447075121216*^9}, {3.675447198762982*^9, 
   3.675447205062961*^9}, {3.675447319627831*^9, 3.675447368749894*^9}, {
   3.6754474764522057`*^9, 3.675447509370234*^9}, {3.67544763134439*^9, 
   3.675447672267312*^9}, {3.675447749422641*^9, 3.675447874775138*^9}, {
   3.67544792961357*^9, 3.6754479587731333`*^9}, {3.67544799980509*^9, 
   3.675448000074424*^9}, {3.675448079189246*^9, 3.675448097597352*^9}, {
   3.675448142225041*^9, 3.6754481581656933`*^9}, {3.675448210649276*^9, 
   3.675448291569141*^9}, {3.675449195261243*^9, 3.675449203867935*^9}, {
   3.675449322224106*^9, 3.6754494211042757`*^9}, {3.675449457895735*^9, 
   3.6754495908111963`*^9}, {3.675449639008418*^9, 3.6754496871179543`*^9}, {
   3.6754497380182543`*^9, 3.675449752209342*^9}, {3.675449885294705*^9, 
   3.675449952395293*^9}, {3.675449989926025*^9, 3.675450021252919*^9}, {
   3.675450079769842*^9, 3.67545009388197*^9}, {3.6754501704657907`*^9, 
   3.67545017967935*^9}, {3.675450258750597*^9, 3.675450276665621*^9}, {
   3.675450359958252*^9, 3.6754504260670147`*^9}, {3.675450487532299*^9, 
   3.6754504948368597`*^9}, {3.675450547864334*^9, 3.6754505994753847`*^9}, {
   3.675450694233704*^9, 3.675450807719884*^9}, {3.675450856252667*^9, 
   3.675450878231174*^9}, {3.675450953078933*^9, 3.675451213473591*^9}, {
   3.675451287150228*^9, 3.675451287232169*^9}, {3.6754513688248262`*^9, 
   3.675451438552499*^9}, {3.675451478061294*^9, 3.675451611302575*^9}, {
   3.675451681127365*^9, 3.675451717810594*^9}, {3.67545182095879*^9, 
   3.6754518763775473`*^9}, {3.675451920356406*^9, 3.675451939039914*^9}, {
   3.6754519970050077`*^9, 3.67545203936887*^9}, {3.6754521222304077`*^9, 
   3.675452148280484*^9}, {3.675452201995636*^9, 3.6754522189151783`*^9}, {
   3.6754522887051*^9, 3.675452370538823*^9}, {3.675452416439629*^9, 
   3.675452569244927*^9}, {3.6754526204433517`*^9, 3.675452641037156*^9}, {
   3.675452698436365*^9, 3.675452747786304*^9}, 3.6754527863588247`*^9, {
   3.675452824448826*^9, 3.6754528564612293`*^9}, {3.6754528877216167`*^9, 
   3.675452898373809*^9}, {3.675452958474905*^9, 3.675453077273254*^9}, {
   3.675453139989831*^9, 3.67545320524887*^9}, {3.67545323921517*^9, 
   3.675453315572839*^9}, {3.675453425654118*^9, 3.675453531655411*^9}, {
   3.675453599981579*^9, 3.675453633766391*^9}, {3.675460935286343*^9, 
   3.675460968934476*^9}, {3.675461169003859*^9, 3.675461255683647*^9}, {
   3.675461436845813*^9, 3.67546156012925*^9}, {3.675461636855158*^9, 
   3.675461642428411*^9}, 3.675461710694242*^9, {3.675461744801477*^9, 
   3.675461787859036*^9}, {3.6754618325291557`*^9, 3.675461841586128*^9}, 
   3.675461875978909*^9, {3.675461936367593*^9, 3.675461945008438*^9}, {
   3.675462010875475*^9, 3.675462067796574*^9}, {3.6754621136016397`*^9, 
   3.6754621147272*^9}, {3.675462353030808*^9, 3.675462364199094*^9}, {
   3.675462485160784*^9, 3.675462542014331*^9}, {3.6754625873104963`*^9, 
   3.6754625897868633`*^9}, {3.675462624801791*^9, 3.675462678920578*^9}, {
   3.675468724003039*^9, 3.675468854932776*^9}, {3.67546889598945*^9, 
   3.675468907023582*^9}, {3.675468946234303*^9, 3.6754690337953243`*^9}, {
   3.6754691087699947`*^9, 3.675469110819615*^9}, 3.675469182604617*^9, {
   3.675469252197422*^9, 3.675469475252437*^9}, {3.6754695384821672`*^9, 
   3.675469717341831*^9}, {3.675469778238316*^9, 3.675469779516102*^9}, {
   3.675469848618531*^9, 3.6754698887679253`*^9}, {3.675470025708029*^9, 
   3.675470077176951*^9}, {3.6754701732574377`*^9, 3.675470220729244*^9}, {
   3.675470269042734*^9, 3.675470331234256*^9}, {3.675470376533291*^9, 
   3.675470398352714*^9}, 3.675470457910058*^9, {3.675470492177782*^9, 
   3.67547054186377*^9}, {3.675470583643386*^9, 3.675470726193349*^9}, {
   3.67547078104917*^9, 3.6754708100528593`*^9}, {3.675470867648177*^9, 
   3.675470899218995*^9}, {3.6754709318302393`*^9, 3.675470959993198*^9}, {
   3.675471055774248*^9, 3.675471127408043*^9}, {3.6754712077965*^9, 
   3.6754712644531*^9}, {3.6754712962164288`*^9, 3.675471512709867*^9}, {
   3.6754716293192053`*^9, 3.675471727902543*^9}, {3.675471831645687*^9, 
   3.675471955198955*^9}, {3.675471995087253*^9, 3.675472390541294*^9}, {
   3.6754730831575613`*^9, 3.6754731955695257`*^9}, {3.675473234889758*^9, 
   3.675473311731781*^9}, 3.675473470412736*^9, {3.675473543552608*^9, 
   3.675473771824501*^9}, {3.6754738045484343`*^9, 3.675473848263754*^9}, {
   3.67547402360112*^9, 3.675474191445323*^9}, {3.67547423722733*^9, 
   3.675474471714281*^9}, {3.675474514304206*^9, 3.675474553225566*^9}, {
   3.675474632616487*^9, 3.675474763423517*^9}, {3.675474878421344*^9, 
   3.675474904839572*^9}, {3.675475018672085*^9, 3.6754751679094343`*^9}, {
   3.6754752734397917`*^9, 3.67547527453224*^9}, {3.675475441071619*^9, 
   3.675475496392123*^9}, {3.6754755405327253`*^9, 3.675475545799461*^9}, {
   3.675475584902217*^9, 3.6754756136277637`*^9}, {3.675475651330943*^9, 
   3.6754756878744373`*^9}, {3.6754757373688517`*^9, 
   3.6754757858055077`*^9}, {3.675475882544243*^9, 3.675475911181045*^9}, {
   3.675475945034519*^9, 3.6754759487672863`*^9}, {3.675475988366364*^9, 
   3.675476023189907*^9}, 3.67547607063196*^9, {3.675476158316576*^9, 
   3.6754761978646812`*^9}, {3.6754762766428413`*^9, 
   3.6754762769158907`*^9}, {3.6754763224323*^9, 3.675476382820019*^9}, {
   3.675476443603053*^9, 3.6754764774273243`*^9}, {3.6754765566302557`*^9, 
   3.6754765578441877`*^9}, {3.675476608209716*^9, 3.675476855913632*^9}, {
   3.675476894648687*^9, 3.675477055233832*^9}, {3.6754771468878613`*^9, 
   3.675477244521112*^9}, {3.6754772857038937`*^9, 3.6754774168702297`*^9}, {
   3.67547746799559*^9, 3.67547748615796*^9}, {3.675477580956756*^9, 
   3.675477789126465*^9}, {3.675477997288488*^9, 3.67547799963323*^9}, {
   3.6754781359809713`*^9, 3.675478141202076*^9}, {3.675478185310272*^9, 
   3.675478568466339*^9}, {3.675478601744866*^9, 3.67547872271058*^9}, {
   3.675515646775436*^9, 3.6755156473501863`*^9}, {3.6755156781977673`*^9, 
   3.67551569112018*^9}, {3.675515721239662*^9, 3.675515863429957*^9}, {
   3.6755236331136103`*^9, 3.675523641587516*^9}, {3.675524243128436*^9, 
   3.675524641333198*^9}, {3.675524737364587*^9, 3.675524775103077*^9}, 
   3.675525210251425*^9, {3.675525246843684*^9, 3.675525353125251*^9}, {
   3.6755254448753443`*^9, 3.675525456716761*^9}, {3.675525513210141*^9, 
   3.675525521864502*^9}, {3.675525568296582*^9, 3.675525582397483*^9}, {
   3.675525841428319*^9, 3.675525902339033*^9}, {3.6755259347693377`*^9, 
   3.675525939606043*^9}, {3.675526602981369*^9, 3.675526633460535*^9}, {
   3.675526833394018*^9, 3.675526853698254*^9}, {3.67552696803238*^9, 
   3.675527024662217*^9}, {3.675527065165052*^9, 3.675527093810163*^9}, {
   3.6755271332187023`*^9, 3.675527289899144*^9}, {3.675527344995652*^9, 
   3.675527405371674*^9}, {3.675527464234606*^9, 3.67552756320811*^9}, {
   3.675527598442811*^9, 3.675528211034862*^9}, {3.6755287787246532`*^9, 
   3.675528796017335*^9}, {3.675529262488821*^9, 3.675529266474834*^9}, {
   3.675529320416568*^9, 3.6755293818920603`*^9}, {3.6755294524753447`*^9, 
   3.67552946424727*^9}, {3.675529505531167*^9, 3.675529505991706*^9}, {
   3.675529720280505*^9, 3.6755297315377398`*^9}, {3.675529809442232*^9, 
   3.6755298153065968`*^9}, {3.675530085683556*^9, 3.675530100346869*^9}, {
   3.6755301627186823`*^9, 3.675530164263657*^9}, {3.675530243508149*^9, 
   3.6755302454557447`*^9}, {3.6755303594716988`*^9, 3.675530417839011*^9}, {
   3.675530488569127*^9, 3.675530566366817*^9}, {3.6755306348616877`*^9, 
   3.675530640634026*^9}, {3.6755307059330397`*^9, 3.675530709868005*^9}, {
   3.675531043508629*^9, 3.675531052859253*^9}, {3.6755311081461487`*^9, 
   3.675531164444231*^9}, {3.675531198732747*^9, 3.6755312011903133`*^9}, {
   3.67553157231807*^9, 3.675531611683332*^9}, {3.675531662962674*^9, 
   3.675531663619034*^9}, {3.675531854672127*^9, 3.675531859215674*^9}, {
   3.675531924994244*^9, 3.675531926125869*^9}, {3.675532855831786*^9, 
   3.675532857768427*^9}, {3.675533003663319*^9, 3.675533038004175*^9}, {
   3.675533158323151*^9, 3.675533160045463*^9}, {3.67553337705189*^9, 
   3.6755333798130007`*^9}, {3.675533624835704*^9, 3.675533635316807*^9}, {
   3.675533746939361*^9, 3.6755337572221823`*^9}, {3.675533937370324*^9, 
   3.675533941377433*^9}, 3.675534410265267*^9, {3.675534445354903*^9, 
   3.675534476943276*^9}, {3.67553494366914*^9, 3.675535035319579*^9}, {
   3.675535066353456*^9, 3.675535122157905*^9}, {3.675535173466076*^9, 
   3.6755351905204353`*^9}, {3.675535486891602*^9, 3.6755355086838818`*^9}, {
   3.675535654071589*^9, 3.675535704856206*^9}, {3.6755358268759937`*^9, 
   3.6755358995251827`*^9}, {3.6755360294916277`*^9, 3.675536046624675*^9}, {
   3.6755360959547987`*^9, 3.6755361324004393`*^9}, {3.675536165437889*^9, 
   3.6755362156373053`*^9}, {3.675536268940473*^9, 3.6755363089743547`*^9}, {
   3.675536384049518*^9, 3.675536440475258*^9}, {3.675536654450719*^9, 
   3.6755366710238647`*^9}, {3.675536862465857*^9, 3.675536863160371*^9}, {
   3.675536894226005*^9, 3.67553697614118*^9}, {3.675537036327882*^9, 
   3.675537062230159*^9}, {3.6755370978679934`*^9, 3.675537171439913*^9}, {
   3.6755372780509872`*^9, 3.675537282284957*^9}, {3.675537886401349*^9, 
   3.6755379169608603`*^9}, {3.6755380365070763`*^9, 3.675538077505374*^9}, {
   3.675538707208138*^9, 3.675538721460121*^9}, {3.675538880318322*^9, 
   3.675538883972857*^9}, 3.6755392447346478`*^9, {3.675539707302495*^9, 
   3.675539721945369*^9}, {3.675540010643627*^9, 3.6755400143963757`*^9}, {
   3.67554076296842*^9, 3.6755408053326902`*^9}, {3.6755409190397243`*^9, 
   3.675540975180099*^9}, {3.67554101288155*^9, 3.675541012990733*^9}, {
   3.675541289625218*^9, 3.6755413334653788`*^9}, {3.675541388598504*^9, 
   3.675541441340816*^9}, {3.6755415957996063`*^9, 3.675541660401321*^9}, {
   3.675542353627679*^9, 3.6755423713424177`*^9}, {3.675546240120297*^9, 
   3.6755462948603897`*^9}, {3.675546329574232*^9, 3.675546398615883*^9}, {
   3.67554649012459*^9, 3.67554664073903*^9}, {3.67554667937362*^9, 
   3.675546812694891*^9}, {3.675546977789751*^9, 3.6755470050140543`*^9}, {
   3.6755470628546333`*^9, 3.6755471096775303`*^9}, {3.675547199014976*^9, 
   3.675547255093239*^9}, {3.675547291462462*^9, 3.67554733920851*^9}, {
   3.675547376425096*^9, 3.675547488254766*^9}, {3.6755475578413897`*^9, 
   3.6755475857773323`*^9}, {3.675547637130018*^9, 3.675547667205759*^9}, {
   3.6755478185003757`*^9, 3.675548040650875*^9}, {3.675548073948921*^9, 
   3.675548125746564*^9}, {3.675548207625087*^9, 3.675548227572721*^9}, {
   3.6755482701490183`*^9, 3.675548327095882*^9}, {3.675548360664866*^9, 
   3.67554840620124*^9}, {3.67554843926543*^9, 3.675548555436364*^9}, {
   3.675548590297379*^9, 3.675548655479895*^9}, {3.675548698956566*^9, 
   3.675548706482503*^9}, {3.6755488025116653`*^9, 3.6755488322064247`*^9}, {
   3.675549097938702*^9, 3.675549098281448*^9}, {3.675549154288673*^9, 
   3.6755491555818253`*^9}, {3.675549285834111*^9, 3.675549366787516*^9}, {
   3.675549422017065*^9, 3.675549431927485*^9}, {3.675554999821135*^9, 
   3.675555043831353*^9}, {3.6755552033270493`*^9, 3.6755554153169127`*^9}, {
   3.675555575776709*^9, 3.675555599741253*^9}, {3.675555636438335*^9, 
   3.675555662092383*^9}, {3.6755562413641233`*^9, 3.675556242236403*^9}, {
   3.675556302714918*^9, 3.675556320897073*^9}, {3.675556436663743*^9, 
   3.675556454185371*^9}, {3.675556786721035*^9, 3.675556789513035*^9}, {
   3.675557517253992*^9, 3.6755575415563374`*^9}, {3.67555768550627*^9, 
   3.675557758034709*^9}, {3.675557806739729*^9, 3.675557818299629*^9}, {
   3.6755590581514473`*^9, 3.675559083054002*^9}, {3.675559175792162*^9, 
   3.675559177940997*^9}, 3.675559285367196*^9, {3.675559403548036*^9, 
   3.675559479588855*^9}, {3.675559623988575*^9, 3.675559626737068*^9}, {
   3.675559657949349*^9, 3.6755596669302597`*^9}, {3.675559941051385*^9, 
   3.67555995447486*^9}, {3.67556004551269*^9, 3.675560069494195*^9}, {
   3.675560188801128*^9, 3.675560193567873*^9}, {3.675560398295825*^9, 
   3.6755605121957197`*^9}, {3.675560564537381*^9, 3.675560566311624*^9}, {
   3.6755606535278378`*^9, 3.675560691659224*^9}, {3.675560757734062*^9, 
   3.6755608316283417`*^9}, {3.675560894895071*^9, 3.675560896743246*^9}, {
   3.675560928821748*^9, 3.675560974756529*^9}, 3.6755610476172237`*^9, {
   3.6755611661187277`*^9, 3.6755612023324738`*^9}, {3.675561339209077*^9, 
   3.675561392755932*^9}, {3.6755614807669067`*^9, 3.675561508041665*^9}, {
   3.675561553584732*^9, 3.675561560366474*^9}, {3.675561607008478*^9, 
   3.675561682653261*^9}, {3.675561714031405*^9, 3.6755618165664053`*^9}, {
   3.675561867468491*^9, 3.675561948573516*^9}, {3.675561993130678*^9, 
   3.675562065302268*^9}, {3.67556209606516*^9, 3.675562122605959*^9}, {
   3.6755621684308023`*^9, 3.675562260056961*^9}, 3.675562546537632*^9, {
   3.675563128944208*^9, 3.6755631425987053`*^9}, {3.675563412455749*^9, 
   3.67556345774102*^9}, {3.6755635016308107`*^9, 3.675563503436812*^9}, {
   3.675563627048814*^9, 3.675563638109215*^9}, {3.6755640169829607`*^9, 
   3.675564036659342*^9}, {3.675564071569001*^9, 3.675564098649335*^9}, {
   3.675564138627092*^9, 3.67556415537989*^9}, {3.675564191740334*^9, 
   3.675564208151231*^9}, {3.675564379894253*^9, 3.6755643926320753`*^9}, 
   3.675564559070332*^9, {3.675564611796661*^9, 3.675564660542074*^9}, {
   3.675565357276209*^9, 3.67556536292834*^9}, {3.6755918038199663`*^9, 
   3.6755918129988537`*^9}, {3.675591982213273*^9, 3.675591985535822*^9}, {
   3.675592978727244*^9, 3.67559321527267*^9}, {3.6755951818733997`*^9, 
   3.675595219653166*^9}, {3.675595265897153*^9, 3.675595331459701*^9}, {
   3.675595367167432*^9, 3.675595412677498*^9}, {3.67559555876567*^9, 
   3.675595561007325*^9}, {3.6755957765042877`*^9, 3.675595780356504*^9}, {
   3.6755959355639343`*^9, 3.67559593727547*^9}, {3.6755960596808243`*^9, 
   3.675596094368174*^9}, {3.675596496683961*^9, 3.675596512696484*^9}, {
   3.675596563639482*^9, 3.6755965938767138`*^9}, {3.675596651514224*^9, 
   3.675596751437807*^9}, {3.6755968078323517`*^9, 3.6755968623624*^9}, {
   3.6755969105648193`*^9, 3.6755969169390907`*^9}, {3.675597113666017*^9, 
   3.6755971194439707`*^9}, {3.675597163665163*^9, 3.67559724183482*^9}, {
   3.6755972834167137`*^9, 3.6755973291145697`*^9}, {3.67559736433118*^9, 
   3.675597402477*^9}, {3.6755974515994*^9, 3.675597742889666*^9}, {
   3.675597841152279*^9, 3.675597907919746*^9}, {3.675597963542582*^9, 
   3.675598198055347*^9}, {3.675598268003071*^9, 3.675598340616344*^9}, {
   3.675598387787593*^9, 3.675598583453474*^9}, {3.675598703319376*^9, 
   3.675598704294621*^9}, {3.675598755082426*^9, 3.6755987976448708`*^9}, {
   3.675598829125099*^9, 3.675598864967593*^9}, {3.6755989004881277`*^9, 
   3.67559898984698*^9}, {3.675599036497126*^9, 3.67559923988479*^9}, {
   3.675599270232428*^9, 3.675599646002308*^9}, {3.675599682481193*^9, 
   3.6755998400771627`*^9}, {3.675602454768169*^9, 3.6756030386665287`*^9}, {
   3.675603102733467*^9, 3.675603148268244*^9}, {3.6756032167562227`*^9, 
   3.675603354853266*^9}, {3.675603391139347*^9, 3.675603395832304*^9}, {
   3.675603449360067*^9, 3.675603450673807*^9}, {3.675603483768632*^9, 
   3.675603533401661*^9}, {3.675603606551675*^9, 3.675603674697687*^9}, {
   3.67560378565191*^9, 3.675603944495508*^9}, {3.675604098377365*^9, 
   3.675604165895617*^9}, {3.675604232606647*^9, 3.6756043019524803`*^9}, {
   3.675604437829369*^9, 3.675604556014605*^9}, {3.67560459046951*^9, 
   3.675604599550458*^9}, {3.675604657236412*^9, 3.675604662458404*^9}, {
   3.675604695521923*^9, 3.675604892880424*^9}, {3.675604931520646*^9, 
   3.675605001716814*^9}, {3.675605061240615*^9, 3.675605089344187*^9}, {
   3.675605172072948*^9, 3.6756053358534193`*^9}, {3.675605414555566*^9, 
   3.675605450886979*^9}, {3.6756054924608107`*^9, 3.6756055035776978`*^9}, {
   3.67560558932889*^9, 3.675605784806624*^9}, {3.6756058171724367`*^9, 
   3.675605831460309*^9}, {3.6756058716623487`*^9, 3.675605999774125*^9}, {
   3.675606736727542*^9, 3.67560689066825*^9}, {3.675606921482873*^9, 
   3.675606963539764*^9}, {3.675607012783725*^9, 3.675607109771121*^9}, {
   3.675607157346924*^9, 3.675607158900893*^9}, {3.6756096243228493`*^9, 
   3.675609624836824*^9}, {3.675609747023181*^9, 3.6756098412350063`*^9}, {
   3.67560989068976*^9, 3.675610082305747*^9}, {3.675610115358075*^9, 
   3.675610118913714*^9}, {3.675610155817363*^9, 3.6756102123072567`*^9}, {
   3.6756102978797207`*^9, 3.675610438220374*^9}, {3.675610474502246*^9, 
   3.675610549939971*^9}, {3.6756105835309277`*^9, 3.67561058707197*^9}, {
   3.6756106527014313`*^9, 3.6756106621598177`*^9}, {3.675610804870002*^9, 
   3.6756111265647984`*^9}, {3.675611207122143*^9, 3.675611421177103*^9}, {
   3.675611556199217*^9, 3.675611583906906*^9}, {3.675611615792486*^9, 
   3.6756116213046827`*^9}, {3.6756116659098883`*^9, 3.675611669624751*^9}, {
   3.675611790508655*^9, 3.675611883069583*^9}, {3.675612101326364*^9, 
   3.675612150155925*^9}, {3.675612265019588*^9, 3.675612286239449*^9}, {
   3.675612330009804*^9, 3.675612409824629*^9}, {3.675612454510701*^9, 
   3.6756125644909697`*^9}, {3.675612630083692*^9, 3.675612683377219*^9}, {
   3.675612746152554*^9, 3.6756127821314993`*^9}, {3.675612871855836*^9, 
   3.67561294241145*^9}, {3.675613307325091*^9, 3.6756133165084963`*^9}, {
   3.6756133478931313`*^9, 3.6756133877075253`*^9}, {3.6756143211889877`*^9, 
   3.675614403702235*^9}, {3.675614450613892*^9, 3.675614464952771*^9}, {
   3.675614497738881*^9, 3.675614549936792*^9}, {3.675614760764575*^9, 
   3.675614769285571*^9}, {3.6756148256256638`*^9, 3.6756148652242327`*^9}, {
   3.6756148984254723`*^9, 3.675614942050221*^9}, {3.6756149812400827`*^9, 
   3.675614990024558*^9}, {3.675615073498391*^9, 3.67561510207682*^9}, {
   3.675615192360031*^9, 3.6756151935369873`*^9}, {3.67561541771525*^9, 
   3.675615495636291*^9}, {3.675615525687708*^9, 3.675615723562653*^9}, {
   3.675616102159988*^9, 3.675616104117338*^9}, {3.675619410415278*^9, 
   3.675619416859302*^9}, {3.675620271799645*^9, 3.675620276637463*^9}, 
   3.675620561939188*^9, {3.675620607925946*^9, 3.675620612798235*^9}, {
   3.6756209664672327`*^9, 3.6756209699213123`*^9}, {3.675622280338579*^9, 
   3.675622308040797*^9}, {3.67562339210378*^9, 3.675623412949603*^9}, {
   3.675626836594376*^9, 3.6756269616342278`*^9}, {3.675627001413707*^9, 
   3.675627098167508*^9}, {3.675627145003817*^9, 3.675627156465494*^9}, {
   3.675627235053752*^9, 3.675627740781151*^9}, {3.675628244227162*^9, 
   3.675628268570168*^9}, {3.675633454819642*^9, 3.675633588358109*^9}, {
   3.67563362333675*^9, 3.6756336792882977`*^9}, {3.67563374477242*^9, 
   3.675633781135395*^9}, {3.675634445759472*^9, 3.675634465252247*^9}, {
   3.675634498685731*^9, 3.675634538592334*^9}, {3.675634570554469*^9, 
   3.675634618030499*^9}, {3.675634657182405*^9, 3.675634714023036*^9}, {
   3.675634783721237*^9, 3.6756348878265*^9}, {3.675634922278656*^9, 
   3.6756349999795647`*^9}, {3.6756350369076147`*^9, 
   3.6756352034321423`*^9}, {3.675635287522172*^9, 3.675635290830207*^9}, 
   3.6756353473478537`*^9, {3.6756353782461433`*^9, 3.675635407243985*^9}, {
   3.6756354691089573`*^9, 3.675635497862637*^9}, {3.675635554781773*^9, 
   3.675635690851315*^9}, {3.675635752102455*^9, 3.675635775538221*^9}, {
   3.67563582178458*^9, 3.67563582267208*^9}, {3.675635855101076*^9, 
   3.675635856980551*^9}, {3.675636840798287*^9, 3.675636986012691*^9}, {
   3.675637094858675*^9, 3.675637135045692*^9}, {3.675637204435128*^9, 
   3.6756372072184134`*^9}, {3.6756372475838633`*^9, 3.675637315185049*^9}, {
   3.6756373834167547`*^9, 3.675637507849236*^9}, {3.675637608038772*^9, 
   3.675637635099135*^9}, {3.675637688817399*^9, 3.6756377400135803`*^9}, {
   3.675637887545878*^9, 3.67563816807976*^9}, {3.675638203136294*^9, 
   3.675638291895465*^9}, {3.6756383556068087`*^9, 3.675638370763414*^9}, {
   3.675638440011858*^9, 3.675638462669993*^9}, {3.675638548457999*^9, 
   3.675638551547544*^9}, {3.675638749193198*^9, 3.675638808574988*^9}, 
   3.675638843050865*^9, {3.6756388939472303`*^9, 3.675638974460075*^9}, {
   3.675639264892281*^9, 3.675639265779285*^9}, 3.6756395060809813`*^9, {
   3.675639782614675*^9, 3.675639805898982*^9}, {3.675639881686159*^9, 
   3.675639902744451*^9}, {3.675639937050768*^9, 3.6756399380799417`*^9}, {
   3.675640033971973*^9, 3.675640041381866*^9}, {3.675640163914832*^9, 
   3.6756402719864273`*^9}, {3.675640840800428*^9, 3.6756408694952517`*^9}, {
   3.6756409461559153`*^9, 3.67564094804532*^9}, {3.67564098135917*^9, 
   3.6756409883967113`*^9}, {3.675641786480195*^9, 3.675641788154879*^9}, {
   3.675641942453095*^9, 3.675641951789341*^9}, {3.675641998031514*^9, 
   3.675642026921067*^9}, {3.6756421506443233`*^9, 3.6756421569204683`*^9}, {
   3.6756423575973053`*^9, 3.675642359133603*^9}, {3.675642392516817*^9, 
   3.675642435150269*^9}, 3.675643148506915*^9, {3.675643187864867*^9, 
   3.6756432650826406`*^9}, {3.675643298639474*^9, 3.675643312511554*^9}, {
   3.675643477937833*^9, 3.675643491390154*^9}, {3.675643533028427*^9, 
   3.675643534129662*^9}, {3.675643647413216*^9, 3.675643653239524*^9}, {
   3.675644006370685*^9, 3.675644008721895*^9}, {3.675644041447523*^9, 
   3.675644045608801*^9}, {3.67564408249072*^9, 3.675644107423276*^9}, {
   3.675644160003599*^9, 3.675644401401186*^9}, {3.675644438745514*^9, 
   3.675644476962397*^9}, {3.6756445333840637`*^9, 3.67564465645207*^9}, {
   3.675644708524632*^9, 3.67564483195013*^9}, {3.675644881929968*^9, 
   3.675644882636265*^9}, {3.67564497322083*^9, 3.675644976569487*^9}, {
   3.675645116920924*^9, 3.67564524722097*^9}, {3.675645277801531*^9, 
   3.6756452936481323`*^9}, {3.675645329366514*^9, 3.6756454120817423`*^9}, {
   3.675645504915917*^9, 3.675645506022974*^9}, {3.6756459190593157`*^9, 
   3.675645959685236*^9}, {3.675646272774136*^9, 3.6756464731085377`*^9}, {
   3.675646522999093*^9, 3.675646546767374*^9}, {3.675646611904669*^9, 
   3.675646651708723*^9}, {3.6756467250161743`*^9, 3.675646726010084*^9}, {
   3.675646912243997*^9, 3.675647015575171*^9}, {3.675647152637299*^9, 
   3.6756472318026133`*^9}, {3.675647267866625*^9, 3.675647469507214*^9}, {
   3.675647549875128*^9, 3.675647582045795*^9}, {3.675648118420217*^9, 
   3.675648149607161*^9}, {3.67564836404786*^9, 3.6756484082252407`*^9}, {
   3.675648452047771*^9, 3.675648452557015*^9}, {3.675648504498972*^9, 
   3.6756486170806007`*^9}, {3.675648926131168*^9, 3.675649098699285*^9}, {
   3.675649150157509*^9, 3.675649244813795*^9}, {3.675649363665085*^9, 
   3.675649478615514*^9}, {3.675649684599139*^9, 3.675649778442574*^9}, {
   3.675649928409943*^9, 3.675649931106159*^9}, {3.675650534676091*^9, 
   3.6756505441212473`*^9}, {3.675650859542553*^9, 3.675650900505924*^9}, {
   3.675651652024539*^9, 3.6756516677152567`*^9}, 3.675651702691696*^9, {
   3.675652579592457*^9, 3.675652603620767*^9}, {3.675652712684189*^9, 
   3.675652969422803*^9}, {3.675653036673423*^9, 3.675653044850178*^9}, {
   3.675653363643373*^9, 3.675653378875545*^9}, {3.675680840159539*^9, 
   3.675680844282016*^9}, {3.6756808752967997`*^9, 3.675680878476151*^9}, {
   3.675680963164999*^9, 3.6756809958892727`*^9}, 3.6756810724692507`*^9, {
   3.6756812732519827`*^9, 3.6756812784272337`*^9}, {3.6756813099276333`*^9, 
   3.675681312039772*^9}, {3.6756813462842093`*^9, 3.675681375653839*^9}, {
   3.6756814637685537`*^9, 3.6756815708069553`*^9}, {3.675681633036024*^9, 
   3.675681637981852*^9}, {3.6756816801641912`*^9, 3.675681730039166*^9}, {
   3.675681762985982*^9, 3.675681767074144*^9}, {3.675681829058957*^9, 
   3.6756818616041393`*^9}, {3.67568198424078*^9, 3.6756821608829393`*^9}, {
   3.675682239269741*^9, 3.675682304010648*^9}, {3.675682386072132*^9, 
   3.675682618961946*^9}, {3.675682708059915*^9, 3.675682712912022*^9}, {
   3.6756827527525053`*^9, 3.6756827847621098`*^9}, {3.6756828189647713`*^9, 
   3.675682854063284*^9}, {3.675682915589806*^9, 3.67568309775184*^9}, {
   3.675683138669539*^9, 3.6756832219213953`*^9}, {3.675683272948422*^9, 
   3.6756833968455963`*^9}, 3.675683625400383*^9, {3.675683663717327*^9, 
   3.675683897739739*^9}, {3.675683957630926*^9, 3.675683960875428*^9}, {
   3.675684042471459*^9, 3.675684045430881*^9}, {3.675684075621793*^9, 
   3.675684170531348*^9}, {3.675684205413377*^9, 3.675684206809568*^9}, {
   3.6756842474751177`*^9, 3.6756842513084106`*^9}, {3.675684282554977*^9, 
   3.675684620481742*^9}, {3.675685861093348*^9, 3.675685916015959*^9}, {
   3.675687262929701*^9, 3.675687267853016*^9}, {3.6756911137630997`*^9, 
   3.675691295071599*^9}, {3.675691818463674*^9, 3.675691911634408*^9}, {
   3.675691982206231*^9, 3.675692017764428*^9}, {3.675692048406678*^9, 
   3.675692050291539*^9}, {3.675692461460575*^9, 3.675692498129101*^9}, {
   3.675692594971529*^9, 3.675692596282248*^9}, {3.675692628310008*^9, 
   3.6756927025090847`*^9}, {3.675693045446027*^9, 3.675693136575136*^9}, {
   3.675693166680669*^9, 3.675693308578483*^9}, {3.675693359148446*^9, 
   3.6756934150000467`*^9}, {3.6756934681761*^9, 3.675693505379455*^9}, {
   3.675694037365425*^9, 3.675694121493616*^9}, {3.675694157471404*^9, 
   3.675694169578959*^9}, {3.675694269593649*^9, 3.675694280190732*^9}, {
   3.675694361097788*^9, 3.675694385706374*^9}, {3.675694436807736*^9, 
   3.675694451253808*^9}, {3.675694622965588*^9, 3.675694702027678*^9}, {
   3.675695329973074*^9, 3.675695340364731*^9}, {3.675695466426776*^9, 
   3.675695495091762*^9}, {3.675695552677455*^9, 3.675695605831308*^9}, {
   3.675697752172907*^9, 3.675697766656589*^9}, {3.675697850073863*^9, 
   3.6756978738575068`*^9}, {3.676121984898085*^9, 3.67612208551959*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1855, 1028},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
Magnification->1.5,
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]

